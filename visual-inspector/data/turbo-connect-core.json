{
    "change_history": {
        "changes_matrix": [
            [
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                0,
                2,
                4,
                2,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                2,
                0,
                0,
                0,
                2,
                0,
                2,
                0,
                2,
                0,
                2,
                0,
                2,
                0,
                2,
                0,
                2,
                0,
                2,
                0,
                2,
                0,
                2,
                0,
                2,
                0,
                2,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                4,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                10,
                6,
                4,
                0,
                6,
                4,
                4,
                6,
                6,
                2,
                0,
                0,
                4,
                0,
                2,
                0,
                6,
                0,
                0,
                4,
                6,
                0,
                0,
                4,
                6,
                4,
                2,
                4,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2
            ],
            [
                0,
                0,
                0,
                0,
                10,
                0,
                4,
                4,
                0,
                6,
                4,
                4,
                6,
                6,
                2,
                0,
                0,
                2,
                0,
                2,
                0,
                6,
                0,
                0,
                4,
                4,
                0,
                0,
                4,
                4,
                4,
                2,
                4,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2
            ],
            [
                0,
                0,
                0,
                0,
                6,
                4,
                0,
                8,
                2,
                6,
                6,
                6,
                6,
                4,
                2,
                4,
                4,
                0,
                0,
                2,
                2,
                4,
                0,
                0,
                4,
                6,
                0,
                0,
                4,
                6,
                4,
                2,
                4,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2
            ],
            [
                0,
                0,
                0,
                0,
                4,
                4,
                8,
                0,
                4,
                6,
                4,
                4,
                4,
                4,
                4,
                2,
                2,
                0,
                0,
                2,
                0,
                2,
                0,
                0,
                4,
                4,
                0,
                0,
                4,
                6,
                4,
                2,
                4,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2
            ],
            [
                2,
                0,
                0,
                0,
                0,
                0,
                2,
                4,
                0,
                8,
                2,
                0,
                2,
                2,
                6,
                2,
                2,
                0,
                2,
                10,
                0,
                0,
                2,
                2,
                2,
                2,
                0,
                0,
                0,
                8,
                4,
                2,
                2,
                2,
                4,
                2,
                4,
                2,
                4,
                2,
                4,
                2,
                4,
                2,
                4,
                2,
                4,
                2,
                4,
                2,
                4,
                2,
                4,
                2,
                4,
                2,
                4,
                2
            ],
            [
                4,
                0,
                0,
                2,
                6,
                6,
                6,
                6,
                8,
                0,
                10,
                10,
                6,
                6,
                6,
                2,
                2,
                2,
                0,
                14,
                0,
                4,
                2,
                0,
                8,
                8,
                0,
                0,
                6,
                14,
                12,
                6,
                8,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4
            ],
            [
                2,
                0,
                0,
                0,
                4,
                4,
                6,
                4,
                2,
                10,
                0,
                10,
                6,
                4,
                2,
                2,
                0,
                0,
                0,
                6,
                2,
                4,
                0,
                0,
                6,
                6,
                0,
                0,
                6,
                10,
                8,
                2,
                6,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2
            ],
            [
                2,
                0,
                0,
                2,
                4,
                4,
                6,
                4,
                0,
                10,
                10,
                0,
                6,
                4,
                2,
                2,
                0,
                0,
                0,
                4,
                2,
                4,
                0,
                0,
                6,
                6,
                0,
                0,
                6,
                8,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2
            ],
            [
                0,
                0,
                0,
                0,
                6,
                6,
                6,
                4,
                2,
                6,
                6,
                6,
                0,
                8,
                4,
                2,
                0,
                0,
                0,
                4,
                2,
                8,
                4,
                0,
                6,
                6,
                0,
                0,
                4,
                6,
                6,
                4,
                6,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                0,
                0,
                0,
                0,
                6,
                6,
                4,
                4,
                2,
                6,
                4,
                4,
                8,
                0,
                4,
                0,
                0,
                0,
                0,
                4,
                0,
                4,
                2,
                0,
                6,
                6,
                0,
                0,
                4,
                6,
                6,
                4,
                6,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                4,
                6,
                6,
                2,
                2,
                4,
                4,
                0,
                0,
                2,
                0,
                0,
                4,
                0,
                0,
                4,
                0,
                4,
                4,
                0,
                0,
                2,
                8,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                2,
                2,
                2,
                2,
                2,
                2,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                2,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                2,
                2,
                2,
                0,
                0,
                0,
                0,
                2,
                2,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                4,
                2,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                10,
                14,
                6,
                4,
                4,
                4,
                4,
                2,
                2,
                0,
                2,
                0,
                0,
                2,
                2,
                2,
                4,
                4,
                0,
                0,
                2,
                10,
                8,
                4,
                4,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2,
                8,
                2
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                6,
                6,
                4,
                2,
                0,
                4,
                4,
                4,
                8,
                4,
                0,
                2,
                0,
                2,
                0,
                2,
                2,
                0,
                2,
                0,
                2,
                2,
                0,
                0,
                2,
                2,
                2,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                2,
                0,
                0,
                4,
                2,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                2,
                0,
                0,
                2,
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                4,
                4,
                4,
                4,
                2,
                8,
                6,
                6,
                6,
                6,
                4,
                0,
                0,
                0,
                0,
                4,
                0,
                2,
                2,
                0,
                0,
                10,
                0,
                0,
                8,
                8,
                6,
                4,
                6,
                4,
                6,
                4,
                6,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4
            ],
            [
                0,
                0,
                0,
                0,
                6,
                4,
                6,
                4,
                2,
                8,
                6,
                6,
                6,
                6,
                4,
                0,
                0,
                0,
                0,
                4,
                0,
                2,
                2,
                0,
                10,
                0,
                0,
                0,
                10,
                16,
                6,
                4,
                6,
                4,
                6,
                4,
                6,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                4,
                4,
                4,
                4,
                0,
                6,
                6,
                6,
                4,
                4,
                2,
                0,
                0,
                0,
                0,
                2,
                0,
                2,
                0,
                0,
                8,
                10,
                0,
                0,
                0,
                8,
                4,
                2,
                4,
                2,
                4,
                2,
                4,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2,
                6,
                2
            ],
            [
                2,
                0,
                0,
                0,
                6,
                4,
                6,
                6,
                8,
                14,
                10,
                8,
                6,
                6,
                8,
                0,
                0,
                0,
                0,
                10,
                0,
                2,
                2,
                0,
                8,
                16,
                2,
                2,
                8,
                0,
                12,
                6,
                10,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4
            ],
            [
                2,
                0,
                2,
                2,
                4,
                4,
                4,
                4,
                4,
                12,
                8,
                6,
                6,
                6,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                2,
                2,
                0,
                6,
                6,
                0,
                0,
                4,
                12,
                0,
                12,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4,
                10,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                6,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                4,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                6,
                12,
                0,
                6,
                4,
                6,
                4,
                6,
                4,
                6,
                4,
                6,
                4,
                6,
                4,
                6,
                4,
                6,
                4,
                6,
                4,
                6,
                4,
                6,
                4,
                6,
                4,
                6,
                4
            ],
            [
                0,
                0,
                0,
                0,
                4,
                4,
                4,
                4,
                2,
                8,
                6,
                6,
                6,
                6,
                4,
                0,
                0,
                0,
                0,
                4,
                0,
                2,
                2,
                0,
                6,
                6,
                0,
                0,
                4,
                10,
                10,
                6,
                0,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                8,
                4,
                10,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                0,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                4,
                10,
                8,
                6,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                0,
                2,
                0,
                6,
                6,
                0,
                0,
                4,
                12,
                10,
                6,
                8,
                4,
                0,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                4,
                4,
                0,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                4,
                10,
                8,
                6,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                0,
                2,
                0,
                6,
                6,
                0,
                0,
                4,
                12,
                10,
                6,
                8,
                4,
                12,
                4,
                0,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4,
                12,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                0,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                4,
                10,
                8,
                6,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                0,
                2,
                0,
                8,
                8,
                0,
                0,
                6,
                12,
                10,
                6,
                8,
                4,
                12,
                4,
                12,
                4,
                0,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                0,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                4,
                10,
                8,
                6,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                0,
                2,
                0,
                8,
                8,
                0,
                0,
                6,
                12,
                10,
                6,
                8,
                4,
                12,
                4,
                12,
                4,
                14,
                4,
                0,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                0,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                4,
                10,
                8,
                6,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                0,
                2,
                0,
                8,
                8,
                0,
                0,
                6,
                12,
                10,
                6,
                8,
                4,
                12,
                4,
                12,
                4,
                14,
                4,
                14,
                4,
                0,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                0,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                4,
                10,
                8,
                6,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                0,
                2,
                0,
                8,
                8,
                0,
                0,
                6,
                12,
                10,
                6,
                8,
                4,
                12,
                4,
                12,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                0,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                0,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                4,
                10,
                8,
                6,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                0,
                2,
                0,
                8,
                8,
                0,
                0,
                6,
                12,
                10,
                6,
                8,
                4,
                12,
                4,
                12,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                0,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                0,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                4,
                10,
                8,
                6,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                0,
                2,
                0,
                8,
                8,
                0,
                0,
                6,
                12,
                10,
                6,
                8,
                4,
                12,
                4,
                12,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                0,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                0,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                4,
                10,
                8,
                6,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                0,
                2,
                0,
                8,
                8,
                0,
                0,
                6,
                12,
                10,
                6,
                8,
                4,
                12,
                4,
                12,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                0,
                4,
                14,
                4,
                14,
                4,
                14,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                0,
                4,
                4,
                4,
                4,
                4,
                4
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                4,
                10,
                8,
                6,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                0,
                2,
                0,
                8,
                8,
                0,
                0,
                6,
                12,
                10,
                6,
                8,
                4,
                12,
                4,
                12,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                0,
                4,
                14,
                4,
                14,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                0,
                4,
                4,
                4,
                4
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                4,
                10,
                8,
                6,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                0,
                2,
                0,
                8,
                8,
                0,
                0,
                6,
                12,
                10,
                6,
                8,
                4,
                12,
                4,
                12,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                0,
                4,
                14,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                0,
                4,
                4
            ],
            [
                2,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                4,
                10,
                8,
                6,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                8,
                0,
                0,
                2,
                0,
                8,
                8,
                0,
                0,
                6,
                12,
                10,
                6,
                10,
                4,
                12,
                4,
                12,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                14,
                4,
                0,
                4
            ],
            [
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                4,
                2,
                2,
                4,
                4,
                4,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                2,
                0,
                4,
                4,
                0,
                0,
                2,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                0
            ]
        ],
        "filelist": [
            "run",
            "start-tdd",
            "run-clang-format.py",
            "unit_tests_and_coverage.sh",
            "identification_sequence.cpp",
            "identification_sequence.h",
            "identify.cpp",
            "identify.h",
            "parameter.cpp",
            "parameter.h",
            "parameter_info.cpp",
            "parameter_info.h",
            "protocol_factory.cpp",
            "protocol_factory.h",
            "turbo-connect-core.h",
            "bike_identification_test.cpp",
            "ble_service_identification_test.cpp",
            "identification_sequence_test.cpp",
            "parameter_test.cpp",
            "property_decoding_test.cpp",
            "property_encoding_test.cpp",
            "protocol_factory_test.cpp",
            "protocol_test.cpp",
            "test_utils.h",
            "BikeParameter.kt",
            "BikeParameter.swift",
            "Parameters.kt",
            "Parameters.swift",
            "bike_parameters.h",
            "generate_protocol_sources.py",
            "iprotocol.cpp",
            "iprotocol.h",
            "protocol_identification.cpp",
            "protocol_identification.h",
            "protocol_legacy20.cpp",
            "protocol_legacy20.h",
            "protocol_legacy22.cpp",
            "protocol_legacy22.h",
            "protocol_rx0c.cpp",
            "protocol_rx0c.h",
            "protocol_rx0d.cpp",
            "protocol_rx0d.h",
            "protocol_rx0e.cpp",
            "protocol_rx0e.h",
            "protocol_rx0f.cpp",
            "protocol_rx0f.h",
            "protocol_rx10.cpp",
            "protocol_rx10.h",
            "protocol_rx11.cpp",
            "protocol_rx11.h",
            "protocol_rx12.cpp",
            "protocol_rx12.h",
            "protocol_rx13.cpp",
            "protocol_rx13.h",
            "protocol_rx14.cpp",
            "protocol_rx14.h",
            "protocol_rx15.cpp",
            "protocol_rx15.h"
        ]
    },
    "children": [
        {
            "meta": {
                "aggregate_complexity": 5,
                "blank_lines": 10,
                "decision_complexity": 3,
                "extension": "",
                "imports": [],
                "is_code": true,
                "libraries": [],
                "loc": 77,
                "mime": "text/x-shellscript; charset=us-ascii",
                "name": "run",
                "nested_complexity": 2,
                "path": "turbo-connect-core/run",
                "risks": [],
                "risks_points": 0,
                "size": 1893,
                "sloc": 67,
                "type": "Bourne-Again shell script, ASCII text executable"
            },
            "name": "run",
            "value": 5
        },
        {
            "meta": {
                "aggregate_complexity": 1,
                "blank_lines": 2,
                "decision_complexity": 0,
                "extension": "",
                "imports": [],
                "is_code": true,
                "libraries": [],
                "loc": 6,
                "mime": "text/x-shellscript; charset=us-ascii",
                "name": "start-tdd",
                "nested_complexity": 0,
                "path": "turbo-connect-core/start-tdd",
                "risks": [],
                "risks_points": 0,
                "size": 125,
                "sloc": 4,
                "type": "Bourne-Again shell script, ASCII text executable"
            },
            "name": "start-tdd",
            "value": 1
        },
        {
            "children": [
                {
                    "meta": {
                        "aggregate_complexity": 67,
                        "blank_lines": 58,
                        "decision_complexity": 52,
                        "extension": ".py",
                        "imports": [],
                        "is_code": true,
                        "libraries": [
                            "__future__",
                            "argparse",
                            "codecs",
                            "difflib",
                            "fnmatch",
                            "io",
                            "errno",
                            "multiprocessing",
                            "os",
                            "signal",
                            "subprocess",
                            "sys",
                            "traceback",
                            "functools"
                        ],
                        "loc": 380,
                        "mime": "text/x-python; charset=us-ascii",
                        "name": "run-clang-format",
                        "nested_complexity": 1,
                        "path": "turbo-connect-core/scripts/run-clang-format.py",
                        "risks": [
                            "[info] Arguably many lines of code, this may be ok for now.",
                            "[info] Arguably many decisions, it is ok if it makes other files less complicated."
                        ],
                        "risks_points": 7,
                        "size": 11581,
                        "sloc": 322,
                        "type": "Python script, ASCII text executable"
                    },
                    "name": "run-clang-format.py",
                    "value": 67
                },
                {
                    "meta": {
                        "aggregate_complexity": 10,
                        "blank_lines": 12,
                        "decision_complexity": 9,
                        "extension": ".sh",
                        "imports": [],
                        "is_code": true,
                        "libraries": [],
                        "loc": 73,
                        "mime": "text/plain; charset=us-ascii",
                        "name": "unit_tests_and_coverage",
                        "nested_complexity": 1,
                        "path": "turbo-connect-core/scripts/unit_tests_and_coverage.sh",
                        "risks": [],
                        "risks_points": 0,
                        "size": 2143,
                        "sloc": 61,
                        "type": "ASCII text"
                    },
                    "name": "unit_tests_and_coverage.sh",
                    "value": 10
                }
            ],
            "counter": {
                "bytes_count": 13724,
                "risks_count": 2,
                "sloc_count": 383,
                "source_files": 2,
                "value_count": 77
            },
            "name": "scripts"
        },
        {
            "children": [
                {
                    "meta": {
                        "aggregate_complexity": 20,
                        "blank_lines": 24,
                        "decision_complexity": 15,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/identification_sequence.h"
                        ],
                        "is_code": true,
                        "libraries": [],
                        "loc": 133,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "identification_sequence",
                        "nested_complexity": 4,
                        "path": "turbo-connect-core/src/identification_sequence.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 3551,
                        "sloc": 109,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "identification_sequence.cpp",
                    "value": 20
                },
                {
                    "meta": {
                        "aggregate_complexity": 9,
                        "blank_lines": 10,
                        "decision_complexity": 0,
                        "extension": ".h",
                        "imports": [
                            "turbo-connect-core/src/identify.h",
                            "turbo-connect-core/src/protocol/bike_parameters.h",
                            "turbo-connect-core/src/protocol/protocol_identification.h",
                            "turbo-connect-core/src/protocol_factory.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "string",
                            "vector"
                        ],
                        "loc": 39,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "identification_sequence",
                        "nested_complexity": 3,
                        "path": "turbo-connect-core/src/identification_sequence.h",
                        "risks": [],
                        "risks_points": 0,
                        "size": 824,
                        "sloc": 29,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "identification_sequence.h",
                    "value": 9
                },
                {
                    "meta": {
                        "aggregate_complexity": 19,
                        "blank_lines": 66,
                        "decision_complexity": 9,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/identify.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "algorithm",
                            "array",
                            "iomanip",
                            "sstream"
                        ],
                        "loc": 172,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "identify",
                        "nested_complexity": 5,
                        "path": "turbo-connect-core/src/identify.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 4784,
                        "sloc": 106,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "identify.cpp",
                    "value": 19
                },
                {
                    "meta": {
                        "aggregate_complexity": 6,
                        "blank_lines": 9,
                        "decision_complexity": 0,
                        "extension": ".h",
                        "imports": [
                            "turbo-connect-core/src/parameter.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "map",
                            "string",
                            "vector"
                        ],
                        "loc": 33,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "identify",
                        "nested_complexity": 2,
                        "path": "turbo-connect-core/src/identify.h",
                        "risks": [],
                        "risks_points": 0,
                        "size": 663,
                        "sloc": 24,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "identify.h",
                    "value": 6
                },
                {
                    "meta": {
                        "aggregate_complexity": 10,
                        "blank_lines": 13,
                        "decision_complexity": 5,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/parameter.h",
                            "turbo-connect-core/src/parameter_info.h"
                        ],
                        "is_code": true,
                        "libraries": [],
                        "loc": 72,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "parameter",
                        "nested_complexity": 3,
                        "path": "turbo-connect-core/src/parameter.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 1470,
                        "sloc": 59,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "parameter.cpp",
                    "value": 10
                },
                {
                    "meta": {
                        "aggregate_complexity": 5,
                        "blank_lines": 9,
                        "decision_complexity": 0,
                        "extension": ".h",
                        "imports": [
                            "turbo-connect-core/src/protocol/bike_parameters.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "string"
                        ],
                        "loc": 35,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "parameter",
                        "nested_complexity": 3,
                        "path": "turbo-connect-core/src/parameter.h",
                        "risks": [],
                        "risks_points": 0,
                        "size": 644,
                        "sloc": 26,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "parameter.h",
                    "value": 5
                },
                {
                    "meta": {
                        "aggregate_complexity": 15,
                        "blank_lines": 30,
                        "decision_complexity": 9,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/parameter_info.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "iomanip"
                        ],
                        "loc": 144,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "parameter_info",
                        "nested_complexity": 4,
                        "path": "turbo-connect-core/src/parameter_info.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 4431,
                        "sloc": 114,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "parameter_info.cpp",
                    "value": 15
                },
                {
                    "meta": {
                        "aggregate_complexity": 8,
                        "blank_lines": 13,
                        "decision_complexity": 0,
                        "extension": ".h",
                        "imports": [
                            "turbo-connect-core/src/parameter.h",
                            "turbo-connect-core/src/protocol/bike_parameters.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "functional",
                            "sstream",
                            "string",
                            "vector"
                        ],
                        "loc": 47,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "parameter_info",
                        "nested_complexity": 2,
                        "path": "turbo-connect-core/src/parameter_info.h",
                        "risks": [],
                        "risks_points": 0,
                        "size": 1910,
                        "sloc": 34,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "parameter_info.h",
                    "value": 8
                },
                {
                    "meta": {
                        "aggregate_complexity": 34,
                        "blank_lines": 10,
                        "decision_complexity": 16,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/protocol_factory.h",
                            "turbo-connect-core/src/protocol/protocol_legacy20.h",
                            "turbo-connect-core/src/protocol/protocol_legacy22.h",
                            "turbo-connect-core/src/protocol/protocol_rx0c.h",
                            "turbo-connect-core/src/protocol/protocol_rx0d.h",
                            "turbo-connect-core/src/protocol/protocol_rx0e.h",
                            "turbo-connect-core/src/protocol/protocol_rx0f.h",
                            "turbo-connect-core/src/protocol/protocol_rx10.h",
                            "turbo-connect-core/src/protocol/protocol_rx11.h",
                            "turbo-connect-core/src/protocol/protocol_rx12.h",
                            "turbo-connect-core/src/protocol/protocol_rx13.h",
                            "turbo-connect-core/src/protocol/protocol_rx14.h",
                            "turbo-connect-core/src/protocol/protocol_rx15.h"
                        ],
                        "is_code": true,
                        "libraries": [],
                        "loc": 85,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "protocol_factory",
                        "nested_complexity": 5,
                        "path": "turbo-connect-core/src/protocol_factory.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 3066,
                        "sloc": 75,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "protocol_factory.cpp",
                    "value": 34
                },
                {
                    "meta": {
                        "aggregate_complexity": 5,
                        "blank_lines": 6,
                        "decision_complexity": 0,
                        "extension": ".h",
                        "imports": [
                            "turbo-connect-core/src/identify.h",
                            "turbo-connect-core/src/protocol/iprotocol.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "string",
                            "vector"
                        ],
                        "loc": 15,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "protocol_factory",
                        "nested_complexity": 1,
                        "path": "turbo-connect-core/src/protocol_factory.h",
                        "risks": [],
                        "risks_points": 0,
                        "size": 295,
                        "sloc": 9,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "protocol_factory.h",
                    "value": 5
                },
                {
                    "meta": {
                        "aggregate_complexity": 6,
                        "blank_lines": 2,
                        "decision_complexity": 0,
                        "extension": ".h",
                        "imports": [
                            "turbo-connect-core/src/identification_sequence.h",
                            "turbo-connect-core/src/identify.h",
                            "turbo-connect-core/src/parameter.h",
                            "turbo-connect-core/src/parameter_info.h",
                            "turbo-connect-core/src/protocol_factory.h"
                        ],
                        "is_code": true,
                        "libraries": [],
                        "loc": 8,
                        "mime": "text/x-c; charset=us-ascii",
                        "name": "turbo-connect-core",
                        "nested_complexity": 0,
                        "path": "turbo-connect-core/src/turbo-connect-core.h",
                        "risks": [],
                        "risks_points": 0,
                        "size": 154,
                        "sloc": 6,
                        "type": "C source, ASCII text"
                    },
                    "name": "turbo-connect-core.h",
                    "value": 6
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 7,
                                "decision_complexity": 0,
                                "extension": ".kt",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 110,
                                "mime": "text/plain; charset=us-ascii",
                                "name": "BikeParameter",
                                "nested_complexity": 3,
                                "path": "turbo-connect-core/src/protocol/BikeParameter.kt",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3488,
                                "sloc": 103,
                                "type": "ASCII text"
                            },
                            "name": "BikeParameter.kt",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 5,
                                "decision_complexity": 0,
                                "extension": ".swift",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "Foundation"
                                ],
                                "loc": 103,
                                "mime": "text/plain; charset=us-ascii",
                                "name": "BikeParameter",
                                "nested_complexity": 1,
                                "path": "turbo-connect-core/src/protocol/BikeParameter.swift",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3460,
                                "sloc": 98,
                                "type": "ASCII text"
                            },
                            "name": "BikeParameter.swift",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".kt",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "com/specialized/turboconnect/model/BikeParameter/",
                                    "kotlinx/serialization/KSerializer"
                                ],
                                "loc": 125,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Parameters",
                                "nested_complexity": 4,
                                "path": "turbo-connect-core/src/protocol/Parameters.kt",
                                "risks": [],
                                "risks_points": 0,
                                "size": 17645,
                                "sloc": 119,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Parameters.kt",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".swift",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 110,
                                "mime": "text/plain; charset=us-ascii",
                                "name": "Parameters",
                                "nested_complexity": 1,
                                "path": "turbo-connect-core/src/protocol/Parameters.swift",
                                "risks": [],
                                "risks_points": 0,
                                "size": 8442,
                                "sloc": 104,
                                "type": "ASCII text"
                            },
                            "name": "Parameters.swift",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 8,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 109,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "bike_parameters",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/bike_parameters.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2889,
                                "sloc": 101,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "bike_parameters.h",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 22,
                                "blank_lines": 424,
                                "decision_complexity": 14,
                                "extension": ".py",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "re",
                                    "operator",
                                    "collections",
                                    "pandas",
                                    "jinja2"
                                ],
                                "loc": 604,
                                "mime": "text/x-python; charset=us-ascii",
                                "name": "generate_protocol_sources",
                                "nested_complexity": 3,
                                "path": "turbo-connect-core/src/protocol/generate_protocol_sources.py",
                                "risks": [],
                                "risks_points": 0,
                                "size": 19832,
                                "sloc": 180,
                                "type": "Python script, ASCII text executable"
                            },
                            "name": "generate_protocol_sources.py",
                            "value": 22
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 23,
                                "decision_complexity": 6,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 95,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "iprotocol",
                                "nested_complexity": 4,
                                "path": "turbo-connect-core/src/protocol/iprotocol.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2727,
                                "sloc": 72,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "iprotocol.cpp",
                            "value": 11
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 10,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/parameter.h",
                                    "turbo-connect-core/src/parameter_info.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "map",
                                    "vector"
                                ],
                                "loc": 31,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "iprotocol",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/iprotocol.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 578,
                                "sloc": 21,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "iprotocol.h",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 12,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_identification.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 34,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_identification",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_identification.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2138,
                                "sloc": 22,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_identification.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_identification",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_identification.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 239,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_identification.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_legacy20.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 119,
                                "mime": "text/x-c++; charset=utf-8",
                                "name": "protocol_legacy20",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_legacy20.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 14069,
                                "sloc": 106,
                                "type": "C++ source, UTF-8 Unicode text"
                            },
                            "name": "protocol_legacy20.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_legacy20",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_legacy20.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 221,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_legacy20.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_legacy22.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 119,
                                "mime": "text/x-c++; charset=utf-8",
                                "name": "protocol_legacy22",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_legacy22.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 14069,
                                "sloc": 106,
                                "type": "C++ source, UTF-8 Unicode text"
                            },
                            "name": "protocol_legacy22.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_legacy22",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_legacy22.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 221,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_legacy22.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_rx0c.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 173,
                                "mime": "text/x-c++; charset=utf-8",
                                "name": "protocol_rx0c",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_rx0c.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 21703,
                                "sloc": 160,
                                "type": "C++ source, UTF-8 Unicode text"
                            },
                            "name": "protocol_rx0c.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_rx0c",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_rx0c.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 209,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_rx0c.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_rx0d.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 173,
                                "mime": "text/x-c++; charset=utf-8",
                                "name": "protocol_rx0d",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_rx0d.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 21703,
                                "sloc": 160,
                                "type": "C++ source, UTF-8 Unicode text"
                            },
                            "name": "protocol_rx0d.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_rx0d",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_rx0d.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 209,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_rx0d.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_rx0e.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 185,
                                "mime": "text/x-c++; charset=utf-8",
                                "name": "protocol_rx0e",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_rx0e.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 23423,
                                "sloc": 172,
                                "type": "C++ source, UTF-8 Unicode text"
                            },
                            "name": "protocol_rx0e.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_rx0e",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_rx0e.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 209,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_rx0e.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_rx0f.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 185,
                                "mime": "text/x-c++; charset=utf-8",
                                "name": "protocol_rx0f",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_rx0f.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 23423,
                                "sloc": 172,
                                "type": "C++ source, UTF-8 Unicode text"
                            },
                            "name": "protocol_rx0f.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_rx0f",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_rx0f.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 209,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_rx0f.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_rx10.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 185,
                                "mime": "text/x-c++; charset=utf-8",
                                "name": "protocol_rx10",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_rx10.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 23423,
                                "sloc": 172,
                                "type": "C++ source, UTF-8 Unicode text"
                            },
                            "name": "protocol_rx10.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_rx10",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_rx10.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 209,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_rx10.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_rx11.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 187,
                                "mime": "text/x-c++; charset=utf-8",
                                "name": "protocol_rx11",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_rx11.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 23708,
                                "sloc": 174,
                                "type": "C++ source, UTF-8 Unicode text"
                            },
                            "name": "protocol_rx11.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_rx11",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_rx11.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 209,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_rx11.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_rx12.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 187,
                                "mime": "text/x-c++; charset=utf-8",
                                "name": "protocol_rx12",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_rx12.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 23708,
                                "sloc": 174,
                                "type": "C++ source, UTF-8 Unicode text"
                            },
                            "name": "protocol_rx12.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_rx12",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_rx12.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 209,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_rx12.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_rx13.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 187,
                                "mime": "text/x-c++; charset=utf-8",
                                "name": "protocol_rx13",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_rx13.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 23708,
                                "sloc": 174,
                                "type": "C++ source, UTF-8 Unicode text"
                            },
                            "name": "protocol_rx13.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_rx13",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_rx13.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 209,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_rx13.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_rx14.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 189,
                                "mime": "text/x-c++; charset=utf-8",
                                "name": "protocol_rx14",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_rx14.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 23992,
                                "sloc": 176,
                                "type": "C++ source, UTF-8 Unicode text"
                            },
                            "name": "protocol_rx14.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_rx14",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_rx14.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 209,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_rx14.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "turbo-connect-core/src/protocol/protocol_rx15.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 199,
                                "mime": "text/x-c++; charset=utf-8",
                                "name": "protocol_rx15",
                                "nested_complexity": 5,
                                "path": "turbo-connect-core/src/protocol/protocol_rx15.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 25451,
                                "sloc": 186,
                                "type": "C++ source, UTF-8 Unicode text"
                            },
                            "name": "protocol_rx15.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 3,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "turbo-connect-core/src/protocol/iprotocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "protocol_rx15",
                                "nested_complexity": 2,
                                "path": "turbo-connect-core/src/protocol/protocol_rx15.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 209,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "protocol_rx15.h",
                            "value": 3
                        }
                    ],
                    "counter": {
                        "bytes_count": 326350,
                        "risks_count": 0,
                        "sloc_count": 2882,
                        "source_files": 34,
                        "value_count": 170
                    },
                    "name": "protocol"
                }
            ],
            "counter": {
                "bytes_count": 348142,
                "risks_count": 0,
                "sloc_count": 3473,
                "source_files": 45,
                "value_count": 307
            },
            "name": "src"
        },
        {
            "children": [
                {
                    "meta": {
                        "aggregate_complexity": 8,
                        "blank_lines": 32,
                        "decision_complexity": 0,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/turbo-connect-core.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "gtest/gtest.h",
                            "string",
                            "vector",
                            "map"
                        ],
                        "loc": 105,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "bike_identification_test",
                        "nested_complexity": 3,
                        "path": "turbo-connect-core/test/bike_identification_test.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 2435,
                        "sloc": 73,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "bike_identification_test.cpp",
                    "value": 8
                },
                {
                    "meta": {
                        "aggregate_complexity": 4,
                        "blank_lines": 16,
                        "decision_complexity": 0,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/turbo-connect-core.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "gtest/gtest.h",
                            "string"
                        ],
                        "loc": 75,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "ble_service_identification_test",
                        "nested_complexity": 1,
                        "path": "turbo-connect-core/test/ble_service_identification_test.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 2838,
                        "sloc": 59,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "ble_service_identification_test.cpp",
                    "value": 4
                },
                {
                    "meta": {
                        "aggregate_complexity": 4,
                        "blank_lines": 68,
                        "decision_complexity": 0,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/turbo-connect-core.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "gtest/gtest.h"
                        ],
                        "loc": 236,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "identification_sequence_test",
                        "nested_complexity": 2,
                        "path": "turbo-connect-core/test/identification_sequence_test.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 7207,
                        "sloc": 168,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "identification_sequence_test.cpp",
                    "value": 4
                },
                {
                    "meta": {
                        "aggregate_complexity": 5,
                        "blank_lines": 8,
                        "decision_complexity": 0,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/turbo-connect-core.h",
                            "turbo-connect-core/test/test_utils.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "gtest/gtest.h"
                        ],
                        "loc": 25,
                        "mime": "text/x-c; charset=us-ascii",
                        "name": "parameter_test",
                        "nested_complexity": 2,
                        "path": "turbo-connect-core/test/parameter_test.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 544,
                        "sloc": 17,
                        "type": "C source, ASCII text"
                    },
                    "name": "parameter_test.cpp",
                    "value": 5
                },
                {
                    "meta": {
                        "aggregate_complexity": 9,
                        "blank_lines": 29,
                        "decision_complexity": 1,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/turbo-connect-core.h",
                            "turbo-connect-core/test/test_utils.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "gtest/gtest.h",
                            "vector",
                            "string"
                        ],
                        "loc": 202,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "property_decoding_test",
                        "nested_complexity": 3,
                        "path": "turbo-connect-core/test/property_decoding_test.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 7381,
                        "sloc": 173,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "property_decoding_test.cpp",
                    "value": 9
                },
                {
                    "meta": {
                        "aggregate_complexity": 6,
                        "blank_lines": 17,
                        "decision_complexity": 1,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/turbo-connect-core.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "gtest/gtest.h"
                        ],
                        "loc": 56,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "property_encoding_test",
                        "nested_complexity": 3,
                        "path": "turbo-connect-core/test/property_encoding_test.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 1186,
                        "sloc": 39,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "property_encoding_test.cpp",
                    "value": 6
                },
                {
                    "meta": {
                        "aggregate_complexity": 5,
                        "blank_lines": 17,
                        "decision_complexity": 0,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/turbo-connect-core.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "gtest/gtest.h",
                            "string",
                            "iostream"
                        ],
                        "loc": 101,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "protocol_factory_test",
                        "nested_complexity": 1,
                        "path": "turbo-connect-core/test/protocol_factory_test.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 4272,
                        "sloc": 84,
                        "type": "C++ source, ASCII text"
                    },
                    "name": "protocol_factory_test.cpp",
                    "value": 5
                },
                {
                    "meta": {
                        "aggregate_complexity": 3,
                        "blank_lines": 7,
                        "decision_complexity": 0,
                        "extension": ".cpp",
                        "imports": [
                            "turbo-connect-core/src/turbo-connect-core.h"
                        ],
                        "is_code": true,
                        "libraries": [
                            "gtest/gtest.h"
                        ],
                        "loc": 16,
                        "mime": "text/x-c; charset=us-ascii",
                        "name": "protocol_test",
                        "nested_complexity": 1,
                        "path": "turbo-connect-core/test/protocol_test.cpp",
                        "risks": [],
                        "risks_points": 0,
                        "size": 390,
                        "sloc": 9,
                        "type": "C source, ASCII text"
                    },
                    "name": "protocol_test.cpp",
                    "value": 3
                },
                {
                    "meta": {
                        "aggregate_complexity": 1,
                        "blank_lines": 3,
                        "decision_complexity": 0,
                        "extension": ".h",
                        "imports": [],
                        "is_code": true,
                        "libraries": [],
                        "loc": 9,
                        "mime": "text/x-c; charset=us-ascii",
                        "name": "test_utils",
                        "nested_complexity": 0,
                        "path": "turbo-connect-core/test/test_utils.h",
                        "risks": [],
                        "risks_points": 0,
                        "size": 289,
                        "sloc": 6,
                        "type": "C source, ASCII text"
                    },
                    "name": "test_utils.h",
                    "value": 1
                }
            ],
            "counter": {
                "bytes_count": 26542,
                "risks_count": 0,
                "sloc_count": 628,
                "source_files": 9,
                "value_count": 45
            },
            "name": "test"
        }
    ],
    "counter": {
        "bytes_count": 390426,
        "risks_count": 2,
        "sloc_count": 4555,
        "source_files": 58,
        "value_count": 435
    },
    "name": "turbo-connect-core"
}