{
    "children": [
        {
            "children": [
                {
                    "meta": {
                        "aggregate_complexity": 10,
                        "blank_lines": 52,
                        "decision_complexity": 8,
                        "extension": ".md",
                        "imports": [],
                        "is_code": true,
                        "libraries": [],
                        "loc": 147,
                        "mime": "text/x-c++; charset=us-ascii",
                        "name": "DBUS",
                        "nested_complexity": 2,
                        "path": "bloks/docs/DBUS.md",
                        "risks": [],
                        "risks_points": 0,
                        "size": 5483,
                        "sloc": 95,
                        "type": "C++ source, ASCII text, with very long lines"
                    },
                    "name": "DBUS.md",
                    "value": 10
                }
            ],
            "counter": {
                "bytes_count": 5483,
                "risks_count": 0,
                "sloc_count": 95,
                "source_files": 1,
                "value_count": 10
            },
            "name": "docs"
        },
        {
            "children": [
                {
                    "meta": {
                        "aggregate_complexity": 1,
                        "blank_lines": 38,
                        "decision_complexity": 0,
                        "extension": ".dox",
                        "imports": [],
                        "is_code": true,
                        "libraries": [],
                        "loc": 38,
                        "mime": "text/x-tex; charset=us-ascii",
                        "name": "BtConnectivity",
                        "nested_complexity": 0,
                        "path": "bloks/frontend-sdk/BtConnectivity.dox",
                        "risks": [],
                        "risks_points": 0,
                        "size": 3087,
                        "sloc": 0,
                        "type": "LaTeX document, ASCII text"
                    },
                    "name": "BtConnectivity.dox",
                    "value": 1
                },
                {
                    "meta": {
                        "aggregate_complexity": 1,
                        "blank_lines": 52,
                        "decision_complexity": 0,
                        "extension": ".dox",
                        "imports": [],
                        "is_code": true,
                        "libraries": [],
                        "loc": 52,
                        "mime": "text/x-tex; charset=us-ascii",
                        "name": "ComponentInfo",
                        "nested_complexity": 0,
                        "path": "bloks/frontend-sdk/ComponentInfo.dox",
                        "risks": [],
                        "risks_points": 0,
                        "size": 1841,
                        "sloc": 0,
                        "type": "LaTeX document, ASCII text"
                    },
                    "name": "ComponentInfo.dox",
                    "value": 1
                },
                {
                    "meta": {
                        "aggregate_complexity": 1,
                        "blank_lines": 20,
                        "decision_complexity": 0,
                        "extension": ".dox",
                        "imports": [],
                        "is_code": true,
                        "libraries": [],
                        "loc": 20,
                        "mime": "text/x-tex; charset=us-ascii",
                        "name": "MainPage",
                        "nested_complexity": 0,
                        "path": "bloks/frontend-sdk/MainPage.dox",
                        "risks": [],
                        "risks_points": 0,
                        "size": 501,
                        "sloc": 0,
                        "type": "LaTeX document, ASCII text"
                    },
                    "name": "MainPage.dox",
                    "value": 1
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 5,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/AsyncListener.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 37,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "AsyncListener",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/AsyncListener.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1381,
                                "sloc": 32,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "AsyncListener.cpp",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 23,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/BatteryState.h",
                                    "bloks/frontend-sdk/src/ComponentImplementation.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 99,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BatteryState",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/BatteryState.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2441,
                                "sloc": 76,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BatteryState.cpp",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 10,
                                "blank_lines": 10,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/PropertyId.h",
                                    "bloks/frontend-sdk/src/ComponentImplementation.h",
                                    "bloks/frontend-sdk/src/PropertySetter.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "typeindex"
                                ],
                                "loc": 37,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "ComponentImplementation",
                                "nested_complexity": 3,
                                "path": "bloks/frontend-sdk/src/ComponentImplementation.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 863,
                                "sloc": 27,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "ComponentImplementation.cpp",
                            "value": 10
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 17,
                                "blank_lines": 24,
                                "decision_complexity": 2,
                                "extension": ".h",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/PropertyBool.h",
                                    "bloks/frontend-sdk/include/bloks/PropertyFloat.h",
                                    "bloks/frontend-sdk/include/bloks/PropertyInt.h",
                                    "bloks/frontend-sdk/include/bloks/QueryableDate.h",
                                    "bloks/frontend-sdk/include/bloks/QueryableFloat.h",
                                    "bloks/frontend-sdk/include/bloks/QueryableInt.h",
                                    "bloks/frontend-sdk/include/bloks/QueryableString.h",
                                    "bloks/frontend-sdk/include/bloks/IndexedQueryableFloat.h",
                                    "bloks/frontend-sdk/src/PropertyHelper.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "typeindex"
                                ],
                                "loc": 80,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "ComponentImplementation",
                                "nested_complexity": 4,
                                "path": "bloks/frontend-sdk/src/ComponentImplementation.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2195,
                                "sloc": 56,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "ComponentImplementation.h",
                            "value": 17
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 4,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 9,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "Consts",
                                "nested_complexity": 1,
                                "path": "bloks/frontend-sdk/src/Consts.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 129,
                                "sloc": 5,
                                "type": "C source, ASCII text"
                            },
                            "name": "Consts.h",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 13,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/DisplayState.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 54,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "DisplayState",
                                "nested_complexity": 3,
                                "path": "bloks/frontend-sdk/src/DisplayState.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 975,
                                "sloc": 41,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "DisplayState.cpp",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 21,
                                "blank_lines": 27,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/Frontend.h",
                                    "bloks/frontend-sdk/include/bloks/VehicleState.h",
                                    "bloks/frontend-sdk/src/Consts.h",
                                    "bloks/frontend-sdk/include/bloks/BatteryState.h",
                                    "bloks/frontend-sdk/include/bloks/DisplayState.h",
                                    "bloks/frontend-sdk/include/bloks/GearShiftState.h",
                                    "bloks/frontend-sdk/include/bloks/LightState.h",
                                    "bloks/frontend-sdk/include/bloks/MotorState.h",
                                    "bloks/frontend-sdk/include/bloks/RemoteState.h",
                                    "bloks/frontend-sdk/include/bloks/SensorState.h",
                                    "bloks/frontend-sdk/include/bloks/AsyncListener.h",
                                    "bloks/frontend-sdk/include/bloks/BluetoothClient.h",
                                    "bloks/frontend-sdk/include/bloks/CentralDevice.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QQmlContext",
                                    "QtQml",
                                    "QLoggingCategory"
                                ],
                                "loc": 104,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Frontend",
                                "nested_complexity": 4,
                                "path": "bloks/frontend-sdk/src/Frontend.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3089,
                                "sloc": 77,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Frontend.cpp",
                            "value": 21
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 17,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/GearShiftState.h",
                                    "bloks/frontend-sdk/src/ComponentImplementation.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 71,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "GearShiftState",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/GearShiftState.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1706,
                                "sloc": 54,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "GearShiftState.cpp",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/IndexedQueryableFloat.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "IndexedQueryableFloat",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/IndexedQueryableFloat.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 202,
                                "sloc": 7,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "IndexedQueryableFloat.cpp",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 10,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/LightState.h",
                                    "bloks/frontend-sdk/src/ComponentImplementation.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 28,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "LightState",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/LightState.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 512,
                                "sloc": 18,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "LightState.cpp",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 4,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QLoggingCategory"
                                ],
                                "loc": 7,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "Log",
                                "nested_complexity": 0,
                                "path": "bloks/frontend-sdk/src/Log.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 111,
                                "sloc": 3,
                                "type": "C source, ASCII text"
                            },
                            "name": "Log.h",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 33,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/MotorState.h",
                                    "bloks/common/inc/bloks/common/PropertyBitfields.h",
                                    "bloks/frontend-sdk/src/ComponentImplementation.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 148,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "MotorState",
                                "nested_complexity": 3,
                                "path": "bloks/frontend-sdk/src/MotorState.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3757,
                                "sloc": 115,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "MotorState.cpp",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 7,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/PropertyBool.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 21,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyBool",
                                "nested_complexity": 3,
                                "path": "bloks/frontend-sdk/src/PropertyBool.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 280,
                                "sloc": 14,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyBool.cpp",
                            "value": 5
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 7,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/PropertyFloat.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 21,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyFloat",
                                "nested_complexity": 3,
                                "path": "bloks/frontend-sdk/src/PropertyFloat.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 280,
                                "sloc": 14,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyFloat.cpp",
                            "value": 5
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 8,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/src/PropertyHelper.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 23,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyHelper",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/PropertyHelper.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 387,
                                "sloc": 15,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyHelper.cpp",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 11,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/frontend-sdk/src/SdkPropertyId.h",
                                    "bloks/common/inc/bloks/common/Property.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "stdint.h"
                                ],
                                "loc": 27,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyHelper",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/PropertyHelper.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 367,
                                "sloc": 16,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyHelper.h",
                            "value": 5
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 7,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/PropertyInt.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 21,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyInt",
                                "nested_complexity": 3,
                                "path": "bloks/frontend-sdk/src/PropertyInt.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 272,
                                "sloc": 14,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyInt.cpp",
                            "value": 5
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 9,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/src/PropertySetter.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 38,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertySetter",
                                "nested_complexity": 3,
                                "path": "bloks/frontend-sdk/src/PropertySetter.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1009,
                                "sloc": 29,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertySetter.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 7,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/PropertyBool.h",
                                    "bloks/frontend-sdk/include/bloks/PropertyFloat.h",
                                    "bloks/frontend-sdk/include/bloks/PropertyInt.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 25,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertySetter",
                                "nested_complexity": 3,
                                "path": "bloks/frontend-sdk/src/PropertySetter.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 571,
                                "sloc": 18,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertySetter.h",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/QueryableDate.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "QueryableDate",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/QueryableDate.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 172,
                                "sloc": 7,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "QueryableDate.cpp",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/QueryableFloat.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "QueryableFloat",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/QueryableFloat.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 174,
                                "sloc": 7,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "QueryableFloat.cpp",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/QueryableInt.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "QueryableInt",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/QueryableInt.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 170,
                                "sloc": 7,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "QueryableInt.cpp",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/QueryableString.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "QueryableString",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/QueryableString.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 176,
                                "sloc": 7,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "QueryableString.cpp",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 21,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/RemoteState.h",
                                    "bloks/frontend-sdk/src/ComponentImplementation.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 95,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "RemoteState",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/RemoteState.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2301,
                                "sloc": 74,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "RemoteState.cpp",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 10,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "stdint.h"
                                ],
                                "loc": 36,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "SdkPropertyId",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/SdkPropertyId.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 766,
                                "sloc": 26,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "SdkPropertyId.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 8,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/SensorState.h",
                                    "bloks/frontend-sdk/src/ComponentImplementation.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 18,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "SensorState",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/SensorState.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 291,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "SensorState.cpp",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 15,
                                "blank_lines": 19,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/frontend-sdk/src/ComponentImplementation.h",
                                    "bloks/frontend-sdk/src/VehicleUserPropertyManager.h",
                                    "bloks/frontend-sdk/include/bloks/VehicleState.h",
                                    "bloks/frontend-sdk/include/bloks/BatteryState.h",
                                    "bloks/frontend-sdk/include/bloks/DisplayState.h",
                                    "bloks/frontend-sdk/include/bloks/LightState.h",
                                    "bloks/frontend-sdk/include/bloks/MotorState.h",
                                    "bloks/frontend-sdk/include/bloks/RemoteState.h",
                                    "bloks/frontend-sdk/include/bloks/SensorState.h",
                                    "bloks/frontend-sdk/include/bloks/GearShiftState.h",
                                    "bloks/common/inc/bloks/common/AbstractPropertyProvider.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "memory"
                                ],
                                "loc": 67,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "VehicleImplementation",
                                "nested_complexity": 3,
                                "path": "bloks/frontend-sdk/src/VehicleImplementation.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1516,
                                "sloc": 48,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "VehicleImplementation.h",
                            "value": 15
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 31,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/src/VehicleImplementation.h",
                                    "bloks/frontend-sdk/src/PropertySetter.h",
                                    "bloks/frontend-sdk/include/bloks/VehicleState.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 140,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "VehicleState",
                                "nested_complexity": 4,
                                "path": "bloks/frontend-sdk/src/VehicleState.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2837,
                                "sloc": 109,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "VehicleState.cpp",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 36,
                                "blank_lines": 51,
                                "decision_complexity": 28,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/src/VehicleUserPropertyManager.h",
                                    "bloks/common/inc/bloks/common/PropertyBitfields.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "set"
                                ],
                                "loc": 283,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "VehicleUserPropertyManager",
                                "nested_complexity": 5,
                                "path": "bloks/frontend-sdk/src/VehicleUserPropertyManager.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 10978,
                                "sloc": 232,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "VehicleUserPropertyManager.cpp",
                            "value": 36
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 20,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/common/inc/bloks/common/AbstractPropertyProvider.h",
                                    "bloks/common/inc/bloks/common/Property.h",
                                    "bloks/frontend-sdk/src/ComponentImplementation.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 47,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "VehicleUserPropertyManager",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/src/VehicleUserPropertyManager.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1116,
                                "sloc": 27,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "VehicleUserPropertyManager.h",
                            "value": 5
                        },
                        {
                            "children": [
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 22,
                                        "decision_complexity": 0,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/BluetoothServer.h",
                                            "bloks/frontend-sdk/src/central/BluetoothServerImplementation.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "stdexcept"
                                        ],
                                        "loc": 110,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "BluetoothServer",
                                        "nested_complexity": 2,
                                        "path": "bloks/frontend-sdk/src/central/BluetoothServer.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 2559,
                                        "sloc": 88,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "BluetoothServer.cpp",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 21,
                                        "blank_lines": 22,
                                        "decision_complexity": 13,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/src/central/BluetoothServerImplementation.h",
                                            "bloks/frontend-sdk/src/Log.h",
                                            "bloks/dbus/include/bloks/dbus/Connector.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "bloks/interfaces/BluetoothState.h"
                                        ],
                                        "loc": 165,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "BluetoothServerImplementation",
                                        "nested_complexity": 4,
                                        "path": "bloks/frontend-sdk/src/central/BluetoothServerImplementation.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 4969,
                                        "sloc": 143,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "BluetoothServerImplementation.cpp",
                                    "value": 21
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 7,
                                        "blank_lines": 12,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/BluetoothServer.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QSettings",
                                            "QString",
                                            "QVariantMap",
                                            "memory"
                                        ],
                                        "loc": 50,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "BluetoothServerImplementation",
                                        "nested_complexity": 2,
                                        "path": "bloks/frontend-sdk/src/central/BluetoothServerImplementation.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 1229,
                                        "sloc": 38,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "BluetoothServerImplementation.h",
                                    "value": 7
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 8,
                                        "decision_complexity": 1,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/src/central/CentralVehicleImplementation.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 21,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "CentralImplementation",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/central/CentralImplementation.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 371,
                                        "sloc": 13,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "CentralImplementation.cpp",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 9,
                                        "blank_lines": 7,
                                        "decision_complexity": 3,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/src/central/CentralVehicleImplementation.h",
                                            "bloks/frontend-sdk/src/Log.h",
                                            "bloks/common/inc/bloks/common/UnixTime.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 32,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "CentralVehicleImplementation",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/central/CentralVehicleImplementation.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 786,
                                        "sloc": 25,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "CentralVehicleImplementation.cpp",
                                    "value": 9
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 6,
                                        "blank_lines": 12,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/dbus/include/bloks/dbus/DBusPropertyProvider.h",
                                            "bloks/common/inc/bloks/common/OemData.h",
                                            "bloks/frontend-sdk/src/VehicleImplementation.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 40,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "CentralVehicleImplementation",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/central/CentralVehicleImplementation.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 787,
                                        "sloc": 28,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "CentralVehicleImplementation.h",
                                    "value": 6
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 8,
                                        "blank_lines": 10,
                                        "decision_complexity": 0,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/BluetoothServer.h",
                                            "bloks/frontend-sdk/include/bloks/Frontend.h",
                                            "bloks/frontend-sdk/src/Consts.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QQmlContext",
                                            "QtQml"
                                        ],
                                        "loc": 28,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "FrontendCentral",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/central/FrontendCentral.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 668,
                                        "sloc": 18,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "FrontendCentral.cpp",
                                    "value": 8
                                }
                            ],
                            "counter": {
                                "bytes_count": 11369,
                                "risks_count": 0,
                                "sloc_count": 353,
                                "source_files": 7,
                                "value_count": 61
                            },
                            "name": "central"
                        },
                        {
                            "children": [
                                {
                                    "meta": {
                                        "aggregate_complexity": 13,
                                        "blank_lines": 38,
                                        "decision_complexity": 8,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/BluetoothClient.h",
                                            "bloks/frontend-sdk/src/mobile/BluetoothClientImplementation.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 213,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "BluetoothClient",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/mobile/BluetoothClient.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 5101,
                                        "sloc": 175,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "BluetoothClient.cpp",
                                    "value": 13
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 29,
                                        "blank_lines": 71,
                                        "decision_complexity": 18,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/src/mobile/BluetoothClientImplementation.h",
                                            "bloks/frontend-sdk/src/Log.h",
                                            "bloks/frontend-sdk/src/mobile/CentralDeviceImplementation.h",
                                            "bloks/frontend-sdk/include/bloks/AsyncListener.h",
                                            "bloks/frontend-sdk/include/bloks/BluetoothClient.h",
                                            "bloks/frontend-sdk/include/bloks/CentralDevice.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QSettings"
                                        ],
                                        "loc": 388,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "BluetoothClientImplementation",
                                        "nested_complexity": 4,
                                        "path": "bloks/frontend-sdk/src/mobile/BluetoothClientImplementation.cpp",
                                        "risks": [
                                            "[info] Arguably many lines of code, this may be ok for now."
                                        ],
                                        "risks_points": 2,
                                        "size": 12299,
                                        "sloc": 317,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "BluetoothClientImplementation.cpp",
                                    "value": 29
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 6,
                                        "blank_lines": 18,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/frontend-sdk/src/mobile/BluetoothMessageClient.h",
                                            "bloks/frontend-sdk/include/bloks/BluetoothClient.h",
                                            "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceListModel.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 77,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "BluetoothClientImplementation",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/mobile/BluetoothClientImplementation.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 2370,
                                        "sloc": 59,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "BluetoothClientImplementation.h",
                                    "value": 6
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 19,
                                        "blank_lines": 30,
                                        "decision_complexity": 8,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/src/mobile/BluetoothMessageClient.h",
                                            "bloks/frontend-sdk/src/mobile/MobileVehicleImplementation.h",
                                            "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HeartBeatMessageReceiver.h",
                                            "bloks/frontend-sdk/src/Log.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QAbstractSocket",
                                            "QMetaObject"
                                        ],
                                        "loc": 153,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "BluetoothMessageClient",
                                        "nested_complexity": 5,
                                        "path": "bloks/frontend-sdk/src/mobile/BluetoothMessageClient.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 4987,
                                        "sloc": 123,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "BluetoothMessageClient.cpp",
                                    "value": 19
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 13,
                                        "blank_lines": 16,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothSocket.h",
                                            "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AutoReconnectSignalSender.h",
                                            "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HandshakerClient.h",
                                            "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HeartBeatMessageReceiver.h",
                                            "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/MessageRouter.h",
                                            "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/MessageScheduler.h",
                                            "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/TransportProtocol.h",
                                            "bloks/common/inc/bloks/common/LaterDeleter.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QTimer",
                                            "functional",
                                            "memory"
                                        ],
                                        "loc": 57,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "BluetoothMessageClient",
                                        "nested_complexity": 2,
                                        "path": "bloks/frontend-sdk/src/mobile/BluetoothMessageClient.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 1474,
                                        "sloc": 41,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "BluetoothMessageClient.h",
                                    "value": 13
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 12,
                                        "decision_complexity": 0,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/CentralDevice.h",
                                            "bloks/frontend-sdk/src/mobile/CentralDeviceImplementation.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 43,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "CentralDevice",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/mobile/CentralDevice.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 730,
                                        "sloc": 31,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "CentralDevice.cpp",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 4,
                                        "blank_lines": 8,
                                        "decision_complexity": 0,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/src/mobile/CentralDeviceImplementation.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QAbstractSocket"
                                        ],
                                        "loc": 21,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "CentralDeviceImplementation",
                                        "nested_complexity": 2,
                                        "path": "bloks/frontend-sdk/src/mobile/CentralDeviceImplementation.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 355,
                                        "sloc": 13,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "CentralDeviceImplementation.cpp",
                                    "value": 4
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 3,
                                        "blank_lines": 8,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceData.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 20,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "CentralDeviceImplementation",
                                        "nested_complexity": 2,
                                        "path": "bloks/frontend-sdk/src/mobile/CentralDeviceImplementation.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 339,
                                        "sloc": 12,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "CentralDeviceImplementation.h",
                                    "value": 3
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 9,
                                        "blank_lines": 11,
                                        "decision_complexity": 0,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/BluetoothClient.h",
                                            "bloks/frontend-sdk/include/bloks/CentralDevice.h",
                                            "bloks/frontend-sdk/include/bloks/Frontend.h",
                                            "bloks/frontend-sdk/src/Consts.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QQmlContext",
                                            "QtQml"
                                        ],
                                        "loc": 35,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "FrontendMobile",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/mobile/FrontendMobile.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 1015,
                                        "sloc": 24,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "FrontendMobile.cpp",
                                    "value": 9
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 8,
                                        "decision_complexity": 1,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/src/mobile/MobileVehicleImplementation.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 21,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "MobileImplementation",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/mobile/MobileImplementation.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 374,
                                        "sloc": 13,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "MobileImplementation.cpp",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 8,
                                        "blank_lines": 15,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/frontend-sdk/src/VehicleImplementation.h",
                                            "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyStateMessageReceiver.h",
                                            "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyRequestMessageSender.h",
                                            "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/BluetoothPropertyProvider.h",
                                            "bloks/common/inc/bloks/common/OemData.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 60,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "MobileVehicleImplementation",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/mobile/MobileVehicleImplementation.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 1265,
                                        "sloc": 45,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "MobileVehicleImplementation.h",
                                    "value": 8
                                }
                            ],
                            "counter": {
                                "bytes_count": 30309,
                                "risks_count": 1,
                                "sloc_count": 853,
                                "source_files": 11,
                                "value_count": 114
                            },
                            "name": "mobile"
                        },
                        {
                            "children": [
                                {
                                    "meta": {
                                        "aggregate_complexity": 12,
                                        "blank_lines": 37,
                                        "decision_complexity": 6,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/AsyncListener.h",
                                            "bloks/frontend-sdk/include/bloks/BluetoothClient.h",
                                            "bloks/frontend-sdk/include/bloks/CentralDevice.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 187,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "BluetoothClient",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/mock/BluetoothClient.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 3791,
                                        "sloc": 150,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "BluetoothClient.cpp",
                                    "value": 12
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 4,
                                        "blank_lines": 10,
                                        "decision_complexity": 0,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/CentralDevice.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 35,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "CentralDevice",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/mock/CentralDevice.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 531,
                                        "sloc": 25,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "CentralDevice.cpp",
                                    "value": 4
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 4,
                                        "blank_lines": 10,
                                        "decision_complexity": 0,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/Mock.h",
                                            "bloks/frontend-sdk/src/mock/MockVehicleImplementation.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 31,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "Mock",
                                        "nested_complexity": 2,
                                        "path": "bloks/frontend-sdk/src/mock/Mock.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 683,
                                        "sloc": 21,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "Mock.cpp",
                                    "value": 4
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 8,
                                        "decision_complexity": 1,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/src/mock/MockVehicleImplementation.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 21,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "MockImplementation",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/mock/MockImplementation.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 367,
                                        "sloc": 13,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "MockImplementation.cpp",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 31,
                                        "blank_lines": 43,
                                        "decision_complexity": 20,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/src/mock/MockVehicleImplementation.h",
                                            "bloks/frontend-sdk/src/Log.h",
                                            "bloks/common/inc/bloks/common/UnixTime.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QFile",
                                            "map"
                                        ],
                                        "loc": 275,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "MockVehicleImplementation",
                                        "nested_complexity": 6,
                                        "path": "bloks/frontend-sdk/src/mock/MockVehicleImplementation.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 12310,
                                        "sloc": 232,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "MockVehicleImplementation.cpp",
                                    "value": 31
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 19,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/frontend-sdk/src/VehicleImplementation.h",
                                            "bloks/common/inc/bloks/common/OemData.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 57,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "MockVehicleImplementation",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/src/mock/MockVehicleImplementation.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 1012,
                                        "sloc": 38,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "MockVehicleImplementation.h",
                                    "value": 5
                                }
                            ],
                            "counter": {
                                "bytes_count": 18694,
                                "risks_count": 0,
                                "sloc_count": 479,
                                "source_files": 6,
                                "value_count": 61
                            },
                            "name": "mock"
                        }
                    ],
                    "counter": {
                        "bytes_count": 101396,
                        "risks_count": 1,
                        "sloc_count": 2870,
                        "source_files": 54,
                        "value_count": 441
                    },
                    "name": "src"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 13,
                                "blank_lines": 17,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/testgui/LogHandler.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QDateTime",
                                    "QDir",
                                    "QFile",
                                    "QStandardPaths",
                                    "QThread",
                                    "QTimer",
                                    "memory",
                                    "QLoggingCategory"
                                ],
                                "loc": 78,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "LogHandler",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/testgui/LogHandler.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2224,
                                "sloc": 61,
                                "type": "C source, ASCII text"
                            },
                            "name": "LogHandler.cpp",
                            "value": 13
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 10,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject"
                                ],
                                "loc": 28,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "LogHandler",
                                "nested_complexity": 1,
                                "path": "bloks/frontend-sdk/testgui/LogHandler.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 467,
                                "sloc": 18,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "LogHandler.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 8,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/Frontend.h",
                                    "bloks/frontend-sdk/include/bloks/BluetoothClient.h",
                                    "bloks/frontend-sdk/include/bloks/CentralDevice.h",
                                    "bloks/frontend-sdk/include/bloks/AsyncListener.h",
                                    "bloks/frontend-sdk/testgui/LogHandler.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QGuiApplication",
                                    "QQmlApplicationEngine",
                                    "QQmlContext",
                                    "QtQml",
                                    "QCommandLineParser"
                                ],
                                "loc": 35,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "main",
                                "nested_complexity": 1,
                                "path": "bloks/frontend-sdk/testgui/main.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 921,
                                "sloc": 27,
                                "type": "C source, ASCII text"
                            },
                            "name": "main.cpp",
                            "value": 11
                        },
                        {
                            "children": [
                                {
                                    "meta": {
                                        "aggregate_complexity": 1,
                                        "blank_lines": 3,
                                        "decision_complexity": 0,
                                        "extension": ".sh",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 7,
                                        "mime": "text/x-shellscript; charset=us-ascii",
                                        "name": "provisioningtool",
                                        "nested_complexity": 1,
                                        "path": "bloks/frontend-sdk/testgui/ios/provisioningtool.sh",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 167,
                                        "sloc": 4,
                                        "type": "Bourne-Again shell script, ASCII text executable"
                                    },
                                    "name": "provisioningtool.sh",
                                    "value": 1
                                }
                            ],
                            "counter": {
                                "bytes_count": 167,
                                "risks_count": 0,
                                "sloc_count": 4,
                                "source_files": 1,
                                "value_count": 1
                            },
                            "name": "ios"
                        }
                    ],
                    "counter": {
                        "bytes_count": 3779,
                        "risks_count": 0,
                        "sloc_count": 110,
                        "source_files": 4,
                        "value_count": 28
                    },
                    "name": "testgui"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 21,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/Property.h",
                                    "bloks/common/inc/bloks/common/PropertyBitfields.h",
                                    "bloks/frontend-sdk/tests/TestBloksProperty.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 60,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestBloksProperty",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/tests/TestBloksProperty.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2155,
                                "sloc": 39,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestBloksProperty.cpp",
                            "value": 5
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 8,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QtTest"
                                ],
                                "loc": 18,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestBloksProperty",
                                "nested_complexity": 2,
                                "path": "bloks/frontend-sdk/tests/TestBloksProperty.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 221,
                                "sloc": 10,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestBloksProperty.h",
                            "value": 3
                        }
                    ],
                    "counter": {
                        "bytes_count": 2376,
                        "risks_count": 0,
                        "sloc_count": 49,
                        "source_files": 2,
                        "value_count": 8
                    },
                    "name": "tests"
                },
                {
                    "children": [
                        {
                            "children": [
                                {
                                    "meta": {
                                        "aggregate_complexity": 6,
                                        "blank_lines": 101,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject",
                                            "QString"
                                        ],
                                        "loc": 139,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "AsyncListener",
                                        "nested_complexity": 4,
                                        "path": "bloks/frontend-sdk/include/bloks/AsyncListener.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 2891,
                                        "sloc": 38,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "AsyncListener.h",
                                    "value": 6
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 10,
                                        "blank_lines": 152,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/PropertyBool.h",
                                            "bloks/frontend-sdk/include/bloks/PropertyFloat.h",
                                            "bloks/frontend-sdk/include/bloks/PropertyInt.h",
                                            "bloks/frontend-sdk/include/bloks/QueryableFloat.h",
                                            "bloks/frontend-sdk/include/bloks/QueryableInt.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 217,
                                        "mime": "text/x-c++; charset=utf-8",
                                        "name": "BatteryState",
                                        "nested_complexity": 4,
                                        "path": "bloks/frontend-sdk/include/bloks/BatteryState.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 5625,
                                        "sloc": 65,
                                        "type": "C++ source, UTF-8 Unicode text"
                                    },
                                    "name": "BatteryState.h",
                                    "value": 10
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 7,
                                        "blank_lines": 234,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject",
                                            "QQmlListProperty",
                                            "QVector"
                                        ],
                                        "loc": 319,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "BluetoothClient",
                                        "nested_complexity": 4,
                                        "path": "bloks/frontend-sdk/include/bloks/BluetoothClient.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 9331,
                                        "sloc": 85,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "BluetoothClient.h",
                                    "value": 7
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 8,
                                        "blank_lines": 195,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QBluetoothAddress",
                                            "QObject",
                                            "QVariantMap",
                                            "memory"
                                        ],
                                        "loc": 250,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "BluetoothServer",
                                        "nested_complexity": 4,
                                        "path": "bloks/frontend-sdk/include/bloks/BluetoothServer.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 6925,
                                        "sloc": 55,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "BluetoothServer.h",
                                    "value": 8
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 37,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject",
                                            "QString"
                                        ],
                                        "loc": 65,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "CentralDevice",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/include/bloks/CentralDevice.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 1622,
                                        "sloc": 28,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "CentralDevice.h",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 4,
                                        "blank_lines": 48,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 81,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "DisplayState",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/include/bloks/DisplayState.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 1987,
                                        "sloc": 33,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "DisplayState.h",
                                    "value": 4
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 19,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QQmlEngine",
                                            "QUuid"
                                        ],
                                        "loc": 33,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "Frontend",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/include/bloks/Frontend.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 614,
                                        "sloc": 14,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "Frontend.h",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 9,
                                        "blank_lines": 110,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/PropertyFloat.h",
                                            "bloks/frontend-sdk/include/bloks/PropertyInt.h",
                                            "bloks/frontend-sdk/include/bloks/QueryableFloat.h",
                                            "bloks/frontend-sdk/include/bloks/QueryableInt.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 162,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "GearShiftState",
                                        "nested_complexity": 4,
                                        "path": "bloks/frontend-sdk/include/bloks/GearShiftState.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 3825,
                                        "sloc": 52,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "GearShiftState.h",
                                    "value": 9
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 4,
                                        "blank_lines": 33,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 49,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "IndexedQueryableFloat",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/include/bloks/IndexedQueryableFloat.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 1146,
                                        "sloc": 16,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "IndexedQueryableFloat.h",
                                    "value": 4
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 6,
                                        "blank_lines": 33,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/PropertyBool.h",
                                            "bloks/frontend-sdk/include/bloks/PropertyFloat.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 55,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "LightState",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/include/bloks/LightState.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 1044,
                                        "sloc": 22,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "LightState.h",
                                    "value": 6
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 88,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject",
                                            "QString"
                                        ],
                                        "loc": 104,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "Mock",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/include/bloks/Mock.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 3292,
                                        "sloc": 16,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "Mock.h",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 10,
                                        "blank_lines": 264,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/PropertyBool.h",
                                            "bloks/frontend-sdk/include/bloks/PropertyFloat.h",
                                            "bloks/frontend-sdk/include/bloks/PropertyInt.h",
                                            "bloks/frontend-sdk/include/bloks/IndexedQueryableFloat.h",
                                            "bloks/frontend-sdk/include/bloks/QueryableFloat.h",
                                            "bloks/frontend-sdk/include/bloks/QueryableInt.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 332,
                                        "mime": "text/x-c++; charset=utf-8",
                                        "name": "MotorState",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/include/bloks/MotorState.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 9456,
                                        "sloc": 68,
                                        "type": "C++ source, UTF-8 Unicode text"
                                    },
                                    "name": "MotorState.h",
                                    "value": 10
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 28,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 51,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "PropertyBool",
                                        "nested_complexity": 4,
                                        "path": "bloks/frontend-sdk/include/bloks/PropertyBool.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 978,
                                        "sloc": 23,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "PropertyBool.h",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 28,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 51,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "PropertyFloat",
                                        "nested_complexity": 4,
                                        "path": "bloks/frontend-sdk/include/bloks/PropertyFloat.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 980,
                                        "sloc": 23,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "PropertyFloat.h",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 28,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 51,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "PropertyInt",
                                        "nested_complexity": 4,
                                        "path": "bloks/frontend-sdk/include/bloks/PropertyInt.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 969,
                                        "sloc": 23,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "PropertyInt.h",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 30,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QDate",
                                            "QObject"
                                        ],
                                        "loc": 47,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "QueryableDate",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/include/bloks/QueryableDate.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 940,
                                        "sloc": 17,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "QueryableDate.h",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 4,
                                        "blank_lines": 30,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 46,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "QueryableFloat",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/include/bloks/QueryableFloat.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 925,
                                        "sloc": 16,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "QueryableFloat.h",
                                    "value": 4
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 4,
                                        "blank_lines": 30,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 46,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "QueryableInt",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/include/bloks/QueryableInt.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 920,
                                        "sloc": 16,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "QueryableInt.h",
                                    "value": 4
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 30,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject",
                                            "QString"
                                        ],
                                        "loc": 47,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "QueryableString",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/include/bloks/QueryableString.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 948,
                                        "sloc": 17,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "QueryableString.h",
                                    "value": 5
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 7,
                                        "blank_lines": 127,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/PropertyBool.h",
                                            "bloks/frontend-sdk/include/bloks/PropertyInt.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 181,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "RemoteState",
                                        "nested_complexity": 4,
                                        "path": "bloks/frontend-sdk/include/bloks/RemoteState.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 4636,
                                        "sloc": 54,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "RemoteState.h",
                                    "value": 7
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 6,
                                        "blank_lines": 15,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/PropertyFloat.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QGeoCoordinate",
                                            "QObject"
                                        ],
                                        "loc": 33,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "SensorState",
                                        "nested_complexity": 3,
                                        "path": "bloks/frontend-sdk/include/bloks/SensorState.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 476,
                                        "sloc": 18,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "SensorState.h",
                                    "value": 6
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 10,
                                        "blank_lines": 184,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/PropertyInt.h",
                                            "bloks/frontend-sdk/include/bloks/PropertyBool.h",
                                            "bloks/frontend-sdk/include/bloks/QueryableDate.h",
                                            "bloks/frontend-sdk/include/bloks/QueryableFloat.h",
                                            "bloks/frontend-sdk/include/bloks/QueryableString.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject"
                                        ],
                                        "loc": 259,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "VehicleState",
                                        "nested_complexity": 4,
                                        "path": "bloks/frontend-sdk/include/bloks/VehicleState.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 6428,
                                        "sloc": 75,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "VehicleState.h",
                                    "value": 10
                                }
                            ],
                            "counter": {
                                "bytes_count": 65958,
                                "risks_count": 0,
                                "sloc_count": 774,
                                "source_files": 22,
                                "value_count": 135
                            },
                            "name": "bloks"
                        }
                    ],
                    "counter": {
                        "bytes_count": 65958,
                        "risks_count": 0,
                        "sloc_count": 774,
                        "source_files": 22,
                        "value_count": 135
                    },
                    "name": "include"
                }
            ],
            "counter": {
                "bytes_count": 178938,
                "risks_count": 1,
                "sloc_count": 3803,
                "source_files": 85,
                "value_count": 615
            },
            "name": "frontend-sdk"
        },
        {
            "children": [
                {
                    "meta": {
                        "aggregate_complexity": 10,
                        "blank_lines": 10,
                        "decision_complexity": 9,
                        "extension": ".sh",
                        "imports": [],
                        "is_code": true,
                        "libraries": [],
                        "loc": 49,
                        "mime": "text/x-shellscript; charset=us-ascii",
                        "name": "exec-command",
                        "nested_complexity": 0,
                        "path": "bloks/scripts/exec-command.sh",
                        "risks": [],
                        "risks_points": 0,
                        "size": 1104,
                        "sloc": 39,
                        "type": "Bourne-Again shell script, ASCII text executable"
                    },
                    "name": "exec-command.sh",
                    "value": 10
                },
                {
                    "meta": {
                        "aggregate_complexity": 3,
                        "blank_lines": 4,
                        "decision_complexity": 2,
                        "extension": ".sh",
                        "imports": [],
                        "is_code": true,
                        "libraries": [],
                        "loc": 18,
                        "mime": "text/x-shellscript; charset=us-ascii",
                        "name": "format",
                        "nested_complexity": 0,
                        "path": "bloks/scripts/format.sh",
                        "risks": [],
                        "risks_points": 0,
                        "size": 364,
                        "sloc": 14,
                        "type": "Bourne-Again shell script, ASCII text executable"
                    },
                    "name": "format.sh",
                    "value": 3
                },
                {
                    "meta": {
                        "aggregate_complexity": 27,
                        "blank_lines": 68,
                        "decision_complexity": 20,
                        "extension": ".py",
                        "imports": [],
                        "is_code": true,
                        "libraries": [
                            "os",
                            "sys",
                            "json",
                            "argparse",
                            "xml.etree.ElementTree"
                        ],
                        "loc": 206,
                        "mime": "text/x-python; charset=us-ascii",
                        "name": "template-renderer",
                        "nested_complexity": 2,
                        "path": "bloks/scripts/template-renderer.py",
                        "risks": [],
                        "risks_points": 0,
                        "size": 5738,
                        "sloc": 138,
                        "type": "Python script, ASCII text executable"
                    },
                    "name": "template-renderer.py",
                    "value": 27
                }
            ],
            "counter": {
                "bytes_count": 7206,
                "risks_count": 0,
                "sloc_count": 191,
                "source_files": 3,
                "value_count": 40
            },
            "name": "scripts"
        },
        {
            "children": [
                {
                    "meta": {
                        "aggregate_complexity": 16,
                        "blank_lines": 34,
                        "decision_complexity": 9,
                        "extension": ".py",
                        "imports": [
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py"
                        ],
                        "is_code": true,
                        "libraries": [
                            "sys",
                            "os",
                            "argparse"
                        ],
                        "loc": 102,
                        "mime": "text/x-python; charset=us-ascii",
                        "name": "eol_manual",
                        "nested_complexity": 0,
                        "path": "bloks/tests/eol_manual.py",
                        "risks": [],
                        "risks_points": 0,
                        "size": 2884,
                        "sloc": 68,
                        "type": "Python script, ASCII text executable"
                    },
                    "name": "eol_manual.py",
                    "value": 16
                },
                {
                    "meta": {
                        "aggregate_complexity": 37,
                        "blank_lines": 50,
                        "decision_complexity": 24,
                        "extension": ".py",
                        "imports": [
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py"
                        ],
                        "is_code": true,
                        "libraries": [
                            "sys",
                            "os",
                            "re",
                            "io",
                            "time",
                            "argparse"
                        ],
                        "loc": 285,
                        "mime": "text/x-python; charset=us-ascii",
                        "name": "firmware_updater_sapi",
                        "nested_complexity": 0,
                        "path": "bloks/tests/firmware_updater_sapi.py",
                        "risks": [],
                        "risks_points": 0,
                        "size": 12000,
                        "sloc": 235,
                        "type": "Python script, ASCII text executable"
                    },
                    "name": "firmware_updater_sapi.py",
                    "value": 37
                },
                {
                    "meta": {
                        "aggregate_complexity": 16,
                        "blank_lines": 21,
                        "decision_complexity": 7,
                        "extension": ".py",
                        "imports": [
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py"
                        ],
                        "is_code": true,
                        "libraries": [
                            "sys",
                            "os",
                            "argparse"
                        ],
                        "loc": 66,
                        "mime": "text/x-python; charset=us-ascii",
                        "name": "frame_id_test",
                        "nested_complexity": 0,
                        "path": "bloks/tests/frame_id_test.py",
                        "risks": [],
                        "risks_points": 0,
                        "size": 1773,
                        "sloc": 45,
                        "type": "Python script, ASCII text executable"
                    },
                    "name": "frame_id_test.py",
                    "value": 16
                },
                {
                    "meta": {
                        "aggregate_complexity": 23,
                        "blank_lines": 34,
                        "decision_complexity": 13,
                        "extension": ".py",
                        "imports": [
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py"
                        ],
                        "is_code": true,
                        "libraries": [
                            "io",
                            "os",
                            "json",
                            "argparse",
                            "sys"
                        ],
                        "loc": 156,
                        "mime": "text/x-python; charset=us-ascii",
                        "name": "frontend_sdk",
                        "nested_complexity": 1,
                        "path": "bloks/tests/frontend_sdk.py",
                        "risks": [],
                        "risks_points": 0,
                        "size": 5526,
                        "sloc": 122,
                        "type": "Python script, ASCII text executable"
                    },
                    "name": "frontend_sdk.py",
                    "value": 23
                },
                {
                    "meta": {
                        "aggregate_complexity": 8,
                        "blank_lines": 6,
                        "decision_complexity": 1,
                        "extension": ".py",
                        "imports": [],
                        "is_code": true,
                        "libraries": [
                            "base64",
                            "sys",
                            "io",
                            "os",
                            "json",
                            "subprocess"
                        ],
                        "loc": 29,
                        "mime": "text/x-python; charset=us-ascii",
                        "name": "generate_login",
                        "nested_complexity": 1,
                        "path": "bloks/tests/generate_login.py",
                        "risks": [],
                        "risks_points": 0,
                        "size": 925,
                        "sloc": 23,
                        "type": "Python script, ASCII text executable"
                    },
                    "name": "generate_login.py",
                    "value": 8
                },
                {
                    "meta": {
                        "aggregate_complexity": 23,
                        "blank_lines": 31,
                        "decision_complexity": 11,
                        "extension": ".py",
                        "imports": [
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py"
                        ],
                        "is_code": true,
                        "libraries": [
                            "sys",
                            "os",
                            "re",
                            "io",
                            "argparse"
                        ],
                        "loc": 114,
                        "mime": "text/x-python; charset=us-ascii",
                        "name": "heartbeat",
                        "nested_complexity": 0,
                        "path": "bloks/tests/heartbeat.py",
                        "risks": [],
                        "risks_points": 0,
                        "size": 3527,
                        "sloc": 83,
                        "type": "Python script, ASCII text executable"
                    },
                    "name": "heartbeat.py",
                    "value": 23
                },
                {
                    "meta": {
                        "aggregate_complexity": 5,
                        "blank_lines": 11,
                        "decision_complexity": 4,
                        "extension": ".sh",
                        "imports": [],
                        "is_code": true,
                        "libraries": [],
                        "loc": 48,
                        "mime": "text/x-shellscript; charset=us-ascii",
                        "name": "linux_image_upload",
                        "nested_complexity": 1,
                        "path": "bloks/tests/linux_image_upload.sh",
                        "risks": [],
                        "risks_points": 0,
                        "size": 1414,
                        "sloc": 37,
                        "type": "Bourne-Again shell script, ASCII text executable"
                    },
                    "name": "linux_image_upload.sh",
                    "value": 5
                },
                {
                    "meta": {
                        "aggregate_complexity": 15,
                        "blank_lines": 27,
                        "decision_complexity": 8,
                        "extension": ".py",
                        "imports": [
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py"
                        ],
                        "is_code": true,
                        "libraries": [
                            "sys",
                            "os",
                            "argparse"
                        ],
                        "loc": 91,
                        "mime": "text/x-python; charset=us-ascii",
                        "name": "system",
                        "nested_complexity": 0,
                        "path": "bloks/tests/system.py",
                        "risks": [],
                        "risks_points": 0,
                        "size": 2581,
                        "sloc": 64,
                        "type": "Python script, ASCII text executable"
                    },
                    "name": "system.py",
                    "value": 15
                },
                {
                    "meta": {
                        "aggregate_complexity": 55,
                        "blank_lines": 234,
                        "decision_complexity": 42,
                        "extension": ".py",
                        "imports": [],
                        "is_code": true,
                        "libraries": [
                            "os",
                            "threading",
                            "subprocess",
                            "signal",
                            "re",
                            "io",
                            "time",
                            "sys",
                            "traceback",
                            "json",
                            "requests",
                            "difflib"
                        ],
                        "loc": 531,
                        "mime": "text/x-python; charset=us-ascii",
                        "name": "test_utils",
                        "nested_complexity": 1,
                        "path": "bloks/tests/test_utils.py",
                        "risks": [
                            "[info] Arguably many decisions, it is ok if it makes other files less complicated."
                        ],
                        "risks_points": 5,
                        "size": 18559,
                        "sloc": 297,
                        "type": "Python script, ASCII text executable"
                    },
                    "name": "test_utils.py",
                    "value": 55
                },
                {
                    "meta": {
                        "aggregate_complexity": 16,
                        "blank_lines": 31,
                        "decision_complexity": 9,
                        "extension": ".py",
                        "imports": [
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py",
                            "bloks/tests/test_utils.py"
                        ],
                        "is_code": true,
                        "libraries": [
                            "sys",
                            "os",
                            "argparse"
                        ],
                        "loc": 220,
                        "mime": "text/x-python; charset=utf-8",
                        "name": "vehicle_state_sapi",
                        "nested_complexity": 0,
                        "path": "bloks/tests/vehicle_state_sapi.py",
                        "risks": [],
                        "risks_points": 0,
                        "size": 9790,
                        "sloc": 189,
                        "type": "Python script, UTF-8 Unicode text executable"
                    },
                    "name": "vehicle_state_sapi.py",
                    "value": 16
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 1,
                                "decision_complexity": 0,
                                "extension": ".sh",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 4,
                                "mime": "text/plain; charset=us-ascii",
                                "name": "prepare",
                                "nested_complexity": 0,
                                "path": "bloks/tests/eol_manual/prepare.sh",
                                "risks": [],
                                "risks_points": 0,
                                "size": 122,
                                "sloc": 3,
                                "type": "ASCII text"
                            },
                            "name": "prepare.sh",
                            "value": 1
                        }
                    ],
                    "counter": {
                        "bytes_count": 122,
                        "risks_count": 0,
                        "sloc_count": 3,
                        "source_files": 1,
                        "value_count": 1
                    },
                    "name": "eol_manual"
                }
            ],
            "counter": {
                "bytes_count": 59101,
                "risks_count": 1,
                "sloc_count": 1166,
                "source_files": 11,
                "value_count": 215
            },
            "name": "tests"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceData.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QBluetoothAddress",
                                    "QBluetoothDeviceInfo"
                                ],
                                "loc": 51,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothDeviceData",
                                "nested_complexity": 2,
                                "path": "bloks/bluetooth-client/src/BluetoothDeviceData.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 839,
                                "sloc": 38,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothDeviceData.cpp",
                            "value": 5
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 10,
                                "blank_lines": 26,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceListModel.h",
                                    "bloks/bluetooth-client/src/BluetoothDeviceListModel_android.h",
                                    "bloks/bluetooth-client/src/BluetoothDeviceListModel_tcp.h",
                                    "bloks/bluetooth-client/src/BluetoothDeviceListModel_ios.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 189,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothDeviceListModel",
                                "nested_complexity": 3,
                                "path": "bloks/bluetooth-client/src/BluetoothDeviceListModel.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5007,
                                "sloc": 163,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothDeviceListModel.cpp",
                            "value": 10
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 28,
                                "blank_lines": 84,
                                "decision_complexity": 17,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-client/src/BluetoothDeviceListModel_android.h",
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceListModel.h",
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothSocket.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QBluetoothServiceDiscoveryAgent",
                                    "QBluetoothSocket",
                                    "QTimerEvent"
                                ],
                                "loc": 306,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothDeviceListModel_android",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-client/src/BluetoothDeviceListModel_android.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 10679,
                                "sloc": 222,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothDeviceListModel_android.cpp",
                            "value": 28
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 19,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/Bluetooth.h",
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceData.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QAbstractListModel",
                                    "QBluetoothDeviceInfo",
                                    "QBluetoothServiceInfo",
                                    "QBluetoothLocalDevice",
                                    "QBluetoothDeviceDiscoveryAgent",
                                    "QIODevice",
                                    "memory"
                                ],
                                "loc": 69,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothDeviceListModel_android",
                                "nested_complexity": 2,
                                "path": "bloks/bluetooth-client/src/BluetoothDeviceListModel_android.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1802,
                                "sloc": 50,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothDeviceListModel_android.h",
                            "value": 11
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 9,
                                "blank_lines": 17,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/Bluetooth.h",
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceData.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QAbstractListModel",
                                    "QObject",
                                    "QBluetoothLocalDevice",
                                    "QIODevice",
                                    "memory"
                                ],
                                "loc": 62,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothDeviceListModel_ios",
                                "nested_complexity": 2,
                                "path": "bloks/bluetooth-client/src/BluetoothDeviceListModel_ios.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1645,
                                "sloc": 45,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothDeviceListModel_ios.h",
                            "value": 9
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 25,
                                "blank_lines": 46,
                                "decision_complexity": 15,
                                "extension": ".mm",
                                "imports": [
                                    "bloks/bluetooth-client/src/BluetoothDeviceListModel_ios.h",
                                    "bloks/bluetooth-client/src/EAIODevice.h",
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceListModel.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "Foundation/Foundation.h",
                                    "ExternalAccessory/ExternalAccessory.h"
                                ],
                                "loc": 250,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothDeviceListModel_ios",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-client/src/BluetoothDeviceListModel_ios.mm",
                                "risks": [],
                                "risks_points": 0,
                                "size": 9212,
                                "sloc": 204,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothDeviceListModel_ios.mm",
                            "value": 25
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 17,
                                "blank_lines": 25,
                                "decision_complexity": 7,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-client/src/BluetoothDeviceListModel_tcp.h",
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceListModel.h",
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothSocket.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTcpSocket",
                                    "QTimer"
                                ],
                                "loc": 152,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothDeviceListModel_tcp",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-client/src/BluetoothDeviceListModel_tcp.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3923,
                                "sloc": 127,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothDeviceListModel_tcp.cpp",
                            "value": 17
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 16,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/Bluetooth.h",
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceData.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QAbstractListModel"
                                ],
                                "loc": 53,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothDeviceListModel_tcp",
                                "nested_complexity": 2,
                                "path": "bloks/bluetooth-client/src/BluetoothDeviceListModel_tcp.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1178,
                                "sloc": 37,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothDeviceListModel_tcp.h",
                            "value": 5
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 21,
                                "blank_lines": 18,
                                "decision_complexity": 13,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothSocket.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/bluetooth-client/src/EAIODevice.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QBluetoothSocket",
                                    "QTcpSocket"
                                ],
                                "loc": 171,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothSocket",
                                "nested_complexity": 3,
                                "path": "bloks/bluetooth-client/src/BluetoothSocket.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5076,
                                "sloc": 153,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothSocket.cpp",
                            "value": 21
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 14,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QBluetoothSocket",
                                    "QIODevice",
                                    "QObject"
                                ],
                                "loc": 60,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EAIODevice",
                                "nested_complexity": 1,
                                "path": "bloks/bluetooth-client/src/EAIODevice.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1458,
                                "sloc": 46,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EAIODevice.h",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 25,
                                "blank_lines": 49,
                                "decision_complexity": 17,
                                "extension": ".mm",
                                "imports": [
                                    "bloks/bluetooth-client/src/EAIODevice.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "Foundation/Foundation.h",
                                    "ExternalAccessory/ExternalAccessory.h",
                                    "QtGlobal"
                                ],
                                "loc": 291,
                                "mime": "text/x-objective-c; charset=us-ascii",
                                "name": "EAIODevice",
                                "nested_complexity": 3,
                                "path": "bloks/bluetooth-client/src/EAIODevice.mm",
                                "risks": [],
                                "risks_points": 0,
                                "size": 7707,
                                "sloc": 242,
                                "type": "Objective-C source, ASCII text"
                            },
                            "name": "EAIODevice.mm",
                            "value": 25
                        }
                    ],
                    "counter": {
                        "bytes_count": 48526,
                        "risks_count": 0,
                        "sloc_count": 1327,
                        "source_files": 11,
                        "value_count": 160
                    },
                    "name": "src"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 7,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceData.h",
                                    "bloks/bluetooth-client/tests/BluetoothDeviceDataTest.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QTest"
                                ],
                                "loc": 17,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "BluetoothDeviceDataTest",
                                "nested_complexity": 1,
                                "path": "bloks/bluetooth-client/tests/BluetoothDeviceDataTest.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 263,
                                "sloc": 10,
                                "type": "C source, ASCII text"
                            },
                            "name": "BluetoothDeviceDataTest.cpp",
                            "value": 5
                        }
                    ],
                    "counter": {
                        "bytes_count": 263,
                        "risks_count": 0,
                        "sloc_count": 10,
                        "source_files": 1,
                        "value_count": 5
                    },
                    "name": "tests"
                },
                {
                    "children": [
                        {
                            "children": [
                                {
                                    "children": [
                                        {
                                            "meta": {
                                                "aggregate_complexity": 2,
                                                "blank_lines": 6,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [],
                                                "loc": 14,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "Bluetooth",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-client/include/bloks/bluetooth-client/Bluetooth.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 163,
                                                "sloc": 8,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "Bluetooth.h",
                                            "value": 2
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 9,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QString"
                                                ],
                                                "loc": 32,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "BluetoothDeviceData",
                                                "nested_complexity": 3,
                                                "path": "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceData.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 572,
                                                "sloc": 23,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "BluetoothDeviceData.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 8,
                                                "blank_lines": 79,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/Bluetooth.h",
                                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceData.h",
                                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothSocket.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QAbstractListModel",
                                                    "memory"
                                                ],
                                                "loc": 139,
                                                "mime": "text/x-c++; charset=utf-8",
                                                "name": "BluetoothDeviceListModel",
                                                "nested_complexity": 3,
                                                "path": "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceListModel.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 3833,
                                                "sloc": 60,
                                                "type": "C++ source, UTF-8 Unicode text"
                                            },
                                            "name": "BluetoothDeviceListModel.h",
                                            "value": 8
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 7,
                                                "blank_lines": 81,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothDeviceData.h",
                                                    "bloks/common/inc/bloks/common/LaterDeleter.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QIODevice",
                                                    "functional",
                                                    "memory"
                                                ],
                                                "loc": 109,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "BluetoothSocket",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-client/include/bloks/bluetooth-client/BluetoothSocket.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 2629,
                                                "sloc": 28,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "BluetoothSocket.h",
                                            "value": 7
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 2,
                                                "blank_lines": 4,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QLoggingCategory"
                                                ],
                                                "loc": 7,
                                                "mime": "text/x-c; charset=us-ascii",
                                                "name": "Log",
                                                "nested_complexity": 0,
                                                "path": "bloks/bluetooth-client/include/bloks/bluetooth-client/Log.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 116,
                                                "sloc": 3,
                                                "type": "C source, ASCII text"
                                            },
                                            "name": "Log.h",
                                            "value": 2
                                        }
                                    ],
                                    "counter": {
                                        "bytes_count": 7313,
                                        "risks_count": 0,
                                        "sloc_count": 122,
                                        "source_files": 5,
                                        "value_count": 23
                                    },
                                    "name": "bluetooth-client"
                                }
                            ],
                            "counter": {
                                "bytes_count": 7313,
                                "risks_count": 0,
                                "sloc_count": 122,
                                "source_files": 5,
                                "value_count": 23
                            },
                            "name": "bloks"
                        }
                    ],
                    "counter": {
                        "bytes_count": 7313,
                        "risks_count": 0,
                        "sloc_count": 122,
                        "source_files": 5,
                        "value_count": 23
                    },
                    "name": "include"
                }
            ],
            "counter": {
                "bytes_count": 56102,
                "risks_count": 0,
                "sloc_count": 1459,
                "source_files": 17,
                "value_count": 188
            },
            "name": "bluetooth-client"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageReceiver.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/TransportProtocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 14,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "AbstractMessageReceiver",
                                "nested_complexity": 2,
                                "path": "bloks/bluetooth-protocol/src/AbstractMessageReceiver.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 268,
                                "sloc": 8,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "AbstractMessageReceiver.cpp",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageSender.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "AbstractMessageSender",
                                "nested_complexity": 2,
                                "path": "bloks/bluetooth-protocol/src/AbstractMessageSender.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 206,
                                "sloc": 7,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "AbstractMessageSender.cpp",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 9,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AutoReconnectSignalReceiver.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "Envelope_generated.h"
                                ],
                                "loc": 38,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "AutoReconnectSignalReceiver",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-protocol/src/AutoReconnectSignalReceiver.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1126,
                                "sloc": 29,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "AutoReconnectSignalReceiver.cpp",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 17,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AutoReconnectSignalSender.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "Envelope_generated.h"
                                ],
                                "loc": 69,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "AutoReconnectSignalSender",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-protocol/src/AutoReconnectSignalSender.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1612,
                                "sloc": 52,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "AutoReconnectSignalSender.cpp",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 17,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyRequestMessageReceiver.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyStateMessageSender.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/BluetoothPropertyConsumer.h",
                                    "bloks/common/inc/bloks/common/Property.h",
                                    "bloks/common/inc/bloks/common/PropertyBitfields.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 62,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothPropertyConsumer",
                                "nested_complexity": 3,
                                "path": "bloks/bluetooth-protocol/src/BluetoothPropertyConsumer.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2173,
                                "sloc": 45,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothPropertyConsumer.cpp",
                            "value": 11
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 15,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyStateMessageReceiver.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyRequestMessageSender.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/BluetoothPropertyProvider.h",
                                    "bloks/common/inc/bloks/common/PropertyBitfields.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 54,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothPropertyProvider",
                                "nested_complexity": 3,
                                "path": "bloks/bluetooth-protocol/src/BluetoothPropertyProvider.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1728,
                                "sloc": 39,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothPropertyProvider.cpp",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 10,
                                "decision_complexity": 0,
                                "extension": ".fbs",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 45,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "Envelope",
                                "nested_complexity": 1,
                                "path": "bloks/bluetooth-protocol/src/Envelope.fbs",
                                "risks": [],
                                "risks_points": 0,
                                "size": 650,
                                "sloc": 35,
                                "type": "C source, ASCII text"
                            },
                            "name": "Envelope.fbs",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 10,
                                "blank_lines": 21,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/Handshaker.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "chrono"
                                ],
                                "loc": 121,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Handshaker",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-protocol/src/Handshaker.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2942,
                                "sloc": 100,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Handshaker.cpp",
                            "value": 10
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 10,
                                "blank_lines": 35,
                                "decision_complexity": 4,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HandshakerClient.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QIODevice"
                                ],
                                "loc": 82,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "HandshakerClient",
                                "nested_complexity": 3,
                                "path": "bloks/bluetooth-protocol/src/HandshakerClient.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2454,
                                "sloc": 47,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "HandshakerClient.cpp",
                            "value": 10
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 36,
                                "decision_complexity": 5,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HandshakerServer.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QIODevice"
                                ],
                                "loc": 90,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "HandshakerServer",
                                "nested_complexity": 3,
                                "path": "bloks/bluetooth-protocol/src/HandshakerServer.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2887,
                                "sloc": 54,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "HandshakerServer.cpp",
                            "value": 11
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 10,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HeartBeatMessageReceiver.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "Envelope_generated.h",
                                    "QIODevice"
                                ],
                                "loc": 32,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "HeartBeatMessageReceiver",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-protocol/src/HeartBeatMessageReceiver.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 671,
                                "sloc": 22,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "HeartBeatMessageReceiver.cpp",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 12,
                                "blank_lines": 20,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HeartBeatMessageSender.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/common/inc/bloks/common/Property.h",
                                    "bloks/common/inc/bloks/common/PropertyId.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "Envelope_generated.h",
                                    "QDebug"
                                ],
                                "loc": 94,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "HeartBeatMessageSender",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-protocol/src/HeartBeatMessageSender.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2325,
                                "sloc": 74,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "HeartBeatMessageSender.cpp",
                            "value": 12
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 14,
                                "decision_complexity": 4,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageReceiver.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/MessageRouter.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/TransportProtocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 59,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "MessageRouter",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-protocol/src/MessageRouter.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1285,
                                "sloc": 45,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "MessageRouter.cpp",
                            "value": 11
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 20,
                                "blank_lines": 37,
                                "decision_complexity": 12,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageSender.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/MessageScheduler.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/TransportProtocol.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 134,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "MessageScheduler",
                                "nested_complexity": 5,
                                "path": "bloks/bluetooth-protocol/src/MessageScheduler.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3881,
                                "sloc": 97,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "MessageScheduler.cpp",
                            "value": 20
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 10,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyRequestMessageReceiver.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "Envelope_generated.h",
                                    "QIODevice"
                                ],
                                "loc": 48,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyRequestMessageReceiver",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-protocol/src/PropertyRequestMessageReceiver.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1539,
                                "sloc": 38,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyRequestMessageReceiver.cpp",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 9,
                                "blank_lines": 19,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyRequestMessageSender.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "Envelope_generated.h"
                                ],
                                "loc": 92,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyRequestMessageSender",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-protocol/src/PropertyRequestMessageSender.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2413,
                                "sloc": 73,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyRequestMessageSender.cpp",
                            "value": 9
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 10,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyStateMessageReceiver.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "Envelope_generated.h",
                                    "QIODevice"
                                ],
                                "loc": 38,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyStateMessageReceiver",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-protocol/src/PropertyStateMessageReceiver.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1047,
                                "sloc": 28,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyStateMessageReceiver.cpp",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 9,
                                "blank_lines": 14,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyStateMessageSender.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "Envelope_generated.h"
                                ],
                                "loc": 68,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyStateMessageSender",
                                "nested_complexity": 4,
                                "path": "bloks/bluetooth-protocol/src/PropertyStateMessageSender.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1599,
                                "sloc": 54,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyStateMessageSender.cpp",
                            "value": 9
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 34,
                                "blank_lines": 44,
                                "decision_complexity": 24,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/TransportProtocol.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QIODevice",
                                    "QTimer"
                                ],
                                "loc": 268,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TransportProtocol",
                                "nested_complexity": 6,
                                "path": "bloks/bluetooth-protocol/src/TransportProtocol.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 7045,
                                "sloc": 224,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TransportProtocol.cpp",
                            "value": 34
                        }
                    ],
                    "counter": {
                        "bytes_count": 37851,
                        "risks_count": 0,
                        "sloc_count": 1071,
                        "source_files": 19,
                        "value_count": 192
                    },
                    "name": "src"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 13,
                                "blank_lines": 101,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/BluetoothPropertyProvider.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/BluetoothPropertyConsumer.h",
                                    "bloks/bluetooth-protocol/tests/PropertyProviderConsumerTest.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "bloks/bluetooth-protocol/PropertyMessageReceiver.h",
                                    "bloks/bluetooth-protocol/PropertyMessageSender.h",
                                    "QTcpSocket",
                                    "QtTest/QSignalSpy",
                                    "QtTest/QTest",
                                    "sys/socket.h",
                                    "memory"
                                ],
                                "loc": 175,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyProviderConsumerTest",
                                "nested_complexity": 2,
                                "path": "bloks/bluetooth-protocol/tests/PropertyProviderConsumerTest.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 6614,
                                "sloc": 74,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyProviderConsumerTest.cpp",
                            "value": 13
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 17,
                                "blank_lines": 50,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyRequestMessageReceiver.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyRequestMessageSender.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyStateMessageReceiver.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyStateMessageSender.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/Handshaker.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/MessageRouter.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/TransportProtocol.h",
                                    "bloks/bluetooth-protocol/tests/SourceReceiverTest.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTcpSocket",
                                    "QtTest/QSignalSpy",
                                    "QtTest/QTest",
                                    "sys/socket.h",
                                    "memory"
                                ],
                                "loc": 198,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "SourceReceiverTest",
                                "nested_complexity": 3,
                                "path": "bloks/bluetooth-protocol/tests/SourceReceiverTest.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 6432,
                                "sloc": 148,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "SourceReceiverTest.cpp",
                            "value": 17
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 12,
                                "blank_lines": 32,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HandshakerClient.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HandshakerServer.h",
                                    "bloks/bluetooth-protocol/tests/TestHandshaker.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTimer",
                                    "QtTest/QSignalSpy",
                                    "QtTest/QTest",
                                    "memory"
                                ],
                                "loc": 178,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestHandshaker",
                                "nested_complexity": 2,
                                "path": "bloks/bluetooth-protocol/tests/TestHandshaker.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5418,
                                "sloc": 146,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestHandshaker.cpp",
                            "value": 12
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 16,
                                "blank_lines": 28,
                                "decision_complexity": 4,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageReceiver.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageSender.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/MessageRouter.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/TransportProtocol.h",
                                    "bloks/bluetooth-protocol/tests/TestMessageRouter.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTcpSocket",
                                    "QtTest/QTest",
                                    "sys/socket.h",
                                    "memory"
                                ],
                                "loc": 143,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestMessageRouter",
                                "nested_complexity": 3,
                                "path": "bloks/bluetooth-protocol/tests/TestMessageRouter.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3579,
                                "sloc": 115,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestMessageRouter.cpp",
                            "value": 16
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 15,
                                "blank_lines": 35,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageReceiver.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageSender.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/MessageScheduler.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/TransportProtocol.h",
                                    "bloks/bluetooth-protocol/tests/TestMessageScheduler.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTcpSocket",
                                    "QtTest/QTest",
                                    "memory",
                                    "sys/socket.h"
                                ],
                                "loc": 157,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestMessageScheduler",
                                "nested_complexity": 3,
                                "path": "bloks/bluetooth-protocol/tests/TestMessageScheduler.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3984,
                                "sloc": 122,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestMessageScheduler.cpp",
                            "value": 15
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 42,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/TransportProtocol.h",
                                    "bloks/bluetooth-protocol/tests/TestTransportProtocol.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTcpSocket",
                                    "QtTest/QSignalSpy",
                                    "QtTest/QTest",
                                    "sys/socket.h",
                                    "memory"
                                ],
                                "loc": 201,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestTransportProtocol",
                                "nested_complexity": 2,
                                "path": "bloks/bluetooth-protocol/tests/TestTransportProtocol.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5489,
                                "sloc": 159,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestTransportProtocol.cpp",
                            "value": 11
                        }
                    ],
                    "counter": {
                        "bytes_count": 31516,
                        "risks_count": 0,
                        "sloc_count": 764,
                        "source_files": 6,
                        "value_count": 84
                    },
                    "name": "tests"
                },
                {
                    "children": [
                        {
                            "children": [
                                {
                                    "children": [
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 8,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QByteArray",
                                                    "QObject"
                                                ],
                                                "loc": 21,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "AbstractMessageReceiver",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageReceiver.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 331,
                                                "sloc": 13,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "AbstractMessageReceiver.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 9,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QByteArray",
                                                    "QObject"
                                                ],
                                                "loc": 25,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "AbstractMessageSender",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageSender.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 398,
                                                "sloc": 16,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "AbstractMessageSender.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 10,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageReceiver.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QtCore/QObject"
                                                ],
                                                "loc": 24,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "AutoReconnectSignalReceiver",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AutoReconnectSignalReceiver.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 441,
                                                "sloc": 14,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "AutoReconnectSignalReceiver.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 10,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageSender.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject"
                                                ],
                                                "loc": 31,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "AutoReconnectSignalSender",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AutoReconnectSignalSender.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 578,
                                                "sloc": 21,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "AutoReconnectSignalSender.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 3,
                                                "blank_lines": 11,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/common/inc/bloks/common/AbstractPropertyConsumer.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [],
                                                "loc": 30,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "BluetoothPropertyConsumer",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/BluetoothPropertyConsumer.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 684,
                                                "sloc": 19,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "BluetoothPropertyConsumer.h",
                                            "value": 3
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 12,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/common/inc/bloks/common/AbstractPropertyProvider.h",
                                                    "bloks/common/inc/bloks/common/Property.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [],
                                                "loc": 33,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "BluetoothPropertyProvider",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/BluetoothPropertyProvider.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 784,
                                                "sloc": 21,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "BluetoothPropertyProvider.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 8,
                                                "blank_lines": 28,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QByteArray",
                                                    "QObject",
                                                    "QTimer",
                                                    "bloks/BluetoothProtocol-version.h"
                                                ],
                                                "loc": 112,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "Handshaker",
                                                "nested_complexity": 4,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/Handshaker.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 2360,
                                                "sloc": 84,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "Handshaker.h",
                                            "value": 8
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 3,
                                                "blank_lines": 9,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/Handshaker.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [],
                                                "loc": 23,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "HandshakerClient",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HandshakerClient.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 401,
                                                "sloc": 14,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "HandshakerClient.h",
                                            "value": 3
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 3,
                                                "blank_lines": 9,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/Handshaker.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [],
                                                "loc": 22,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "HandshakerServer",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HandshakerServer.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 342,
                                                "sloc": 13,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "HandshakerServer.h",
                                            "value": 3
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 11,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageReceiver.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QtCore/QByteArray",
                                                    "QtCore/QObject"
                                                ],
                                                "loc": 26,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "HeartBeatMessageReceiver",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HeartBeatMessageReceiver.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 436,
                                                "sloc": 15,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "HeartBeatMessageReceiver.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 6,
                                                "blank_lines": 10,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageSender.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QTimer",
                                                    "memory"
                                                ],
                                                "loc": 37,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "HeartBeatMessageSender",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HeartBeatMessageSender.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 754,
                                                "sloc": 27,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "HeartBeatMessageSender.h",
                                            "value": 6
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 2,
                                                "blank_lines": 4,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QLoggingCategory"
                                                ],
                                                "loc": 7,
                                                "mime": "text/x-c; charset=us-ascii",
                                                "name": "Log",
                                                "nested_complexity": 0,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/Log.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 118,
                                                "sloc": 3,
                                                "type": "C source, ASCII text"
                                            },
                                            "name": "Log.h",
                                            "value": 2
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 13,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QList",
                                                    "QObject"
                                                ],
                                                "loc": 35,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "MessageRouter",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/MessageRouter.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 692,
                                                "sloc": 22,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "MessageRouter.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 6,
                                                "blank_lines": 18,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QMap",
                                                    "QObject"
                                                ],
                                                "loc": 53,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "MessageScheduler",
                                                "nested_complexity": 4,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/MessageScheduler.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1247,
                                                "sloc": 35,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "MessageScheduler.h",
                                            "value": 6
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 11,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageReceiver.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QtCore/QByteArray",
                                                    "QtCore/QObject"
                                                ],
                                                "loc": 27,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "PropertyRequestMessageReceiver",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyRequestMessageReceiver.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 527,
                                                "sloc": 16,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "PropertyRequestMessageReceiver.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 13,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageSender.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "queue"
                                                ],
                                                "loc": 36,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "PropertyRequestMessageSender",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyRequestMessageSender.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 688,
                                                "sloc": 23,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "PropertyRequestMessageSender.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 11,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageReceiver.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QtCore/QByteArray",
                                                    "QtCore/QObject"
                                                ],
                                                "loc": 26,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "PropertyStateMessageReceiver",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyStateMessageReceiver.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 473,
                                                "sloc": 15,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "PropertyStateMessageReceiver.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 13,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AbstractMessageSender.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "queue"
                                                ],
                                                "loc": 35,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "PropertyStateMessageSender",
                                                "nested_complexity": 2,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyStateMessageSender.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 626,
                                                "sloc": 22,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "PropertyStateMessageSender.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 17,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/Handshaker.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject"
                                                ],
                                                "loc": 61,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "TransportProtocol",
                                                "nested_complexity": 3,
                                                "path": "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/TransportProtocol.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1219,
                                                "sloc": 44,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "TransportProtocol.h",
                                            "value": 5
                                        }
                                    ],
                                    "counter": {
                                        "bytes_count": 13099,
                                        "risks_count": 0,
                                        "sloc_count": 437,
                                        "source_files": 19,
                                        "value_count": 85
                                    },
                                    "name": "bluetooth-protocol"
                                }
                            ],
                            "counter": {
                                "bytes_count": 13099,
                                "risks_count": 0,
                                "sloc_count": 437,
                                "source_files": 19,
                                "value_count": 85
                            },
                            "name": "bloks"
                        }
                    ],
                    "counter": {
                        "bytes_count": 13099,
                        "risks_count": 0,
                        "sloc_count": 437,
                        "source_files": 19,
                        "value_count": 85
                    },
                    "name": "include"
                }
            ],
            "counter": {
                "bytes_count": 82466,
                "risks_count": 0,
                "sloc_count": 2272,
                "source_files": 44,
                "value_count": 361
            },
            "name": "bluetooth-protocol"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 30,
                                "blank_lines": 32,
                                "decision_complexity": 14,
                                "extension": ".c",
                                "imports": [
                                    "bloks/bluetoothserver/btstack/authentication_coprocessor.c",
                                    "bloks/bluetoothserver/btstack/btstack_config.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "fcntl.h",
                                    "linux/i2c-dev.h",
                                    "stdint.h",
                                    "stdio.h",
                                    "stdlib.h",
                                    "string.h",
                                    "sys/ioctl.h",
                                    "sys/stat.h",
                                    "termios.h",
                                    "unistd.h",
                                    "time.h"
                                ],
                                "loc": 139,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "authentication_coprocessor",
                                "nested_complexity": 3,
                                "path": "bloks/bluetoothserver/btstack/authentication_coprocessor.c",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3458,
                                "sloc": 107,
                                "type": "C source, ASCII text"
                            },
                            "name": "authentication_coprocessor.c",
                            "value": 30
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 11,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QLoggingCategory",
                                    "stdarg.h",
                                    "stdio.h"
                                ],
                                "loc": 56,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "bloks_logging",
                                "nested_complexity": 2,
                                "path": "bloks/bluetoothserver/btstack/bloks_logging.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1130,
                                "sloc": 45,
                                "type": "C source, ASCII text"
                            },
                            "name": "bloks_logging.cpp",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 33,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 56,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "btstack_config",
                                "nested_complexity": 0,
                                "path": "bloks/bluetoothserver/btstack/btstack_config.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1713,
                                "sloc": 23,
                                "type": "C source, ASCII text"
                            },
                            "name": "btstack_config.h",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 40,
                                "blank_lines": 113,
                                "decision_complexity": 21,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetoothserver/btstack/btstack_run_loop_qt5.h",
                                    "bloks/bluetoothserver/btstack/btstack_run_loop_qt5.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "btstack_run_loop.h",
                                    "btstack_debug.h",
                                    "btstack_linked_list.h",
                                    "QDateTime",
                                    "QTimer",
                                    "thread",
                                    "mutex",
                                    "atomic",
                                    "vector",
                                    "sys/socket.h",
                                    "unistd.h"
                                ],
                                "loc": 357,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "btstack_run_loop_qt5",
                                "nested_complexity": 6,
                                "path": "bloks/bluetoothserver/btstack/btstack_run_loop_qt5.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 9470,
                                "sloc": 244,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "btstack_run_loop_qt5.cpp",
                            "value": 40
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 7,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "btstack_run_loop.h"
                                ],
                                "loc": 12,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "btstack_run_loop_qt5",
                                "nested_complexity": 0,
                                "path": "bloks/bluetoothserver/btstack/btstack_run_loop_qt5.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 228,
                                "sloc": 5,
                                "type": "C source, ASCII text"
                            },
                            "name": "btstack_run_loop_qt5.h",
                            "value": 2
                        }
                    ],
                    "counter": {
                        "bytes_count": 15999,
                        "risks_count": 0,
                        "sloc_count": 424,
                        "source_files": 5,
                        "value_count": 80
                    },
                    "name": "btstack"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 1,
                                "decision_complexity": 0,
                                "extension": "",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 5,
                                "mime": "text/x-shellscript; charset=us-ascii",
                                "name": "postinst",
                                "nested_complexity": 0,
                                "path": "bloks/bluetoothserver/debian/postinst",
                                "risks": [],
                                "risks_points": 0,
                                "size": 81,
                                "sloc": 4,
                                "type": "POSIX shell script, ASCII text executable"
                            },
                            "name": "postinst",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 1,
                                "decision_complexity": 1,
                                "extension": "",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 11,
                                "mime": "text/x-shellscript; charset=us-ascii",
                                "name": "prerm",
                                "nested_complexity": 0,
                                "path": "bloks/bluetoothserver/debian/prerm",
                                "risks": [],
                                "risks_points": 0,
                                "size": 243,
                                "sloc": 10,
                                "type": "POSIX shell script, ASCII text executable"
                            },
                            "name": "prerm",
                            "value": 2
                        }
                    ],
                    "counter": {
                        "bytes_count": 324,
                        "risks_count": 0,
                        "sloc_count": 14,
                        "source_files": 2,
                        "value_count": 3
                    },
                    "name": "debian"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 29,
                                "blank_lines": 59,
                                "decision_complexity": 12,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/OemData.h",
                                    "bloks/frontend-sdk/include/bloks/BluetoothServer.h",
                                    "bloks/bluetoothserver/src/BtStackIap2Socket.h",
                                    "bloks/bluetoothserver/src/BtStackRfcommSocket.h",
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/bluetoothserver/btstack/btstack_run_loop_qt5.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QDBusConnection",
                                    "QDBusError",
                                    "QEventLoop",
                                    "QTcpSocket",
                                    "QTimer",
                                    "functional"
                                ],
                                "loc": 271,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothServer",
                                "nested_complexity": 4,
                                "path": "bloks/bluetoothserver/src/BluetoothServer.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 9056,
                                "sloc": 212,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothServer.cpp",
                            "value": 29
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 15,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/dbus/include/bloks/dbus/DBusPropertyProvider.h",
                                    "bloks/bluetoothserver/src/BtMessageServer.h",
                                    "bloks/bluetoothserver/src/BtStackDevice.h",
                                    "bloks/bluetoothserver/src/BtStackIap2Server.h",
                                    "bloks/bluetoothserver/src/BtStackRfcommServer.h",
                                    "bloks/bluetoothserver/src/BtStateMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QTcpServer",
                                    "memory"
                                ],
                                "loc": 57,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BluetoothServer",
                                "nested_complexity": 2,
                                "path": "bloks/bluetoothserver/src/BluetoothServer.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1279,
                                "sloc": 42,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BluetoothServer.h",
                            "value": 11
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 14,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetoothserver/src/BtMessageServer.h",
                                    "bloks/bluetoothserver/src/BtStackDevice.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 76,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtMessageServer",
                                "nested_complexity": 3,
                                "path": "bloks/bluetoothserver/src/BtMessageServer.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2261,
                                "sloc": 62,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtMessageServer.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 12,
                                "blank_lines": 17,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/AutoReconnectSignalReceiver.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/BluetoothPropertyConsumer.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HandshakerServer.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/HeartBeatMessageSender.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/MessageRouter.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/MessageScheduler.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyRequestMessageReceiver.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/PropertyStateMessageSender.h",
                                    "bloks/bluetooth-protocol/include/bloks/bluetooth-protocol/TransportProtocol.h",
                                    "bloks/common/inc/bloks/common/AbstractPropertyProvider.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 55,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtMessageServer",
                                "nested_complexity": 2,
                                "path": "bloks/bluetoothserver/src/BtMessageServer.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1462,
                                "sloc": 38,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtMessageServer.h",
                            "value": 12
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 13,
                                "blank_lines": 30,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetoothserver/src/BtStackCsr.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "chipset/csr/btstack_chipset_csr.h",
                                    "hci_transport.h",
                                    "QMap"
                                ],
                                "loc": 202,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackCsr",
                                "nested_complexity": 5,
                                "path": "bloks/bluetoothserver/src/BtStackCsr.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5954,
                                "sloc": 172,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackCsr.cpp",
                            "value": 13
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 9,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "btstack_chipset.h"
                                ],
                                "loc": 24,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackCsr",
                                "nested_complexity": 2,
                                "path": "bloks/bluetoothserver/src/BtStackCsr.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 585,
                                "sloc": 15,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackCsr.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 44,
                                "blank_lines": 90,
                                "decision_complexity": 29,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetoothserver/src/BtStackDevice.h",
                                    "bloks/bluetoothserver/src/BtStackCsr.h",
                                    "bloks/bluetoothserver/src/BtStackLinkKeyDb.h",
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "btstack.h",
                                    "btstack_memory_mfi.h",
                                    "hci_transport.h",
                                    "QFile",
                                    "QThread"
                                ],
                                "loc": 518,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackDevice",
                                "nested_complexity": 5,
                                "path": "bloks/bluetoothserver/src/BtStackDevice.cpp",
                                "risks": [
                                    "[info] Arguably many lines of code, this may be ok for now."
                                ],
                                "risks_points": 2,
                                "size": 15346,
                                "sloc": 428,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackDevice.cpp",
                            "value": 44
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 153,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QSettings",
                                    "QString",
                                    "memory"
                                ],
                                "loc": 218,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackDevice",
                                "nested_complexity": 2,
                                "path": "bloks/bluetoothserver/src/BtStackDevice.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5814,
                                "sloc": 65,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackDevice.h",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 50,
                                "blank_lines": 109,
                                "decision_complexity": 30,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetoothserver/src/BtStackIap2Server.h",
                                    "bloks/bluetoothserver/src/BtStackDevice.h",
                                    "bloks/bluetoothserver/src/BtStackIap2Socket.h",
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTimer",
                                    "list",
                                    "memory",
                                    "btstack.h",
                                    "btstack_memory_mfi.h",
                                    "btstack_util.h",
                                    "iap2_btstack.h",
                                    "sdp_client_rfcomm.h"
                                ],
                                "loc": 557,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackIap2Server",
                                "nested_complexity": 7,
                                "path": "bloks/bluetoothserver/src/BtStackIap2Server.cpp",
                                "risks": [
                                    "[info] Arguably many lines of code, this may be ok for now."
                                ],
                                "risks_points": 2,
                                "size": 18424,
                                "sloc": 448,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackIap2Server.cpp",
                            "value": 50
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 66,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QQueue",
                                    "iAP2LinkRunLoop.h"
                                ],
                                "loc": 120,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackIap2Server",
                                "nested_complexity": 2,
                                "path": "bloks/bluetoothserver/src/BtStackIap2Server.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2724,
                                "sloc": 54,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackIap2Server.h",
                            "value": 5
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 19,
                                "blank_lines": 60,
                                "decision_complexity": 6,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetoothserver/src/BtStackIap2Socket.h",
                                    "bloks/bluetoothserver/src/BtStackIap2Server.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "btstack.h",
                                    "btstack_memory_mfi.h",
                                    "QBuffer",
                                    "QMetaObject",
                                    "unordered_map"
                                ],
                                "loc": 190,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackIap2Socket",
                                "nested_complexity": 5,
                                "path": "bloks/bluetoothserver/src/BtStackIap2Socket.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5539,
                                "sloc": 130,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackIap2Socket.cpp",
                            "value": 19
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 31,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QIODevice",
                                    "memory",
                                    "iap2_btstack.h"
                                ],
                                "loc": 76,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackIap2Socket",
                                "nested_complexity": 2,
                                "path": "bloks/bluetoothserver/src/BtStackIap2Socket.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1686,
                                "sloc": 45,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackIap2Socket.h",
                            "value": 5
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 23,
                                "blank_lines": 50,
                                "decision_complexity": 10,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetoothserver/src/BtStackLinkKeyDb.h",
                                    "bloks/bluetoothserver/src/BtStackDevice.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QByteArray",
                                    "QSettings",
                                    "QString",
                                    "btstack_util.h",
                                    "memory"
                                ],
                                "loc": 225,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackLinkKeyDb",
                                "nested_complexity": 5,
                                "path": "bloks/bluetoothserver/src/BtStackLinkKeyDb.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 6370,
                                "sloc": 175,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackLinkKeyDb.cpp",
                            "value": 23
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 8,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "classic/btstack_link_key_db.h"
                                ],
                                "loc": 13,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackLinkKeyDb",
                                "nested_complexity": 1,
                                "path": "bloks/bluetoothserver/src/BtStackLinkKeyDb.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 187,
                                "sloc": 5,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackLinkKeyDb.h",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 30,
                                "blank_lines": 53,
                                "decision_complexity": 18,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetoothserver/src/BtStackRfcommServer.h",
                                    "bloks/bluetoothserver/src/BtStackDevice.h",
                                    "bloks/bluetoothserver/src/BtStackRfcommSocket.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "btstack.h",
                                    "list",
                                    "memory"
                                ],
                                "loc": 246,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackRfcommServer",
                                "nested_complexity": 5,
                                "path": "bloks/bluetoothserver/src/BtStackRfcommServer.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 6691,
                                "sloc": 193,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackRfcommServer.cpp",
                            "value": 30
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 62,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QQueue"
                                ],
                                "loc": 103,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackRfcommServer",
                                "nested_complexity": 2,
                                "path": "bloks/bluetoothserver/src/BtStackRfcommServer.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2181,
                                "sloc": 41,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackRfcommServer.h",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 12,
                                "blank_lines": 27,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetoothserver/src/BtStackRfcommSocket.h",
                                    "bloks/bluetoothserver/src/BtStackRfcommServer.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QBuffer",
                                    "btstack.h",
                                    "unordered_map"
                                ],
                                "loc": 131,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackRfcommSocket",
                                "nested_complexity": 3,
                                "path": "bloks/bluetoothserver/src/BtStackRfcommSocket.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2779,
                                "sloc": 104,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackRfcommSocket.cpp",
                            "value": 12
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 28,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QIODevice"
                                ],
                                "loc": 65,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStackRfcommSocket",
                                "nested_complexity": 2,
                                "path": "bloks/bluetoothserver/src/BtStackRfcommSocket.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1419,
                                "sloc": 37,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStackRfcommSocket.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 14,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetoothserver/src/BtStateMaster.h",
                                    "bloks/bluetoothserver/src/BtStackDevice.h",
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/common/inc/bloks/common/OemData.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 56,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStateMaster",
                                "nested_complexity": 3,
                                "path": "bloks/bluetoothserver/src/BtStateMaster.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1154,
                                "sloc": 42,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStateMaster.cpp",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 77,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QString"
                                ],
                                "loc": 113,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BtStateMaster",
                                "nested_complexity": 3,
                                "path": "bloks/bluetoothserver/src/BtStateMaster.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2961,
                                "sloc": 36,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BtStateMaster.h",
                            "value": 5
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 31,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/common/inc/bloks/common/JsonUtils.h",
                                    "bloks/common/inc/bloks/common/OemData.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QFile"
                                ],
                                "loc": 135,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Config",
                                "nested_complexity": 3,
                                "path": "bloks/bluetoothserver/src/Config.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3856,
                                "sloc": 104,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Config.cpp",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 11,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "iap2_btstack.h"
                                ],
                                "loc": 24,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Config",
                                "nested_complexity": 1,
                                "path": "bloks/bluetoothserver/src/Config.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 571,
                                "sloc": 13,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Config.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 4,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QLoggingCategory"
                                ],
                                "loc": 10,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "Log",
                                "nested_complexity": 0,
                                "path": "bloks/bluetoothserver/src/Log.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 221,
                                "sloc": 6,
                                "type": "C source, ASCII text"
                            },
                            "name": "Log.h",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 15,
                                "blank_lines": 15,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/common/inc/bloks/common/UnixSignals.h",
                                    "bloks/common/inc/bloks/common/OemData.h",
                                    "bloks/frontend-sdk/include/bloks/BluetoothServer.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QCommandLineOption",
                                    "QCommandLineParser",
                                    "QCoreApplication",
                                    "QFile",
                                    "bloks/bluetoothserver-version.h"
                                ],
                                "loc": 58,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "main",
                                "nested_complexity": 3,
                                "path": "bloks/bluetoothserver/src/main.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1605,
                                "sloc": 43,
                                "type": "C source, ASCII text"
                            },
                            "name": "main.cpp",
                            "value": 15
                        }
                    ],
                    "counter": {
                        "bytes_count": 100125,
                        "risks_count": 2,
                        "sloc_count": 2510,
                        "source_files": 24,
                        "value_count": 318
                    },
                    "name": "src"
                }
            ],
            "counter": {
                "bytes_count": 116448,
                "risks_count": 2,
                "sloc_count": 2948,
                "source_files": 31,
                "value_count": 401
            },
            "name": "bluetoothserver"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 10,
                                "blank_lines": 9,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDevice.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QCanBus",
                                    "QCanBusDevice",
                                    "QString",
                                    "QtPlugin"
                                ],
                                "loc": 28,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BloksBusDevice",
                                "nested_complexity": 3,
                                "path": "bloks/can/src/BloksBusDevice.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 531,
                                "sloc": 19,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BloksBusDevice.cpp",
                            "value": 10
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 42,
                                "blank_lines": 119,
                                "decision_complexity": 30,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDevice.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QCanBusDevice",
                                    "QObject",
                                    "QString"
                                ],
                                "loc": 816,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "BloksBusDeviceBase",
                                "nested_complexity": 8,
                                "path": "bloks/can/src/BloksBusDeviceBase.cpp",
                                "risks": [
                                    "[warning] Quite many lines of code, plan on refactoring.",
                                    "[warning] Quite many nested code blocks, most of the code is in the right half of the screen."
                                ],
                                "risks_points": 10,
                                "size": 26574,
                                "sloc": 697,
                                "type": "C source, ASCII text"
                            },
                            "name": "BloksBusDeviceBase.cpp",
                            "value": 42
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 13,
                                "blank_lines": 15,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/CanUtils.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QByteArray",
                                    "QDataStream",
                                    "QMap",
                                    "QString",
                                    "QtGlobal"
                                ],
                                "loc": 85,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "CanUtils",
                                "nested_complexity": 4,
                                "path": "bloks/can/src/CanUtils.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2133,
                                "sloc": 70,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "CanUtils.cpp",
                            "value": 13
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 25,
                                "blank_lines": 39,
                                "decision_complexity": 17,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/RequestQueue.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/common/inc/bloks/common/BloksConsts.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 305,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "RequestQueue",
                                "nested_complexity": 5,
                                "path": "bloks/can/src/RequestQueue.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 8738,
                                "sloc": 266,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "RequestQueue.cpp",
                            "value": 25
                        }
                    ],
                    "counter": {
                        "bytes_count": 37976,
                        "risks_count": 2,
                        "sloc_count": 1052,
                        "source_files": 4,
                        "value_count": 90
                    },
                    "name": "src"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 38,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/RequestQueue.h",
                                    "bloks/can/tests/TestRequestQueue.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QSignalSpy",
                                    "QTest"
                                ],
                                "loc": 161,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestRequestQueue",
                                "nested_complexity": 4,
                                "path": "bloks/can/tests/TestRequestQueue.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 4562,
                                "sloc": 123,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestRequestQueue.cpp",
                            "value": 11
                        },
                        {
                            "children": [
                                {
                                    "meta": {
                                        "aggregate_complexity": 138,
                                        "blank_lines": 94,
                                        "decision_complexity": 122,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/can/tests/fake/MockBloksBusDevice.h",
                                            "bloks/can/include/bloks/can/CanUtils.h",
                                            "bloks/frontend-sdk/src/Log.h",
                                            "bloks/can/tests/fake/MockBloksBusDevice.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QCanBusDevice",
                                            "QCanBusFrame",
                                            "QString",
                                            "QTimer",
                                            "QVector",
                                            "QtGlobal",
                                            "utility"
                                        ],
                                        "loc": 869,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "MockBloksBusDevice",
                                        "nested_complexity": 5,
                                        "path": "bloks/can/tests/fake/MockBloksBusDevice.cpp",
                                        "risks": [
                                            "[warning] Quite many lines of code, plan on refactoring.",
                                            "[error] Way too many decisions, full code coverage is required."
                                        ],
                                        "risks_points": 18,
                                        "size": 34882,
                                        "sloc": 775,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "MockBloksBusDevice.cpp",
                                    "value": 138
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 8,
                                        "blank_lines": 18,
                                        "decision_complexity": 0,
                                        "extension": ".h",
                                        "imports": [
                                            "bloks/can/include/bloks/can/BloksBusDeviceBase.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QCanBusFrame",
                                            "QLoggingCategory",
                                            "QMetaType",
                                            "QVector"
                                        ],
                                        "loc": 41,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "MockBloksBusDevice",
                                        "nested_complexity": 3,
                                        "path": "bloks/can/tests/fake/MockBloksBusDevice.h",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 923,
                                        "sloc": 23,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "MockBloksBusDevice.h",
                                    "value": 8
                                }
                            ],
                            "counter": {
                                "bytes_count": 35805,
                                "risks_count": 2,
                                "sloc_count": 798,
                                "source_files": 2,
                                "value_count": 146
                            },
                            "name": "fake"
                        }
                    ],
                    "counter": {
                        "bytes_count": 40367,
                        "risks_count": 2,
                        "sloc_count": 921,
                        "source_files": 3,
                        "value_count": 157
                    },
                    "name": "tests"
                },
                {
                    "children": [
                        {
                            "children": [
                                {
                                    "children": [
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 15,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [],
                                                "loc": 28,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "BloksBusDevice",
                                                "nested_complexity": 3,
                                                "path": "bloks/can/include/bloks/can/BloksBusDevice.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 500,
                                                "sloc": 13,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "BloksBusDevice.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 7,
                                                "blank_lines": 316,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/CanUtils.h",
                                                    "bloks/can/include/bloks/can/RequestQueue.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QVector"
                                                ],
                                                "loc": 463,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "BloksBusDeviceBase",
                                                "nested_complexity": 3,
                                                "path": "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 18452,
                                                "sloc": 147,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "BloksBusDeviceBase.h",
                                            "value": 7
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 6,
                                                "blank_lines": 56,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QCanBusFrame",
                                                    "QVector",
                                                    "QtGlobal"
                                                ],
                                                "loc": 140,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "CanUtils",
                                                "nested_complexity": 3,
                                                "path": "bloks/can/include/bloks/can/CanUtils.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 3414,
                                                "sloc": 84,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "CanUtils.h",
                                            "value": 6
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 2,
                                                "blank_lines": 4,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QLoggingCategory"
                                                ],
                                                "loc": 7,
                                                "mime": "text/x-c; charset=us-ascii",
                                                "name": "Log",
                                                "nested_complexity": 0,
                                                "path": "bloks/can/include/bloks/can/Log.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 111,
                                                "sloc": 3,
                                                "type": "C source, ASCII text"
                                            },
                                            "name": "Log.h",
                                            "value": 2
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 8,
                                                "blank_lines": 22,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/CanUtils.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "queue",
                                                    "QElapsedTimer",
                                                    "QTimer"
                                                ],
                                                "loc": 91,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "RequestQueue",
                                                "nested_complexity": 4,
                                                "path": "bloks/can/include/bloks/can/RequestQueue.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1693,
                                                "sloc": 69,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "RequestQueue.h",
                                            "value": 8
                                        }
                                    ],
                                    "counter": {
                                        "bytes_count": 24170,
                                        "risks_count": 0,
                                        "sloc_count": 316,
                                        "source_files": 5,
                                        "value_count": 27
                                    },
                                    "name": "can"
                                }
                            ],
                            "counter": {
                                "bytes_count": 24170,
                                "risks_count": 0,
                                "sloc_count": 316,
                                "source_files": 5,
                                "value_count": 27
                            },
                            "name": "bloks"
                        }
                    ],
                    "counter": {
                        "bytes_count": 24170,
                        "risks_count": 0,
                        "sloc_count": 316,
                        "source_files": 5,
                        "value_count": 27
                    },
                    "name": "include"
                }
            ],
            "counter": {
                "bytes_count": 102513,
                "risks_count": 4,
                "sloc_count": 2289,
                "source_files": 12,
                "value_count": 274
            },
            "name": "can"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 11,
                                "decision_complexity": 0,
                                "extension": ".in",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 22,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BloksAddDBusProxy.h",
                                "nested_complexity": 2,
                                "path": "bloks/cmake/modules/BloksAddDBusProxy.h.in",
                                "risks": [],
                                "risks_points": 0,
                                "size": 380,
                                "sloc": 11,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BloksAddDBusProxy.h.in",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 9,
                                "decision_complexity": 0,
                                "extension": ".in",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 32,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BloksVersion.cpp",
                                "nested_complexity": 3,
                                "path": "bloks/cmake/modules/BloksVersion.cpp.in",
                                "risks": [],
                                "risks_points": 0,
                                "size": 503,
                                "sloc": 23,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BloksVersion.cpp.in",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 7,
                                "decision_complexity": 0,
                                "extension": ".in",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 21,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BloksVersion.h",
                                "nested_complexity": 2,
                                "path": "bloks/cmake/modules/BloksVersion.h.in",
                                "risks": [],
                                "risks_points": 0,
                                "size": 625,
                                "sloc": 14,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BloksVersion.h.in",
                            "value": 2
                        }
                    ],
                    "counter": {
                        "bytes_count": 1508,
                        "risks_count": 0,
                        "sloc_count": 48,
                        "source_files": 3,
                        "value_count": 7
                    },
                    "name": "modules"
                }
            ],
            "counter": {
                "bytes_count": 1508,
                "risks_count": 0,
                "sloc_count": 48,
                "source_files": 3,
                "value_count": 7
            },
            "name": "cmake"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 25,
                                "blank_lines": 63,
                                "decision_complexity": 17,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/Crc.h",
                                    "bloks/common/inc/bloks/common/DfuFile.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QDataStream",
                                    "QFile",
                                    "QLoggingCategory"
                                ],
                                "loc": 276,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "DfuFile",
                                "nested_complexity": 3,
                                "path": "bloks/common/src/DfuFile.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 7303,
                                "sloc": 213,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "DfuFile.cpp",
                            "value": 25
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 7,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/FileUtils.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QFile",
                                    "QLoggingCategory"
                                ],
                                "loc": 25,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "FileUtils",
                                "nested_complexity": 4,
                                "path": "bloks/common/src/FileUtils.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 540,
                                "sloc": 18,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "FileUtils.cpp",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 28,
                                "decision_complexity": 3,
                                "extension": ".h",
                                "imports": [
                                    "bloks/common/inc/bloks/common/Property.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 119,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "GenericProperty",
                                "nested_complexity": 4,
                                "path": "bloks/common/src/GenericProperty.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2724,
                                "sloc": 91,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "GenericProperty.h",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 12,
                                "blank_lines": 14,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/JsonUtils.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QFile",
                                    "QJsonDocument",
                                    "QLoggingCategory",
                                    "qjsonobject.h"
                                ],
                                "loc": 51,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "JsonUtils",
                                "nested_complexity": 4,
                                "path": "bloks/common/src/JsonUtils.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1362,
                                "sloc": 37,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "JsonUtils.cpp",
                            "value": 12
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 36,
                                "blank_lines": 26,
                                "decision_complexity": 17,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/common/inc/bloks/common/LogConfig.h",
                                    "bloks/common/inc/bloks/common/LogSinkFile.h",
                                    "bloks/common/inc/bloks/common/LogSinkStd.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QDir",
                                    "QLoggingCategory",
                                    "atomic",
                                    "list",
                                    "memory",
                                    "mutex",
                                    "thread"
                                ],
                                "loc": 219,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Log",
                                "nested_complexity": 8,
                                "path": "bloks/common/src/Log.cpp",
                                "risks": [
                                    "[warning] Quite many nested code blocks, most of the code is in the right half of the screen."
                                ],
                                "risks_points": 5,
                                "size": 5562,
                                "sloc": 193,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Log.cpp",
                            "value": 36
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 16,
                                "blank_lines": 23,
                                "decision_complexity": 6,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/JsonUtils.h",
                                    "bloks/common/inc/bloks/common/LogConfig.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QDir",
                                    "QtGlobal",
                                    "QJsonDocument",
                                    "QJsonObject"
                                ],
                                "loc": 124,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "LogConfig",
                                "nested_complexity": 4,
                                "path": "bloks/common/src/LogConfig.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2729,
                                "sloc": 101,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "LogConfig.cpp",
                            "value": 16
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 8,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/LogSinkFile.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QDateTime",
                                    "QThread"
                                ],
                                "loc": 42,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "LogSinkFile",
                                "nested_complexity": 3,
                                "path": "bloks/common/src/LogSinkFile.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1218,
                                "sloc": 34,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "LogSinkFile.cpp",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 7,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/LogSinkStd.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTextStream",
                                    "QThread",
                                    "QDateTime"
                                ],
                                "loc": 31,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "LogSinkStd",
                                "nested_complexity": 2,
                                "path": "bloks/common/src/LogSinkStd.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 870,
                                "sloc": 24,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "LogSinkStd.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 17,
                                "blank_lines": 14,
                                "decision_complexity": 8,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/JsonUtils.h",
                                    "bloks/common/inc/bloks/common/OemData.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "vector",
                                    "QVariant"
                                ],
                                "loc": 89,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "OemData",
                                "nested_complexity": 5,
                                "path": "bloks/common/src/OemData.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2035,
                                "sloc": 75,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "OemData.cpp",
                            "value": 17
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 27,
                                "blank_lines": 51,
                                "decision_complexity": 21,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/Property.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "cstring"
                                ],
                                "loc": 291,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Property",
                                "nested_complexity": 4,
                                "path": "bloks/common/src/Property.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 6565,
                                "sloc": 240,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Property.cpp",
                            "value": 27
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 9,
                                "blank_lines": 46,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/Property.h",
                                    "bloks/common/inc/bloks/common/PropertyBitfields.h",
                                    "bloks/common/src/PropertyRangePolicy.h",
                                    "bloks/common/src/PropertyIOPolicy.h",
                                    "bloks/common/src/GenericProperty.h",
                                    "bloks/common/src/StringProperty.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 121,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyFactory",
                                "nested_complexity": 3,
                                "path": "bloks/common/src/PropertyFactory.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 8900,
                                "sloc": 75,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyFactory.cpp",
                            "value": 9
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 12,
                                "blank_lines": 13,
                                "decision_complexity": 4,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QDate",
                                    "QString",
                                    "stdint.h"
                                ],
                                "loc": 126,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyIOPolicy",
                                "nested_complexity": 5,
                                "path": "bloks/common/src/PropertyIOPolicy.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2614,
                                "sloc": 113,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyIOPolicy.h",
                            "value": 12
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 10,
                                "blank_lines": 10,
                                "decision_complexity": 3,
                                "extension": ".h",
                                "imports": [
                                    "bloks/common/src/PropertyIOPolicy.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "stdint.h"
                                ],
                                "loc": 57,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "PropertyRangePolicy",
                                "nested_complexity": 5,
                                "path": "bloks/common/src/PropertyRangePolicy.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1067,
                                "sloc": 47,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "PropertyRangePolicy.h",
                            "value": 10
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 17,
                                "blank_lines": 41,
                                "decision_complexity": 11,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/LogSinkFile.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QDir"
                                ],
                                "loc": 148,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "RotationFile",
                                "nested_complexity": 4,
                                "path": "bloks/common/src/RotationFile.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3745,
                                "sloc": 107,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "RotationFile.cpp",
                            "value": 17
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 20,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/common/inc/bloks/common/Property.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 83,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "StringProperty",
                                "nested_complexity": 3,
                                "path": "bloks/common/src/StringProperty.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1356,
                                "sloc": 63,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "StringProperty.h",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 14,
                                "blank_lines": 16,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/UnixSignals.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QtGlobal",
                                    "csignal",
                                    "sys/socket.h",
                                    "sys/types.h",
                                    "unistd.h",
                                    "QCoreApplication",
                                    "QSocketNotifier"
                                ],
                                "loc": 65,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "UnixSignals",
                                "nested_complexity": 4,
                                "path": "bloks/common/src/UnixSignals.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1312,
                                "sloc": 49,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "UnixSignals.cpp",
                            "value": 14
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 22,
                                "blank_lines": 21,
                                "decision_complexity": 8,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/UnixTime.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QtGlobal",
                                    "cstring",
                                    "linux/rtc.h",
                                    "fcntl.h",
                                    "unistd.h",
                                    "stdio.h",
                                    "sys/ioctl.h",
                                    "QFile",
                                    "QLoggingCategory"
                                ],
                                "loc": 96,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "UnixTime",
                                "nested_complexity": 4,
                                "path": "bloks/common/src/UnixTime.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2557,
                                "sloc": 75,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "UnixTime.cpp",
                            "value": 22
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 9,
                                "blank_lines": 8,
                                "decision_complexity": 4,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/VersionUtils.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 39,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "VersionUtils",
                                "nested_complexity": 4,
                                "path": "bloks/common/src/VersionUtils.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 892,
                                "sloc": 31,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "VersionUtils.cpp",
                            "value": 9
                        }
                    ],
                    "counter": {
                        "bytes_count": 53351,
                        "risks_count": 1,
                        "sloc_count": 1586,
                        "source_files": 18,
                        "value_count": 259
                    },
                    "name": "src"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 14,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/common/tests/TestLog.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTest",
                                    "QObject",
                                    "QTextStream",
                                    "QLoggingCategory"
                                ],
                                "loc": 84,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestLog",
                                "nested_complexity": 2,
                                "path": "bloks/common/tests/TestLog.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1814,
                                "sloc": 70,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestLog.cpp",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 12,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/Optional.h",
                                    "bloks/common/tests/TestOptional.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QTest"
                                ],
                                "loc": 48,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestOptional",
                                "nested_complexity": 3,
                                "path": "bloks/common/tests/TestOptional.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 932,
                                "sloc": 36,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestOptional.cpp",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 10,
                                "blank_lines": 19,
                                "decision_complexity": 4,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/RotationFile.h",
                                    "bloks/common/tests/TestRotationFile.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QTest"
                                ],
                                "loc": 107,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestRotationFile",
                                "nested_complexity": 2,
                                "path": "bloks/common/tests/TestRotationFile.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2631,
                                "sloc": 88,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestRotationFile.cpp",
                            "value": 10
                        }
                    ],
                    "counter": {
                        "bytes_count": 5377,
                        "risks_count": 0,
                        "sloc_count": 194,
                        "source_files": 3,
                        "value_count": 25
                    },
                    "name": "tests"
                },
                {
                    "children": [
                        {
                            "children": [
                                {
                                    "children": [
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 14,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/common/inc/bloks/common/Property.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "functional"
                                                ],
                                                "loc": 43,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "AbstractPropertyConsumer",
                                                "nested_complexity": 3,
                                                "path": "bloks/common/inc/bloks/common/AbstractPropertyConsumer.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 909,
                                                "sloc": 29,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "AbstractPropertyConsumer.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 7,
                                                "blank_lines": 13,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/common/inc/bloks/common/Property.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "stdint.h",
                                                    "QString",
                                                    "functional"
                                                ],
                                                "loc": 34,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "AbstractPropertyProvider",
                                                "nested_complexity": 3,
                                                "path": "bloks/common/inc/bloks/common/AbstractPropertyProvider.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 670,
                                                "sloc": 21,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "AbstractPropertyProvider.h",
                                            "value": 7
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 118,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QFile",
                                                    "QObject",
                                                    "QTextStream"
                                                ],
                                                "loc": 145,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "BloksConsts",
                                                "nested_complexity": 2,
                                                "path": "bloks/common/inc/bloks/common/BloksConsts.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 3987,
                                                "sloc": 27,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "BloksConsts.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 3,
                                                "blank_lines": 13,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [],
                                                "loc": 65,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "Crc",
                                                "nested_complexity": 3,
                                                "path": "bloks/common/inc/bloks/common/Crc.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 3885,
                                                "sloc": 52,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "Crc.h",
                                            "value": 3
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 8,
                                                "blank_lines": 17,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/common/inc/bloks/common/Optional.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "memory",
                                                    "vector",
                                                    "QtGlobal",
                                                    "QString",
                                                    "QByteArray"
                                                ],
                                                "loc": 49,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "DfuFile",
                                                "nested_complexity": 2,
                                                "path": "bloks/common/inc/bloks/common/DfuFile.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 929,
                                                "sloc": 32,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "DfuFile.h",
                                            "value": 8
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 8,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QString",
                                                    "QVariant"
                                                ],
                                                "loc": 21,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "FileUtils",
                                                "nested_complexity": 3,
                                                "path": "bloks/common/inc/bloks/common/FileUtils.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 368,
                                                "sloc": 13,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "FileUtils.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 4,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QJsonDocument",
                                                    "QString"
                                                ],
                                                "loc": 16,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "JsonUtils",
                                                "nested_complexity": 2,
                                                "path": "bloks/common/inc/bloks/common/JsonUtils.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 373,
                                                "sloc": 12,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "JsonUtils.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 6,
                                                "blank_lines": 7,
                                                "decision_complexity": 1,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject"
                                                ],
                                                "loc": 20,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "LaterDeleter",
                                                "nested_complexity": 4,
                                                "path": "bloks/common/inc/bloks/common/LaterDeleter.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 270,
                                                "sloc": 13,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "LaterDeleter.h",
                                            "value": 6
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 85,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/common/inc/bloks/common/LogConfig.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QString",
                                                    "functional"
                                                ],
                                                "loc": 113,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "Log",
                                                "nested_complexity": 2,
                                                "path": "bloks/common/inc/bloks/common/Log.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 2787,
                                                "sloc": 28,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "Log.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 3,
                                                "blank_lines": 36,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QString"
                                                ],
                                                "loc": 67,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "LogConfig",
                                                "nested_complexity": 2,
                                                "path": "bloks/common/inc/bloks/common/LogConfig.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1484,
                                                "sloc": 31,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "LogConfig.h",
                                            "value": 3
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 13,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/frontend-sdk/src/Log.h",
                                                    "bloks/common/inc/bloks/common/RotationFile.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [],
                                                "loc": 31,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "LogSinkFile",
                                                "nested_complexity": 2,
                                                "path": "bloks/common/inc/bloks/common/LogSinkFile.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 584,
                                                "sloc": 18,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "LogSinkFile.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 8,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/frontend-sdk/src/Log.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QElapsedTimer"
                                                ],
                                                "loc": 22,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "LogSinkStd",
                                                "nested_complexity": 2,
                                                "path": "bloks/common/inc/bloks/common/LogSinkStd.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 356,
                                                "sloc": 14,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "LogSinkStd.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 3,
                                                "blank_lines": 8,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QString"
                                                ],
                                                "loc": 23,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "OemData",
                                                "nested_complexity": 2,
                                                "path": "bloks/common/inc/bloks/common/OemData.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 431,
                                                "sloc": 15,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "OemData.h",
                                            "value": 3
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 16,
                                                "blank_lines": 76,
                                                "decision_complexity": 9,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QtGlobal",
                                                    "cassert",
                                                    "type_traits"
                                                ],
                                                "loc": 215,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "Optional",
                                                "nested_complexity": 4,
                                                "path": "bloks/common/inc/bloks/common/Optional.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 4820,
                                                "sloc": 139,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "Optional.h",
                                            "value": 16
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 6,
                                                "blank_lines": 18,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "utility"
                                                ],
                                                "loc": 71,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "Pairs",
                                                "nested_complexity": 5,
                                                "path": "bloks/common/inc/bloks/common/Pairs.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1116,
                                                "sloc": 53,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "Pairs.h",
                                            "value": 6
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 20,
                                                "blank_lines": 45,
                                                "decision_complexity": 5,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/common/inc/bloks/common/Optional.h",
                                                    "bloks/common/inc/bloks/common/PropertyId.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "cassert",
                                                    "map",
                                                    "stdint.h",
                                                    "type_traits",
                                                    "typeinfo",
                                                    "QByteArray",
                                                    "QString",
                                                    "QLoggingCategory"
                                                ],
                                                "loc": 223,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "Property",
                                                "nested_complexity": 5,
                                                "path": "bloks/common/inc/bloks/common/Property.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 6044,
                                                "sloc": 178,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "Property.h",
                                            "value": 20
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 15,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "stdint.h"
                                                ],
                                                "loc": 66,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "PropertyBitfields",
                                                "nested_complexity": 3,
                                                "path": "bloks/common/inc/bloks/common/PropertyBitfields.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1200,
                                                "sloc": 51,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "PropertyBitfields.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 23,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "stdint.h",
                                                    "QMetaType"
                                                ],
                                                "loc": 115,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "PropertyId",
                                                "nested_complexity": 2,
                                                "path": "bloks/common/inc/bloks/common/PropertyId.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 5375,
                                                "sloc": 92,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "PropertyId.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 16,
                                                "blank_lines": 24,
                                                "decision_complexity": 7,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/common/inc/bloks/common/Property.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QObject",
                                                    "map"
                                                ],
                                                "loc": 90,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "PropertyStorage",
                                                "nested_complexity": 5,
                                                "path": "bloks/common/inc/bloks/common/PropertyStorage.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 2134,
                                                "sloc": 66,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "PropertyStorage.h",
                                            "value": 16
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 61,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QFile",
                                                    "QObject",
                                                    "QTextStream"
                                                ],
                                                "loc": 90,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "RotationFile",
                                                "nested_complexity": 2,
                                                "path": "bloks/common/inc/bloks/common/RotationFile.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 2185,
                                                "sloc": 29,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "RotationFile.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 3,
                                                "blank_lines": 11,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QtGlobal"
                                                ],
                                                "loc": 20,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "UnixSignals",
                                                "nested_complexity": 2,
                                                "path": "bloks/common/inc/bloks/common/UnixSignals.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 202,
                                                "sloc": 9,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "UnixSignals.h",
                                            "value": 3
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 7,
                                                "blank_lines": 13,
                                                "decision_complexity": 1,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QtGlobal",
                                                    "QDateTime",
                                                    "QTimeZone"
                                                ],
                                                "loc": 30,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "UnixTime",
                                                "nested_complexity": 3,
                                                "path": "bloks/common/inc/bloks/common/UnixTime.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 637,
                                                "sloc": 17,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "UnixTime.h",
                                            "value": 7
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 3,
                                                "blank_lines": 7,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QString"
                                                ],
                                                "loc": 18,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "VersionUtils",
                                                "nested_complexity": 2,
                                                "path": "bloks/common/inc/bloks/common/VersionUtils.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 304,
                                                "sloc": 11,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "VersionUtils.h",
                                            "value": 3
                                        }
                                    ],
                                    "counter": {
                                        "bytes_count": 41050,
                                        "risks_count": 0,
                                        "sloc_count": 950,
                                        "source_files": 23,
                                        "value_count": 146
                                    },
                                    "name": "common"
                                }
                            ],
                            "counter": {
                                "bytes_count": 41050,
                                "risks_count": 0,
                                "sloc_count": 950,
                                "source_files": 23,
                                "value_count": 146
                            },
                            "name": "bloks"
                        }
                    ],
                    "counter": {
                        "bytes_count": 41050,
                        "risks_count": 0,
                        "sloc_count": 950,
                        "source_files": 23,
                        "value_count": 146
                    },
                    "name": "inc"
                }
            ],
            "counter": {
                "bytes_count": 99778,
                "risks_count": 1,
                "sloc_count": 2730,
                "source_files": 44,
                "value_count": 430
            },
            "name": "common"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 1,
                                "decision_complexity": 0,
                                "extension": "",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 5,
                                "mime": "text/x-shellscript; charset=us-ascii",
                                "name": "postinst",
                                "nested_complexity": 0,
                                "path": "bloks/core/debian/postinst",
                                "risks": [],
                                "risks_points": 0,
                                "size": 70,
                                "sloc": 4,
                                "type": "POSIX shell script, ASCII text executable"
                            },
                            "name": "postinst",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 1,
                                "decision_complexity": 1,
                                "extension": "",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 11,
                                "mime": "text/x-shellscript; charset=us-ascii",
                                "name": "prerm",
                                "nested_complexity": 0,
                                "path": "bloks/core/debian/prerm",
                                "risks": [],
                                "risks_points": 0,
                                "size": 232,
                                "sloc": 10,
                                "type": "POSIX shell script, ASCII text executable"
                            },
                            "name": "prerm",
                            "value": 2
                        }
                    ],
                    "counter": {
                        "bytes_count": 302,
                        "risks_count": 0,
                        "sloc_count": 14,
                        "source_files": 2,
                        "value_count": 3
                    },
                    "name": "debian"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 13,
                                "blank_lines": 21,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDevice.h",
                                    "bloks/can/include/bloks/can/CanUtils.h",
                                    "bloks/common/inc/bloks/common/FileUtils.h",
                                    "bloks/common/inc/bloks/common/PropertyId.h",
                                    "bloks/core/inc/bloks/core/Application.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 100,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Application",
                                "nested_complexity": 4,
                                "path": "bloks/core/src/Application.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3431,
                                "sloc": 79,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Application.cpp",
                            "value": 13
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 22,
                                "blank_lines": 21,
                                "decision_complexity": 13,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                    "bloks/core/inc/bloks/core/DeviceHandlerAll.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 180,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "DeviceHandlerAll",
                                "nested_complexity": 5,
                                "path": "bloks/core/src/DeviceHandlerAll.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 6462,
                                "sloc": 159,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "DeviceHandlerAll.cpp",
                            "value": 22
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 10,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                    "bloks/core/inc/bloks/core/DeviceHandlerBattery.h",
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 62,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "DeviceHandlerBattery",
                                "nested_complexity": 3,
                                "path": "bloks/core/src/DeviceHandlerBattery.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2065,
                                "sloc": 52,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "DeviceHandlerBattery.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 16,
                                "blank_lines": 19,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/core/inc/bloks/core/DeviceHandlerDisplay.h",
                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                    "bloks/can/include/bloks/can/CanUtils.h",
                                    "bloks/common/inc/bloks/common/BloksConsts.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "cstring",
                                    "fstream",
                                    "QTimer"
                                ],
                                "loc": 59,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "DeviceHandlerDisplay",
                                "nested_complexity": 6,
                                "path": "bloks/core/src/DeviceHandlerDisplay.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1427,
                                "sloc": 40,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "DeviceHandlerDisplay.cpp",
                            "value": 16
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 8,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                    "bloks/core/inc/bloks/core/DeviceHandlerGearShift.h",
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 38,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "DeviceHandlerGearShift",
                                "nested_complexity": 3,
                                "path": "bloks/core/src/DeviceHandlerGearShift.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1096,
                                "sloc": 30,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "DeviceHandlerGearShift.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 8,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                    "bloks/core/inc/bloks/core/DeviceHandlerLight.h",
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 35,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "DeviceHandlerLight",
                                "nested_complexity": 3,
                                "path": "bloks/core/src/DeviceHandlerLight.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 999,
                                "sloc": 27,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "DeviceHandlerLight.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                    "bloks/can/include/bloks/can/CanUtils.h",
                                    "bloks/core/inc/bloks/core/DeviceHandlerMotor.h",
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTimer"
                                ],
                                "loc": 88,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "DeviceHandlerMotor",
                                "nested_complexity": 3,
                                "path": "bloks/core/src/DeviceHandlerMotor.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2962,
                                "sloc": 75,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "DeviceHandlerMotor.cpp",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 22,
                                "blank_lines": 12,
                                "decision_complexity": 11,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                    "bloks/core/inc/bloks/core/DeviceHandlerNode.h",
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTimer"
                                ],
                                "loc": 125,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "DeviceHandlerNode",
                                "nested_complexity": 7,
                                "path": "bloks/core/src/DeviceHandlerNode.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3860,
                                "sloc": 113,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "DeviceHandlerNode.cpp",
                            "value": 22
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 8,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                    "bloks/core/inc/bloks/core/DeviceHandlerRemote.h",
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 37,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "DeviceHandlerRemote",
                                "nested_complexity": 3,
                                "path": "bloks/core/src/DeviceHandlerRemote.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1083,
                                "sloc": 29,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "DeviceHandlerRemote.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 9,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/core/inc/bloks/core/SystemSetupMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QString"
                                ],
                                "loc": 28,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "SystemSetupMaster",
                                "nested_complexity": 3,
                                "path": "bloks/core/src/SystemSetupMaster.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 494,
                                "sloc": 19,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "SystemSetupMaster.cpp",
                            "value": 5
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 13,
                                "blank_lines": 19,
                                "decision_complexity": 6,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QString"
                                ],
                                "loc": 80,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "VehicleStateMaster",
                                "nested_complexity": 4,
                                "path": "bloks/core/src/VehicleStateMaster.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1850,
                                "sloc": 61,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "VehicleStateMaster.cpp",
                            "value": 13
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 31,
                                "blank_lines": 34,
                                "decision_complexity": 14,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/core/inc/bloks/core/VersionInfoCollector.h",
                                    "bloks/core/inc/bloks/core/VersionQuery.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                    "bloks/common/inc/bloks/common/BloksConsts.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QJsonArray",
                                    "QJsonDocument",
                                    "QJsonObject",
                                    "QTimer",
                                    "QVector"
                                ],
                                "loc": 242,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "VersionInfoCollector",
                                "nested_complexity": 7,
                                "path": "bloks/core/src/VersionInfoCollector.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 8687,
                                "sloc": 208,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "VersionInfoCollector.cpp",
                            "value": 31
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 31,
                                "blank_lines": 34,
                                "decision_complexity": 21,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/core/inc/bloks/core/VersionQuery.h",
                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                    "bloks/common/inc/bloks/common/BloksConsts.h",
                                    "bloks/common/inc/bloks/common/Pairs.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QtMath"
                                ],
                                "loc": 313,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "VersionQuery",
                                "nested_complexity": 5,
                                "path": "bloks/core/src/VersionQuery.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 8309,
                                "sloc": 279,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "VersionQuery.cpp",
                            "value": 31
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 31,
                                "blank_lines": 27,
                                "decision_complexity": 17,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/VersionUtils.h",
                                    "bloks/core/inc/bloks/core/VersionTable.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QDateTime",
                                    "QJsonArray",
                                    "QJsonDocument",
                                    "QJsonObject",
                                    "QVector"
                                ],
                                "loc": 211,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "VersionTable",
                                "nested_complexity": 7,
                                "path": "bloks/core/src/VersionTable.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 7958,
                                "sloc": 184,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "VersionTable.cpp",
                            "value": 31
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 12,
                                "blank_lines": 15,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDevice.h",
                                    "bloks/common/inc/bloks/common/UnixSignals.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/core/inc/bloks/core/Application.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "csignal",
                                    "bloks/core-lib-version.h",
                                    "bloks/core-version.h",
                                    "QCoreApplication",
                                    "QCommandLineParser"
                                ],
                                "loc": 48,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "main",
                                "nested_complexity": 2,
                                "path": "bloks/core/src/main.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1132,
                                "sloc": 33,
                                "type": "C source, ASCII text"
                            },
                            "name": "main.cpp",
                            "value": 12
                        }
                    ],
                    "counter": {
                        "bytes_count": 51815,
                        "risks_count": 0,
                        "sloc_count": 1388,
                        "source_files": 15,
                        "value_count": 228
                    },
                    "name": "src"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 18,
                                "blank_lines": 24,
                                "decision_complexity": 6,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/core/tests/TestDeviceHandlerBattery.h",
                                    "bloks/can/tests/fake/MockBloksBusDevice.h",
                                    "bloks/core/tests/TestSupport.h",
                                    "bloks/core/inc/bloks/core/DeviceHandlerBattery.h",
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h",
                                    "bloks/core/tests/TestDeviceHandlerBattery.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QSignalSpy",
                                    "QTest",
                                    "QVector"
                                ],
                                "loc": 117,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestDeviceHandlerBattery",
                                "nested_complexity": 2,
                                "path": "bloks/core/tests/TestDeviceHandlerBattery.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 4025,
                                "sloc": 93,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestDeviceHandlerBattery.cpp",
                            "value": 18
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 7,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject"
                                ],
                                "loc": 17,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestDeviceHandlerBattery",
                                "nested_complexity": 1,
                                "path": "bloks/core/tests/TestDeviceHandlerBattery.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 245,
                                "sloc": 10,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestDeviceHandlerBattery.h",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 14,
                                "blank_lines": 14,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/core/tests/TestDeviceHandlerLight.h",
                                    "bloks/can/tests/fake/MockBloksBusDevice.h",
                                    "bloks/core/tests/TestSupport.h",
                                    "bloks/core/inc/bloks/core/DeviceHandlerBattery.h",
                                    "bloks/core/inc/bloks/core/DeviceHandlerLight.h",
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h",
                                    "bloks/core/tests/TestDeviceHandlerLight.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QSignalSpy",
                                    "QTest"
                                ],
                                "loc": 54,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestDeviceHandlerLight",
                                "nested_complexity": 2,
                                "path": "bloks/core/tests/TestDeviceHandlerLight.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1618,
                                "sloc": 40,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestDeviceHandlerLight.cpp",
                            "value": 14
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject"
                                ],
                                "loc": 14,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestDeviceHandlerLight",
                                "nested_complexity": 1,
                                "path": "bloks/core/tests/TestDeviceHandlerLight.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 180,
                                "sloc": 8,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestDeviceHandlerLight.h",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 23,
                                "blank_lines": 33,
                                "decision_complexity": 10,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/core/tests/TestDeviceHandlerMotor.h",
                                    "bloks/can/tests/fake/MockBloksBusDevice.h",
                                    "bloks/core/tests/TestSupport.h",
                                    "bloks/core/inc/bloks/core/DeviceHandlerMotor.h",
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h",
                                    "bloks/core/tests/TestDeviceHandlerMotor.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QCanBusFrame",
                                    "QObject",
                                    "QSignalSpy",
                                    "QTest",
                                    "QVector"
                                ],
                                "loc": 179,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestDeviceHandlerMotor",
                                "nested_complexity": 2,
                                "path": "bloks/core/tests/TestDeviceHandlerMotor.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 6117,
                                "sloc": 146,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestDeviceHandlerMotor.cpp",
                            "value": 23
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject"
                                ],
                                "loc": 18,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestDeviceHandlerMotor",
                                "nested_complexity": 1,
                                "path": "bloks/core/tests/TestDeviceHandlerMotor.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 292,
                                "sloc": 12,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestDeviceHandlerMotor.h",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 13,
                                "blank_lines": 13,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/core/tests/TestDeviceHandlerRemote.h",
                                    "bloks/can/tests/fake/MockBloksBusDevice.h",
                                    "bloks/core/tests/TestSupport.h",
                                    "bloks/core/inc/bloks/core/DeviceHandlerRemote.h",
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h",
                                    "bloks/core/tests/TestDeviceHandlerRemote.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QSignalSpy",
                                    "QTest"
                                ],
                                "loc": 54,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestDeviceHandlerRemote",
                                "nested_complexity": 2,
                                "path": "bloks/core/tests/TestDeviceHandlerRemote.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1692,
                                "sloc": 41,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestDeviceHandlerRemote.cpp",
                            "value": 13
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject"
                                ],
                                "loc": 14,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestDeviceHandlerRemote",
                                "nested_complexity": 1,
                                "path": "bloks/core/tests/TestDeviceHandlerRemote.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 182,
                                "sloc": 8,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestDeviceHandlerRemote.h",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 6,
                                "decision_complexity": 4,
                                "extension": ".h",
                                "imports": [
                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 35,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestSupport",
                                "nested_complexity": 3,
                                "path": "bloks/core/tests/TestSupport.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1002,
                                "sloc": 29,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestSupport.h",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 14,
                                "blank_lines": 43,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/core/tests/TestVersionInformation.h",
                                    "bloks/tools/cantestsupport/include/bloks/canTestSupport/DrivenBloksBusDevice.h",
                                    "bloks/core/inc/bloks/core/VersionInfoCollector.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QJsonArray",
                                    "QJsonDocument",
                                    "QJsonObject",
                                    "QSignalSpy",
                                    "QTest",
                                    "QVector"
                                ],
                                "loc": 486,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestVersionInformation",
                                "nested_complexity": 4,
                                "path": "bloks/core/tests/TestVersionInformation.cpp",
                                "risks": [
                                    "[info] Arguably many lines of code, this may be ok for now."
                                ],
                                "risks_points": 2,
                                "size": 23637,
                                "sloc": 443,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestVersionInformation.cpp",
                            "value": 14
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject"
                                ],
                                "loc": 18,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestVersionInformation",
                                "nested_complexity": 1,
                                "path": "bloks/core/tests/TestVersionInformation.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 331,
                                "sloc": 12,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestVersionInformation.h",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 9,
                                "blank_lines": 26,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/tests/fake/MockBloksBusDevice.h",
                                    "bloks/core/tests/TestVersionQuery.h",
                                    "bloks/core/inc/bloks/core/VersionQuery.h",
                                    "bloks/can/include/bloks/can/CanUtils.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QSignalSpy",
                                    "QTest"
                                ],
                                "loc": 149,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestVersionQuery",
                                "nested_complexity": 2,
                                "path": "bloks/core/tests/TestVersionQuery.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3918,
                                "sloc": 123,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestVersionQuery.cpp",
                            "value": 9
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject"
                                ],
                                "loc": 15,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestVersionQuery",
                                "nested_complexity": 1,
                                "path": "bloks/core/tests/TestVersionQuery.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 208,
                                "sloc": 9,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestVersionQuery.h",
                            "value": 2
                        }
                    ],
                    "counter": {
                        "bytes_count": 43447,
                        "risks_count": 1,
                        "sloc_count": 974,
                        "source_files": 13,
                        "value_count": 111
                    },
                    "name": "tests"
                },
                {
                    "children": [
                        {
                            "children": [
                                {
                                    "children": [
                                        {
                                            "meta": {
                                                "aggregate_complexity": 16,
                                                "blank_lines": 29,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/core/inc/bloks/core/SystemSetupMaster.h",
                                                    "bloks/core/inc/bloks/core/VehicleStateMaster.h",
                                                    "bloks/core/inc/bloks/core/DeviceHandlerAll.h",
                                                    "bloks/core/inc/bloks/core/DeviceHandlerBattery.h",
                                                    "bloks/core/inc/bloks/core/DeviceHandlerDisplay.h",
                                                    "bloks/core/inc/bloks/core/DeviceHandlerGearShift.h",
                                                    "bloks/core/inc/bloks/core/DeviceHandlerLight.h",
                                                    "bloks/core/inc/bloks/core/DeviceHandlerMotor.h",
                                                    "bloks/core/inc/bloks/core/DeviceHandlerNode.h",
                                                    "bloks/core/inc/bloks/core/DeviceHandlerRemote.h",
                                                    "bloks/core/inc/bloks/core/VersionInfoCollector.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "memory"
                                                ],
                                                "loc": 76,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "Application",
                                                "nested_complexity": 3,
                                                "path": "bloks/core/inc/bloks/core/Application.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 2019,
                                                "sloc": 47,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "Application.h",
                                            "value": 16
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 7,
                                                "blank_lines": 19,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/CanUtils.h",
                                                    "bloks/common/inc/bloks/common/Property.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QtGlobal"
                                                ],
                                                "loc": 60,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "DeviceHandlerAll",
                                                "nested_complexity": 3,
                                                "path": "bloks/core/inc/bloks/core/DeviceHandlerAll.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1303,
                                                "sloc": 41,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "DeviceHandlerAll.h",
                                            "value": 7
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 6,
                                                "blank_lines": 19,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/CanUtils.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QtGlobal"
                                                ],
                                                "loc": 52,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "DeviceHandlerBattery",
                                                "nested_complexity": 3,
                                                "path": "bloks/core/inc/bloks/core/DeviceHandlerBattery.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1143,
                                                "sloc": 33,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "DeviceHandlerBattery.h",
                                            "value": 6
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 17,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QtGlobal"
                                                ],
                                                "loc": 43,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "DeviceHandlerDisplay",
                                                "nested_complexity": 3,
                                                "path": "bloks/core/inc/bloks/core/DeviceHandlerDisplay.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 642,
                                                "sloc": 26,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "DeviceHandlerDisplay.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 6,
                                                "blank_lines": 18,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/CanUtils.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QtGlobal"
                                                ],
                                                "loc": 50,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "DeviceHandlerGearShift",
                                                "nested_complexity": 3,
                                                "path": "bloks/core/inc/bloks/core/DeviceHandlerGearShift.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 890,
                                                "sloc": 32,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "DeviceHandlerGearShift.h",
                                            "value": 6
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 18,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QtGlobal"
                                                ],
                                                "loc": 46,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "DeviceHandlerLight",
                                                "nested_complexity": 3,
                                                "path": "bloks/core/inc/bloks/core/DeviceHandlerLight.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 815,
                                                "sloc": 28,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "DeviceHandlerLight.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 4,
                                                "blank_lines": 18,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject"
                                                ],
                                                "loc": 54,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "DeviceHandlerMotor",
                                                "nested_complexity": 3,
                                                "path": "bloks/core/inc/bloks/core/DeviceHandlerMotor.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1305,
                                                "sloc": 36,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "DeviceHandlerMotor.h",
                                            "value": 4
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 7,
                                                "blank_lines": 21,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/CanUtils.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QtGlobal",
                                                    "QMap"
                                                ],
                                                "loc": 59,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "DeviceHandlerNode",
                                                "nested_complexity": 3,
                                                "path": "bloks/core/inc/bloks/core/DeviceHandlerNode.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1118,
                                                "sloc": 38,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "DeviceHandlerNode.h",
                                            "value": 7
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 5,
                                                "blank_lines": 18,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QtGlobal"
                                                ],
                                                "loc": 49,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "DeviceHandlerRemote",
                                                "nested_complexity": 3,
                                                "path": "bloks/core/inc/bloks/core/DeviceHandlerRemote.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 855,
                                                "sloc": 31,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "DeviceHandlerRemote.h",
                                            "value": 5
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 2,
                                                "blank_lines": 4,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QLoggingCategory"
                                                ],
                                                "loc": 7,
                                                "mime": "text/x-c; charset=us-ascii",
                                                "name": "Log",
                                                "nested_complexity": 0,
                                                "path": "bloks/core/inc/bloks/core/Log.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 112,
                                                "sloc": 3,
                                                "type": "C source, ASCII text"
                                            },
                                            "name": "Log.h",
                                            "value": 2
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 6,
                                                "blank_lines": 23,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QJsonDocument"
                                                ],
                                                "loc": 53,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "SystemSetupMaster",
                                                "nested_complexity": 4,
                                                "path": "bloks/core/inc/bloks/core/SystemSetupMaster.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 951,
                                                "sloc": 30,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "SystemSetupMaster.h",
                                            "value": 6
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 7,
                                                "blank_lines": 19,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/CanUtils.h",
                                                    "bloks/common/inc/bloks/common/PropertyStorage.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QtDBus"
                                                ],
                                                "loc": 51,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "VehicleStateMaster",
                                                "nested_complexity": 3,
                                                "path": "bloks/core/inc/bloks/core/VehicleStateMaster.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1258,
                                                "sloc": 32,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "VehicleStateMaster.h",
                                            "value": 7
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 11,
                                                "blank_lines": 49,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/CanUtils.h",
                                                    "bloks/core/inc/bloks/core/VersionTable.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QScopedPointer",
                                                    "QTimer",
                                                    "QVariant",
                                                    "QVector"
                                                ],
                                                "loc": 114,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "VersionInfoCollector",
                                                "nested_complexity": 4,
                                                "path": "bloks/core/inc/bloks/core/VersionInfoCollector.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 3086,
                                                "sloc": 65,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "VersionInfoCollector.h",
                                            "value": 11
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 11,
                                                "blank_lines": 28,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/CanUtils.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QByteArray",
                                                    "QMap",
                                                    "QObject",
                                                    "QString",
                                                    "QTimer",
                                                    "QVariant"
                                                ],
                                                "loc": 155,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "VersionQuery",
                                                "nested_complexity": 4,
                                                "path": "bloks/core/inc/bloks/core/VersionQuery.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 3756,
                                                "sloc": 127,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "VersionQuery.h",
                                            "value": 11
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 11,
                                                "blank_lines": 57,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/CanUtils.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QJsonDocument",
                                                    "QMap",
                                                    "QString",
                                                    "QVariant",
                                                    "QVector",
                                                    "QtGlobal"
                                                ],
                                                "loc": 103,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "VersionTable",
                                                "nested_complexity": 4,
                                                "path": "bloks/core/inc/bloks/core/VersionTable.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 3021,
                                                "sloc": 46,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "VersionTable.h",
                                            "value": 11
                                        }
                                    ],
                                    "counter": {
                                        "bytes_count": 22274,
                                        "risks_count": 0,
                                        "sloc_count": 615,
                                        "source_files": 15,
                                        "value_count": 109
                                    },
                                    "name": "core"
                                }
                            ],
                            "counter": {
                                "bytes_count": 22274,
                                "risks_count": 0,
                                "sloc_count": 615,
                                "source_files": 15,
                                "value_count": 109
                            },
                            "name": "bloks"
                        }
                    ],
                    "counter": {
                        "bytes_count": 22274,
                        "risks_count": 0,
                        "sloc_count": 615,
                        "source_files": 15,
                        "value_count": 109
                    },
                    "name": "inc"
                }
            ],
            "counter": {
                "bytes_count": 117838,
                "risks_count": 1,
                "sloc_count": 2991,
                "source_files": 45,
                "value_count": 451
            },
            "name": "core"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 1,
                                "decision_complexity": 0,
                                "extension": "",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 6,
                                "mime": "text/x-shellscript; charset=us-ascii",
                                "name": "postinst",
                                "nested_complexity": 0,
                                "path": "bloks/dbus/debian/postinst",
                                "risks": [],
                                "risks_points": 0,
                                "size": 163,
                                "sloc": 5,
                                "type": "POSIX shell script, ASCII text executable"
                            },
                            "name": "postinst",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 1,
                                "decision_complexity": 1,
                                "extension": "",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 12,
                                "mime": "text/x-shellscript; charset=us-ascii",
                                "name": "prerm",
                                "nested_complexity": 0,
                                "path": "bloks/dbus/debian/prerm",
                                "risks": [],
                                "risks_points": 0,
                                "size": 332,
                                "sloc": 11,
                                "type": "POSIX shell script, ASCII text executable"
                            },
                            "name": "prerm",
                            "value": 2
                        }
                    ],
                    "counter": {
                        "bytes_count": 495,
                        "risks_count": 0,
                        "sloc_count": 16,
                        "source_files": 2,
                        "value_count": 3
                    },
                    "name": "debian"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 18,
                                "blank_lines": 23,
                                "decision_complexity": 9,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/Property.h",
                                    "bloks/dbus/include/bloks/dbus/Connector.h",
                                    "bloks/dbus/include/bloks/dbus/DBusPropertyProvider.h",
                                    "bloks/frontend-sdk/include/bloks/VehicleState.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "bloks/interfaces/SystemSetup.h",
                                    "QLoggingCategory"
                                ],
                                "loc": 126,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "DBusPropertyProvider",
                                "nested_complexity": 3,
                                "path": "bloks/dbus/src/DBusPropertyProvider.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3640,
                                "sloc": 103,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "DBusPropertyProvider.cpp",
                            "value": 18
                        }
                    ],
                    "counter": {
                        "bytes_count": 3640,
                        "risks_count": 0,
                        "sloc_count": 103,
                        "source_files": 1,
                        "value_count": 18
                    },
                    "name": "src"
                },
                {
                    "children": [
                        {
                            "children": [
                                {
                                    "children": [
                                        {
                                            "meta": {
                                                "aggregate_complexity": 21,
                                                "blank_lines": 50,
                                                "decision_complexity": 7,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/common/inc/bloks/common/BloksConsts.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QCoreApplication",
                                                    "QDBusConnection",
                                                    "QElapsedTimer",
                                                    "QThread",
                                                    "QTimer",
                                                    "cassert",
                                                    "functional",
                                                    "limits"
                                                ],
                                                "loc": 117,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "Connector",
                                                "nested_complexity": 5,
                                                "path": "bloks/dbus/include/bloks/dbus/Connector.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 2961,
                                                "sloc": 67,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "Connector.h",
                                            "value": 21
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 6,
                                                "blank_lines": 15,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/common/inc/bloks/common/AbstractPropertyProvider.h",
                                                    "bloks/common/inc/bloks/common/PropertyStorage.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "memory"
                                                ],
                                                "loc": 49,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "DBusPropertyProvider",
                                                "nested_complexity": 2,
                                                "path": "bloks/dbus/include/bloks/dbus/DBusPropertyProvider.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1187,
                                                "sloc": 34,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "DBusPropertyProvider.h",
                                            "value": 6
                                        }
                                    ],
                                    "counter": {
                                        "bytes_count": 4148,
                                        "risks_count": 0,
                                        "sloc_count": 101,
                                        "source_files": 2,
                                        "value_count": 27
                                    },
                                    "name": "dbus"
                                }
                            ],
                            "counter": {
                                "bytes_count": 4148,
                                "risks_count": 0,
                                "sloc_count": 101,
                                "source_files": 2,
                                "value_count": 27
                            },
                            "name": "bloks"
                        }
                    ],
                    "counter": {
                        "bytes_count": 4148,
                        "risks_count": 0,
                        "sloc_count": 101,
                        "source_files": 2,
                        "value_count": 27
                    },
                    "name": "include"
                }
            ],
            "counter": {
                "bytes_count": 8283,
                "risks_count": 0,
                "sloc_count": 220,
                "source_files": 5,
                "value_count": 48
            },
            "name": "dbus"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 8,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/faultmanager/src/BloksFault.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 20,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "BloksFault",
                                "nested_complexity": 1,
                                "path": "bloks/faultmanager/src/BloksFault.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 497,
                                "sloc": 12,
                                "type": "C source, ASCII text"
                            },
                            "name": "BloksFault.cpp",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 13,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject"
                                ],
                                "loc": 26,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "BloksFault",
                                "nested_complexity": 3,
                                "path": "bloks/faultmanager/src/BloksFault.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 471,
                                "sloc": 13,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "BloksFault.h",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 4,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QLoggingCategory"
                                ],
                                "loc": 7,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "Log",
                                "nested_complexity": 0,
                                "path": "bloks/faultmanager/src/Log.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 120,
                                "sloc": 3,
                                "type": "C source, ASCII text"
                            },
                            "name": "Log.h",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 14,
                                "blank_lines": 21,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/faultmanager/src/Manager.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/dbus/include/bloks/dbus/Connector.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "thread",
                                    "bloks/interfaces/SystemFaults.h",
                                    "QDir",
                                    "QStandardPaths",
                                    "QDBusConnection",
                                    "QDBusError"
                                ],
                                "loc": 94,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Manager",
                                "nested_complexity": 4,
                                "path": "bloks/faultmanager/src/Manager.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2756,
                                "sloc": 73,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Manager.cpp",
                            "value": 14
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 16,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/faultmanager/src/SystemFaultsMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QFile",
                                    "QTextStream"
                                ],
                                "loc": 39,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Manager",
                                "nested_complexity": 3,
                                "path": "bloks/faultmanager/src/Manager.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 621,
                                "sloc": 23,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Manager.h",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 11,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/faultmanager/src/SystemFaultsMaster.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 37,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "SystemFaultsMaster",
                                "nested_complexity": 4,
                                "path": "bloks/faultmanager/src/SystemFaultsMaster.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 887,
                                "sloc": 26,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "SystemFaultsMaster.cpp",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 38,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/faultmanager/src/BloksFault.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QMap",
                                    "QtDBus"
                                ],
                                "loc": 62,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "SystemFaultsMaster",
                                "nested_complexity": 3,
                                "path": "bloks/faultmanager/src/SystemFaultsMaster.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1171,
                                "sloc": 24,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "SystemFaultsMaster.h",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 15,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/UnixSignals.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/faultmanager/src/Manager.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "csignal",
                                    "QCoreApplication",
                                    "QCommandLineParser",
                                    "bloks/faultmanager-version.h"
                                ],
                                "loc": 46,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "main",
                                "nested_complexity": 2,
                                "path": "bloks/faultmanager/src/main.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1061,
                                "sloc": 31,
                                "type": "C source, ASCII text"
                            },
                            "name": "main.cpp",
                            "value": 11
                        }
                    ],
                    "counter": {
                        "bytes_count": 7584,
                        "risks_count": 0,
                        "sloc_count": 205,
                        "source_files": 8,
                        "value_count": 54
                    },
                    "name": "src"
                }
            ],
            "counter": {
                "bytes_count": 7584,
                "risks_count": 0,
                "sloc_count": 205,
                "source_files": 8,
                "value_count": 54
            },
            "name": "faultmanager"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 36,
                                "blank_lines": 57,
                                "decision_complexity": 23,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/firmware-updater/include/bloks/firmware-updater/ArchiveUtilities.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QFile",
                                    "archive.h",
                                    "archive_entry.h",
                                    "cstdint"
                                ],
                                "loc": 268,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "ArchiveUtilities",
                                "nested_complexity": 7,
                                "path": "bloks/firmware-updater/src/ArchiveUtilities.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 7795,
                                "sloc": 211,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "ArchiveUtilities.cpp",
                            "value": 36
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 55,
                                "blank_lines": 64,
                                "decision_complexity": 40,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/firmware-updater/include/bloks/firmware-updater/ArchiveUtilities.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/BundleFile.h",
                                    "bloks/common/inc/bloks/common/JsonUtils.h",
                                    "bloks/common/inc/bloks/common/UnixTime.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "set",
                                    "QCryptographicHash",
                                    "QJsonArray",
                                    "QJsonObject"
                                ],
                                "loc": 324,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "BundleFile",
                                "nested_complexity": 7,
                                "path": "bloks/firmware-updater/src/BundleFile.cpp",
                                "risks": [
                                    "[info] Arguably many decisions, it is ok if it makes other files less complicated."
                                ],
                                "risks_points": 5,
                                "size": 9554,
                                "sloc": 260,
                                "type": "C source, ASCII text"
                            },
                            "name": "BundleFile.cpp",
                            "value": 55
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 65,
                                "blank_lines": 86,
                                "decision_complexity": 52,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/firmware-updater/src/FirmwareUpdaterTasks.h",
                                    "bloks/common/inc/bloks/common/BloksConsts.h",
                                    "bloks/common/inc/bloks/common/VersionUtils.h",
                                    "bloks/can/include/bloks/can/CanUtils.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QtMath"
                                ],
                                "loc": 621,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "FirmwareUpdaterTasks",
                                "nested_complexity": 7,
                                "path": "bloks/firmware-updater/src/FirmwareUpdaterTasks.cpp",
                                "risks": [
                                    "[warning] Quite many lines of code, plan on refactoring.",
                                    "[info] Arguably many decisions, it is ok if it makes other files less complicated."
                                ],
                                "risks_points": 10,
                                "size": 18594,
                                "sloc": 535,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "FirmwareUpdaterTasks.cpp",
                            "value": 65
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 10,
                                "blank_lines": 137,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/firmware-updater/include/bloks/firmware-updater/UpdateController.h",
                                    "bloks/can/include/bloks/can/BloksBusDevice.h",
                                    "bloks/can/include/bloks/can/CanUtils.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QMap",
                                    "QObject",
                                    "QTimer"
                                ],
                                "loc": 311,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "FirmwareUpdaterTasks",
                                "nested_complexity": 4,
                                "path": "bloks/firmware-updater/src/FirmwareUpdaterTasks.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 9133,
                                "sloc": 174,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "FirmwareUpdaterTasks.h",
                            "value": 10
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 31,
                                "blank_lines": 38,
                                "decision_complexity": 15,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/firmware-updater/src/FirmwareUpdaterTasks.h",
                                    "bloks/can/include/bloks/can/CanUtils.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/BundleFile.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/MultiFirmwareUpdater.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/UpdateArguments.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QEventLoop",
                                    "QJsonArray",
                                    "QJsonObject",
                                    "QJsonValue",
                                    "utility",
                                    "QLoggingCategory"
                                ],
                                "loc": 193,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "MultiFirmwareUpdater",
                                "nested_complexity": 5,
                                "path": "bloks/firmware-updater/src/MultiFirmwareUpdater.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 6827,
                                "sloc": 155,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "MultiFirmwareUpdater.cpp",
                            "value": 31
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 12,
                                "blank_lines": 13,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/firmware-updater/include/bloks/firmware-updater/UpdateController.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/Updater.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QCoreApplication",
                                    "QString",
                                    "QThread"
                                ],
                                "loc": 64,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "UpdateController",
                                "nested_complexity": 4,
                                "path": "bloks/firmware-updater/src/UpdateController.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1535,
                                "sloc": 51,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "UpdateController.cpp",
                            "value": 12
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 58,
                                "blank_lines": 142,
                                "decision_complexity": 40,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                    "bloks/can/include/bloks/can/CanUtils.h",
                                    "bloks/common/inc/bloks/common/BloksConsts.h",
                                    "bloks/common/inc/bloks/common/DfuFile.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/Updater.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/Updater.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QCanBusFrame",
                                    "QFile",
                                    "QHash",
                                    "QTimer",
                                    "QtGlobal",
                                    "utility"
                                ],
                                "loc": 822,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Updater",
                                "nested_complexity": 5,
                                "path": "bloks/firmware-updater/src/Updater.cpp",
                                "risks": [
                                    "[warning] Quite many lines of code, plan on refactoring.",
                                    "[info] Arguably many decisions, it is ok if it makes other files less complicated."
                                ],
                                "risks_points": 10,
                                "size": 21757,
                                "sloc": 680,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Updater.cpp",
                            "value": 58
                        }
                    ],
                    "counter": {
                        "bytes_count": 75195,
                        "risks_count": 5,
                        "sloc_count": 2066,
                        "source_files": 7,
                        "value_count": 267
                    },
                    "name": "src"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 37,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/firmware-updater/tests/TestArchiveUtilities.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/ArchiveUtilities.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTest",
                                    "QDir",
                                    "QSignalSpy",
                                    "QTest",
                                    "fstream"
                                ],
                                "loc": 108,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestArchiveUtilities",
                                "nested_complexity": 1,
                                "path": "bloks/firmware-updater/tests/TestArchiveUtilities.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3040,
                                "sloc": 71,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestArchiveUtilities.cpp",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 10,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QString",
                                    "QTemporaryDir"
                                ],
                                "loc": 29,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestArchiveUtilities",
                                "nested_complexity": 1,
                                "path": "bloks/firmware-updater/tests/TestArchiveUtilities.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 481,
                                "sloc": 19,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestArchiveUtilities.h",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 16,
                                "blank_lines": 73,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/firmware-updater/tests/TestMultiFirmwareUpdater.h",
                                    "bloks/can/include/bloks/can/CanUtils.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTest",
                                    "QCryptographicHash",
                                    "QDir",
                                    "QJsonArray",
                                    "QJsonDocument",
                                    "QJsonObject",
                                    "QJsonValue",
                                    "QSignalSpy",
                                    "QTest",
                                    "fstream"
                                ],
                                "loc": 313,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestMultiFirmwareUpdater",
                                "nested_complexity": 3,
                                "path": "bloks/firmware-updater/tests/TestMultiFirmwareUpdater.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 15562,
                                "sloc": 240,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestMultiFirmwareUpdater.cpp",
                            "value": 16
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 14,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/tools/cantestsupport/include/bloks/canTestSupport/DrivenBloksBusDevice.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/MultiFirmwareUpdater.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/UpdateController.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "bloks/interfaces/SystemSetup.h",
                                    "QDir",
                                    "QObject"
                                ],
                                "loc": 41,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestMultiFirmwareUpdater",
                                "nested_complexity": 2,
                                "path": "bloks/firmware-updater/tests/TestMultiFirmwareUpdater.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 926,
                                "sloc": 27,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestMultiFirmwareUpdater.h",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 16,
                                "blank_lines": 22,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/CanUtils.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/UpdateArguments.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/Updater.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/can/tests/fake/MockBloksBusDevice.h",
                                    "bloks/firmware-updater/tests/TestUpdater.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QCanBusFrame",
                                    "QSignalSpy",
                                    "QString",
                                    "QTest",
                                    "QDir"
                                ],
                                "loc": 151,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestUpdater",
                                "nested_complexity": 2,
                                "path": "bloks/firmware-updater/tests/TestUpdater.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 6681,
                                "sloc": 129,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestUpdater.cpp",
                            "value": 16
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 6,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject"
                                ],
                                "loc": 15,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestUpdater",
                                "nested_complexity": 1,
                                "path": "bloks/firmware-updater/tests/TestUpdater.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 193,
                                "sloc": 9,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestUpdater.h",
                            "value": 2
                        }
                    ],
                    "counter": {
                        "bytes_count": 26883,
                        "risks_count": 0,
                        "sloc_count": 495,
                        "source_files": 6,
                        "value_count": 54
                    },
                    "name": "tests"
                },
                {
                    "children": [
                        {
                            "children": [
                                {
                                    "children": [
                                        {
                                            "meta": {
                                                "aggregate_complexity": 6,
                                                "blank_lines": 36,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QString"
                                                ],
                                                "loc": 64,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "AbstractMultiFirmwareUpdater",
                                                "nested_complexity": 4,
                                                "path": "bloks/firmware-updater/include/bloks/firmware-updater/AbstractMultiFirmwareUpdater.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1464,
                                                "sloc": 28,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "AbstractMultiFirmwareUpdater.h",
                                            "value": 6
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 6,
                                                "blank_lines": 44,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QString",
                                                    "QDir"
                                                ],
                                                "loc": 64,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "ArchiveUtilities",
                                                "nested_complexity": 3,
                                                "path": "bloks/firmware-updater/include/bloks/firmware-updater/ArchiveUtilities.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1401,
                                                "sloc": 20,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "ArchiveUtilities.h",
                                            "value": 6
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 9,
                                                "blank_lines": 18,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/common/inc/bloks/common/Optional.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QJsonDocument",
                                                    "QString",
                                                    "QTemporaryDir",
                                                    "memory",
                                                    "vector"
                                                ],
                                                "loc": 55,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "BundleFile",
                                                "nested_complexity": 3,
                                                "path": "bloks/firmware-updater/include/bloks/firmware-updater/BundleFile.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1003,
                                                "sloc": 37,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "BundleFile.h",
                                            "value": 9
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 2,
                                                "blank_lines": 4,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [],
                                                "is_code": true,
                                                "libraries": [
                                                    "QLoggingCategory"
                                                ],
                                                "loc": 8,
                                                "mime": "text/x-c; charset=us-ascii",
                                                "name": "Log",
                                                "nested_complexity": 0,
                                                "path": "bloks/firmware-updater/include/bloks/firmware-updater/Log.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 154,
                                                "sloc": 4,
                                                "type": "C source, ASCII text"
                                            },
                                            "name": "Log.h",
                                            "value": 2
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 11,
                                                "blank_lines": 20,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/firmware-updater/include/bloks/firmware-updater/AbstractMultiFirmwareUpdater.h",
                                                    "bloks/can/include/bloks/can/BloksBusDevice.h",
                                                    "bloks/firmware-updater/include/bloks/firmware-updater/UpdateController.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "bloks/interfaces/SystemSetup.h",
                                                    "QJsonDocument",
                                                    "atomic",
                                                    "memory"
                                                ],
                                                "loc": 66,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "MultiFirmwareUpdater",
                                                "nested_complexity": 4,
                                                "path": "bloks/firmware-updater/include/bloks/firmware-updater/MultiFirmwareUpdater.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1563,
                                                "sloc": 46,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "MultiFirmwareUpdater.h",
                                            "value": 11
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 7,
                                                "blank_lines": 13,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/CanUtils.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QString",
                                                    "QtGlobal"
                                                ],
                                                "loc": 56,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "UpdateArguments",
                                                "nested_complexity": 4,
                                                "path": "bloks/firmware-updater/include/bloks/firmware-updater/UpdateArguments.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 1101,
                                                "sloc": 43,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "UpdateArguments.h",
                                            "value": 7
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 7,
                                                "blank_lines": 58,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/firmware-updater/include/bloks/firmware-updater/UpdateArguments.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QString",
                                                    "QtGlobal"
                                                ],
                                                "loc": 91,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "UpdateController",
                                                "nested_complexity": 3,
                                                "path": "bloks/firmware-updater/include/bloks/firmware-updater/UpdateController.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 2204,
                                                "sloc": 33,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "UpdateController.h",
                                            "value": 7
                                        },
                                        {
                                            "meta": {
                                                "aggregate_complexity": 10,
                                                "blank_lines": 65,
                                                "decision_complexity": 0,
                                                "extension": ".h",
                                                "imports": [
                                                    "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                                    "bloks/can/include/bloks/can/CanUtils.h",
                                                    "bloks/firmware-updater/include/bloks/firmware-updater/UpdateArguments.h"
                                                ],
                                                "is_code": true,
                                                "libraries": [
                                                    "QObject",
                                                    "QString",
                                                    "QVector",
                                                    "functional"
                                                ],
                                                "loc": 107,
                                                "mime": "text/x-c++; charset=us-ascii",
                                                "name": "Updater",
                                                "nested_complexity": 3,
                                                "path": "bloks/firmware-updater/include/bloks/firmware-updater/Updater.h",
                                                "risks": [],
                                                "risks_points": 0,
                                                "size": 3031,
                                                "sloc": 42,
                                                "type": "C++ source, ASCII text"
                                            },
                                            "name": "Updater.h",
                                            "value": 10
                                        }
                                    ],
                                    "counter": {
                                        "bytes_count": 11921,
                                        "risks_count": 0,
                                        "sloc_count": 253,
                                        "source_files": 8,
                                        "value_count": 58
                                    },
                                    "name": "firmware-updater"
                                }
                            ],
                            "counter": {
                                "bytes_count": 11921,
                                "risks_count": 0,
                                "sloc_count": 253,
                                "source_files": 8,
                                "value_count": 58
                            },
                            "name": "bloks"
                        }
                    ],
                    "counter": {
                        "bytes_count": 11921,
                        "risks_count": 0,
                        "sloc_count": 253,
                        "source_files": 8,
                        "value_count": 58
                    },
                    "name": "include"
                }
            ],
            "counter": {
                "bytes_count": 113999,
                "risks_count": 5,
                "sloc_count": 2814,
                "source_files": 21,
                "value_count": 379
            },
            "name": "firmware-updater"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 13,
                                "blank_lines": 13,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/include/bloks/BatteryState.h",
                                    "bloks/frontend-sdk/include/bloks/MotorState.h",
                                    "bloks/frontend-sdk/include/bloks/VehicleState.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QCoreApplication",
                                    "QFile",
                                    "QTextStream",
                                    "QTimer",
                                    "functional"
                                ],
                                "loc": 72,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "main",
                                "nested_complexity": 2,
                                "path": "bloks/tools/logger/main.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1974,
                                "sloc": 59,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "main.cpp",
                            "value": 13
                        }
                    ],
                    "counter": {
                        "bytes_count": 1974,
                        "risks_count": 0,
                        "sloc_count": 59,
                        "source_files": 1,
                        "value_count": 13
                    },
                    "name": "logger"
                },
                {
                    "children": [
                        {
                            "children": [
                                {
                                    "meta": {
                                        "aggregate_complexity": 48,
                                        "blank_lines": 46,
                                        "decision_complexity": 27,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/tools/cantestsupport/include/bloks/canTestSupport/CanDriver.h",
                                            "bloks/common/inc/bloks/common/UnixSignals.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "bloks/candriver-version.h",
                                            "QCanBus",
                                            "QCanBusDevice",
                                            "QCanBusFrame",
                                            "QCommandLineParser",
                                            "QCoreApplication",
                                            "QDateTime",
                                            "QElapsedTimer",
                                            "QFile",
                                            "QScopedPointer",
                                            "QTextStream",
                                            "QTimer",
                                            "csignal",
                                            "ctime",
                                            "iostream",
                                            "QtPlugin"
                                        ],
                                        "loc": 336,
                                        "mime": "text/x-c; charset=us-ascii",
                                        "name": "main",
                                        "nested_complexity": 3,
                                        "path": "bloks/tools/candriver/src/main.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 9726,
                                        "sloc": 290,
                                        "type": "C source, ASCII text"
                                    },
                                    "name": "main.cpp",
                                    "value": 48
                                }
                            ],
                            "counter": {
                                "bytes_count": 9726,
                                "risks_count": 0,
                                "sloc_count": 290,
                                "source_files": 1,
                                "value_count": 48
                            },
                            "name": "src"
                        },
                        {
                            "children": [
                                {
                                    "meta": {
                                        "aggregate_complexity": 21,
                                        "blank_lines": 39,
                                        "decision_complexity": 12,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/tools/cantestsupport/include/bloks/canTestSupport/CanDriver.h",
                                            "bloks/tools/candriver/tests/TestCanDriver.cpp"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QObject",
                                            "QTest",
                                            "QTextStream",
                                            "QTimer"
                                        ],
                                        "loc": 293,
                                        "mime": "text/x-c; charset=us-ascii",
                                        "name": "TestCanDriver",
                                        "nested_complexity": 3,
                                        "path": "bloks/tools/candriver/tests/TestCanDriver.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 8286,
                                        "sloc": 254,
                                        "type": "C source, ASCII text"
                                    },
                                    "name": "TestCanDriver.cpp",
                                    "value": 21
                                }
                            ],
                            "counter": {
                                "bytes_count": 8286,
                                "risks_count": 0,
                                "sloc_count": 254,
                                "source_files": 1,
                                "value_count": 21
                            },
                            "name": "tests"
                        }
                    ],
                    "counter": {
                        "bytes_count": 18012,
                        "risks_count": 0,
                        "sloc_count": 544,
                        "source_files": 2,
                        "value_count": 69
                    },
                    "name": "candriver"
                },
                {
                    "children": [
                        {
                            "children": [
                                {
                                    "meta": {
                                        "aggregate_complexity": 54,
                                        "blank_lines": 96,
                                        "decision_complexity": 43,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/tools/cantestsupport/include/bloks/canTestSupport/CanDriver.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QSet",
                                            "QTimer",
                                            "QVariant",
                                            "functional"
                                        ],
                                        "loc": 703,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "CanDriver",
                                        "nested_complexity": 6,
                                        "path": "bloks/tools/cantestsupport/src/CanDriver.cpp",
                                        "risks": [
                                            "[warning] Quite many lines of code, plan on refactoring.",
                                            "[info] Arguably many decisions, it is ok if it makes other files less complicated."
                                        ],
                                        "risks_points": 10,
                                        "size": 17416,
                                        "sloc": 607,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "CanDriver.cpp",
                                    "value": 54
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 23,
                                        "blank_lines": 24,
                                        "decision_complexity": 17,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/tools/cantestsupport/include/bloks/canTestSupport/DrivenBloksBusDevice.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [],
                                        "loc": 456,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "DrivenBloksBusDevice",
                                        "nested_complexity": 5,
                                        "path": "bloks/tools/cantestsupport/src/DrivenBloksBusDevice.cpp",
                                        "risks": [
                                            "[info] Arguably many lines of code, this may be ok for now."
                                        ],
                                        "risks_points": 2,
                                        "size": 15976,
                                        "sloc": 432,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "DrivenBloksBusDevice.cpp",
                                    "value": 23
                                },
                                {
                                    "meta": {
                                        "aggregate_complexity": 5,
                                        "blank_lines": 11,
                                        "decision_complexity": 0,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/tools/cantestsupport/include/bloks/canTestSupport/DrivenCanDevice.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QVector"
                                        ],
                                        "loc": 52,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "DrivenCanDevice",
                                        "nested_complexity": 3,
                                        "path": "bloks/tools/cantestsupport/src/DrivenCanDevice.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 1060,
                                        "sloc": 41,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "DrivenCanDevice.cpp",
                                    "value": 5
                                }
                            ],
                            "counter": {
                                "bytes_count": 34452,
                                "risks_count": 3,
                                "sloc_count": 1080,
                                "source_files": 3,
                                "value_count": 82
                            },
                            "name": "src"
                        },
                        {
                            "children": [
                                {
                                    "children": [
                                        {
                                            "children": [
                                                {
                                                    "meta": {
                                                        "aggregate_complexity": 5,
                                                        "blank_lines": 161,
                                                        "decision_complexity": 0,
                                                        "extension": ".h",
                                                        "imports": [],
                                                        "is_code": true,
                                                        "libraries": [
                                                            "QObject",
                                                            "memory",
                                                            "vector"
                                                        ],
                                                        "loc": 202,
                                                        "mime": "text/x-c++; charset=us-ascii",
                                                        "name": "CanDriver",
                                                        "nested_complexity": 2,
                                                        "path": "bloks/tools/cantestsupport/include/bloks/canTestSupport/CanDriver.h",
                                                        "risks": [],
                                                        "risks_points": 0,
                                                        "size": 5181,
                                                        "sloc": 41,
                                                        "type": "C++ source, ASCII text"
                                                    },
                                                    "name": "CanDriver.h",
                                                    "value": 5
                                                },
                                                {
                                                    "meta": {
                                                        "aggregate_complexity": 5,
                                                        "blank_lines": 161,
                                                        "decision_complexity": 0,
                                                        "extension": ".h",
                                                        "imports": [
                                                            "bloks/can/include/bloks/can/BloksBusDeviceBase.h",
                                                            "bloks/tools/cantestsupport/include/bloks/canTestSupport/DrivenCanDevice.h"
                                                        ],
                                                        "is_code": true,
                                                        "libraries": [],
                                                        "loc": 245,
                                                        "mime": "text/x-c++; charset=us-ascii",
                                                        "name": "DrivenBloksBusDevice",
                                                        "nested_complexity": 3,
                                                        "path": "bloks/tools/cantestsupport/include/bloks/canTestSupport/DrivenBloksBusDevice.h",
                                                        "risks": [],
                                                        "risks_points": 0,
                                                        "size": 10196,
                                                        "sloc": 84,
                                                        "type": "C++ source, ASCII text"
                                                    },
                                                    "name": "DrivenBloksBusDevice.h",
                                                    "value": 5
                                                },
                                                {
                                                    "meta": {
                                                        "aggregate_complexity": 5,
                                                        "blank_lines": 11,
                                                        "decision_complexity": 0,
                                                        "extension": ".h",
                                                        "imports": [
                                                            "bloks/tools/cantestsupport/include/bloks/canTestSupport/CanDriver.h"
                                                        ],
                                                        "is_code": true,
                                                        "libraries": [
                                                            "QCanBusDevice"
                                                        ],
                                                        "loc": 34,
                                                        "mime": "text/x-c++; charset=us-ascii",
                                                        "name": "DrivenCanDevice",
                                                        "nested_complexity": 3,
                                                        "path": "bloks/tools/cantestsupport/include/bloks/canTestSupport/DrivenCanDevice.h",
                                                        "risks": [],
                                                        "risks_points": 0,
                                                        "size": 630,
                                                        "sloc": 23,
                                                        "type": "C++ source, ASCII text"
                                                    },
                                                    "name": "DrivenCanDevice.h",
                                                    "value": 5
                                                }
                                            ],
                                            "counter": {
                                                "bytes_count": 16007,
                                                "risks_count": 0,
                                                "sloc_count": 148,
                                                "source_files": 3,
                                                "value_count": 15
                                            },
                                            "name": "canTestSupport"
                                        }
                                    ],
                                    "counter": {
                                        "bytes_count": 16007,
                                        "risks_count": 0,
                                        "sloc_count": 148,
                                        "source_files": 3,
                                        "value_count": 15
                                    },
                                    "name": "bloks"
                                }
                            ],
                            "counter": {
                                "bytes_count": 16007,
                                "risks_count": 0,
                                "sloc_count": 148,
                                "source_files": 3,
                                "value_count": 15
                            },
                            "name": "include"
                        }
                    ],
                    "counter": {
                        "bytes_count": 50459,
                        "risks_count": 3,
                        "sloc_count": 1228,
                        "source_files": 6,
                        "value_count": 97
                    },
                    "name": "cantestsupport"
                },
                {
                    "children": [
                        {
                            "children": [
                                {
                                    "meta": {
                                        "aggregate_complexity": 22,
                                        "blank_lines": 11,
                                        "decision_complexity": 4,
                                        "extension": ".cpp",
                                        "imports": [
                                            "bloks/frontend-sdk/include/bloks/Frontend.h",
                                            "bloks/frontend-sdk/include/bloks/BluetoothClient.h",
                                            "bloks/frontend-sdk/include/bloks/CentralDevice.h",
                                            "bloks/common/inc/bloks/common/JsonUtils.h",
                                            "bloks/frontend-sdk/src/Log.h",
                                            "bloks/common/inc/bloks/common/UnixSignals.h"
                                        ],
                                        "is_code": true,
                                        "libraries": [
                                            "QCommandLineParser",
                                            "QCoreApplication",
                                            "QDebug",
                                            "QFile",
                                            "QJsonDocument",
                                            "QJsonObject",
                                            "QQmlApplicationEngine",
                                            "QQmlContext",
                                            "QQmlEngine"
                                        ],
                                        "loc": 97,
                                        "mime": "text/x-c++; charset=us-ascii",
                                        "name": "main",
                                        "nested_complexity": 3,
                                        "path": "bloks/tools/sdktester/src/main.cpp",
                                        "risks": [],
                                        "risks_points": 0,
                                        "size": 2959,
                                        "sloc": 86,
                                        "type": "C++ source, ASCII text"
                                    },
                                    "name": "main.cpp",
                                    "value": 22
                                }
                            ],
                            "counter": {
                                "bytes_count": 2959,
                                "risks_count": 0,
                                "sloc_count": 86,
                                "source_files": 1,
                                "value_count": 22
                            },
                            "name": "src"
                        }
                    ],
                    "counter": {
                        "bytes_count": 2959,
                        "risks_count": 0,
                        "sloc_count": 86,
                        "source_files": 1,
                        "value_count": 22
                    },
                    "name": "sdktester"
                }
            ],
            "counter": {
                "bytes_count": 73404,
                "risks_count": 3,
                "sloc_count": 1917,
                "source_files": 10,
                "value_count": 201
            },
            "name": "tools"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 1,
                                "decision_complexity": 0,
                                "extension": "",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 5,
                                "mime": "text/x-shellscript; charset=us-ascii",
                                "name": "postinst",
                                "nested_complexity": 0,
                                "path": "bloks/uart2can/debian/postinst",
                                "risks": [],
                                "risks_points": 0,
                                "size": 74,
                                "sloc": 4,
                                "type": "POSIX shell script, ASCII text executable"
                            },
                            "name": "postinst",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 1,
                                "decision_complexity": 1,
                                "extension": "",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 11,
                                "mime": "text/x-shellscript; charset=us-ascii",
                                "name": "prerm",
                                "nested_complexity": 0,
                                "path": "bloks/uart2can/debian/prerm",
                                "risks": [],
                                "risks_points": 0,
                                "size": 236,
                                "sloc": 10,
                                "type": "POSIX shell script, ASCII text executable"
                            },
                            "name": "prerm",
                            "value": 2
                        }
                    ],
                    "counter": {
                        "bytes_count": 310,
                        "risks_count": 0,
                        "sloc_count": 14,
                        "source_files": 2,
                        "value_count": 3
                    },
                    "name": "debian"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 59,
                                "decision_complexity": 3,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "algorithm",
                                    "cstdint",
                                    "iomanip",
                                    "ostream",
                                    "vector"
                                ],
                                "loc": 126,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "CanFrame",
                                "nested_complexity": 3,
                                "path": "bloks/uart2can/inc/CanFrame.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2774,
                                "sloc": 67,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "CanFrame.h",
                            "value": 11
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 58,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "atomic",
                                    "string",
                                    "sys/select.h",
                                    "sys/time.h",
                                    "thread"
                                ],
                                "loc": 90,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "SocketCanDevice",
                                "nested_complexity": 2,
                                "path": "bloks/uart2can/inc/SocketCanDevice.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2442,
                                "sloc": 32,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "SocketCanDevice.h",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 10,
                                "blank_lines": 127,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/uart2can/inc/CanFrame.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "atomic",
                                    "cstdint",
                                    "string",
                                    "thread",
                                    "sys/select.h",
                                    "sys/time.h"
                                ],
                                "loc": 190,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "UartDevice",
                                "nested_complexity": 3,
                                "path": "bloks/uart2can/inc/UartDevice.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5670,
                                "sloc": 63,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "UartDevice.h",
                            "value": 10
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 5,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QLoggingCategory"
                                ],
                                "loc": 11,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "UartLog",
                                "nested_complexity": 0,
                                "path": "bloks/uart2can/inc/UartLog.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 212,
                                "sloc": 6,
                                "type": "C source, ASCII text"
                            },
                            "name": "UartLog.h",
                            "value": 3
                        }
                    ],
                    "counter": {
                        "bytes_count": 11098,
                        "risks_count": 0,
                        "sloc_count": 168,
                        "source_files": 4,
                        "value_count": 31
                    },
                    "name": "inc"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 18,
                                "blank_lines": 15,
                                "decision_complexity": 6,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/uart2can/inc/CanFrame.h",
                                    "bloks/uart2can/inc/UartDevice.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "algorithm",
                                    "cassert",
                                    "cstdio",
                                    "cstring",
                                    "stdexcept",
                                    "linux/can.h",
                                    "linux/can/raw.h"
                                ],
                                "loc": 88,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "CanFrame",
                                "nested_complexity": 3,
                                "path": "bloks/uart2can/src/CanFrame.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2107,
                                "sloc": 73,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "CanFrame.cpp",
                            "value": 18
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 37,
                                "blank_lines": 27,
                                "decision_complexity": 14,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/uart2can/inc/SocketCanDevice.h",
                                    "bloks/uart2can/inc/CanFrame.h",
                                    "bloks/uart2can/inc/UartDevice.h",
                                    "bloks/uart2can/inc/UartLog.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "linux/can.h",
                                    "net/if.h",
                                    "sys/ioctl.h",
                                    "unistd.h",
                                    "chrono",
                                    "cstdio",
                                    "cstring",
                                    "exception",
                                    "iostream",
                                    "sstream",
                                    "stdexcept",
                                    "string",
                                    "thread",
                                    "utility"
                                ],
                                "loc": 160,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "SocketCanDevice",
                                "nested_complexity": 5,
                                "path": "bloks/uart2can/src/SocketCanDevice.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3809,
                                "sloc": 133,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "SocketCanDevice.cpp",
                            "value": 37
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 69,
                                "blank_lines": 70,
                                "decision_complexity": 41,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/uart2can/inc/CanFrame.h",
                                    "bloks/uart2can/inc/SocketCanDevice.h",
                                    "bloks/uart2can/inc/UartDevice.h",
                                    "bloks/uart2can/inc/UartLog.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "cerrno",
                                    "chrono",
                                    "cstdio",
                                    "cstring",
                                    "ctime",
                                    "exception",
                                    "fcntl.h",
                                    "iostream",
                                    "linux/can.h",
                                    "sstream",
                                    "stdexcept",
                                    "sys/stat.h",
                                    "sys/types.h",
                                    "systemd/sd-daemon.h",
                                    "termios.h",
                                    "thread",
                                    "unistd.h",
                                    "utility"
                                ],
                                "loc": 507,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "UartDevice",
                                "nested_complexity": 6,
                                "path": "bloks/uart2can/src/UartDevice.cpp",
                                "risks": [
                                    "[info] Arguably many lines of code, this may be ok for now.",
                                    "[info] Arguably many decisions, it is ok if it makes other files less complicated."
                                ],
                                "risks_points": 7,
                                "size": 13688,
                                "sloc": 437,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "UartDevice.cpp",
                            "value": 69
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 2,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/uart2can/inc/UartLog.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 6,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "UartLog",
                                "nested_complexity": 0,
                                "path": "bloks/uart2can/src/UartLog.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 127,
                                "sloc": 4,
                                "type": "C source, ASCII text"
                            },
                            "name": "UartLog.cpp",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 24,
                                "blank_lines": 29,
                                "decision_complexity": 4,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/uart2can/inc/SocketCanDevice.h",
                                    "bloks/uart2can/inc/UartDevice.h",
                                    "bloks/uart2can/inc/UartLog.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "cerrno",
                                    "chrono",
                                    "cstdio",
                                    "cstring",
                                    "getopt.h",
                                    "initializer_list",
                                    "iostream",
                                    "limits",
                                    "sstream",
                                    "stdexcept",
                                    "string",
                                    "thread",
                                    "unistd.h",
                                    "bloks/uart2can-version.h"
                                ],
                                "loc": 130,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "main",
                                "nested_complexity": 3,
                                "path": "bloks/uart2can/src/main.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3827,
                                "sloc": 101,
                                "type": "C source, ASCII text"
                            },
                            "name": "main.cpp",
                            "value": 24
                        }
                    ],
                    "counter": {
                        "bytes_count": 23558,
                        "risks_count": 2,
                        "sloc_count": 748,
                        "source_files": 5,
                        "value_count": 150
                    },
                    "name": "src"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 18,
                                "blank_lines": 105,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/uart2can/tests/TestUartDevice.h",
                                    "bloks/uart2can/inc/CanFrame.h",
                                    "bloks/uart2can/inc/SocketCanDevice.h",
                                    "bloks/uart2can/inc/UartDevice.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QTest",
                                    "cstdint",
                                    "fcntl.h",
                                    "iostream",
                                    "string",
                                    "vector",
                                    "linux/can.h"
                                ],
                                "loc": 281,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestUartDevice",
                                "nested_complexity": 5,
                                "path": "bloks/uart2can/tests/TestUartDevice.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 8827,
                                "sloc": 176,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestUartDevice.cpp",
                            "value": 18
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 7,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QObject"
                                ],
                                "loc": 21,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestUartDevice",
                                "nested_complexity": 2,
                                "path": "bloks/uart2can/tests/TestUartDevice.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 349,
                                "sloc": 14,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestUartDevice.h",
                            "value": 3
                        }
                    ],
                    "counter": {
                        "bytes_count": 9176,
                        "risks_count": 0,
                        "sloc_count": 190,
                        "source_files": 2,
                        "value_count": 21
                    },
                    "name": "tests"
                }
            ],
            "counter": {
                "bytes_count": 44142,
                "risks_count": 2,
                "sloc_count": 1120,
                "source_files": 13,
                "value_count": 205
            },
            "name": "uart2can"
        },
        {
            "children": [
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 1,
                                "decision_complexity": 0,
                                "extension": "",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 5,
                                "mime": "text/x-shellscript; charset=us-ascii",
                                "name": "postinst",
                                "nested_complexity": 0,
                                "path": "bloks/webserver/debian/postinst",
                                "risks": [],
                                "risks_points": 0,
                                "size": 75,
                                "sloc": 4,
                                "type": "POSIX shell script, ASCII text executable"
                            },
                            "name": "postinst",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 1,
                                "decision_complexity": 1,
                                "extension": "",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 11,
                                "mime": "text/x-shellscript; charset=us-ascii",
                                "name": "prerm",
                                "nested_complexity": 0,
                                "path": "bloks/webserver/debian/prerm",
                                "risks": [],
                                "risks_points": 0,
                                "size": 237,
                                "sloc": 10,
                                "type": "POSIX shell script, ASCII text executable"
                            },
                            "name": "prerm",
                            "value": 2
                        }
                    ],
                    "counter": {
                        "bytes_count": 312,
                        "risks_count": 0,
                        "sloc_count": 14,
                        "source_files": 2,
                        "value_count": 3
                    },
                    "name": "debian"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 95,
                                "decision_complexity": 0,
                                "extension": ".doxy",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 95,
                                "mime": "text/x-tex; charset=us-ascii",
                                "name": "auth",
                                "nested_complexity": 0,
                                "path": "bloks/webserver/doc/auth.doxy",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2787,
                                "sloc": 0,
                                "type": "LaTeX document, ASCII text"
                            },
                            "name": "auth.doxy",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 188,
                                "decision_complexity": 0,
                                "extension": ".doxy",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 188,
                                "mime": "text/x-tex; charset=us-ascii",
                                "name": "firmwareUpdater",
                                "nested_complexity": 0,
                                "path": "bloks/webserver/doc/firmwareUpdater.doxy",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5002,
                                "sloc": 0,
                                "type": "LaTeX document, ASCII text"
                            },
                            "name": "firmwareUpdater.doxy",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 52,
                                "decision_complexity": 0,
                                "extension": ".doxy",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 52,
                                "mime": "text/x-tex; charset=us-ascii",
                                "name": "powerState",
                                "nested_complexity": 0,
                                "path": "bloks/webserver/doc/powerState.doxy",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1259,
                                "sloc": 0,
                                "type": "LaTeX document, ASCII text"
                            },
                            "name": "powerState.doxy",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 252,
                                "decision_complexity": 0,
                                "extension": ".doxy",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 252,
                                "mime": "text/x-tex; charset=us-ascii",
                                "name": "serviceAPI",
                                "nested_complexity": 0,
                                "path": "bloks/webserver/doc/serviceAPI.doxy",
                                "risks": [],
                                "risks_points": 0,
                                "size": 7923,
                                "sloc": 0,
                                "type": "LaTeX document, ASCII text"
                            },
                            "name": "serviceAPI.doxy",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 199,
                                "decision_complexity": 0,
                                "extension": ".doxy",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 199,
                                "mime": "text/x-tex; charset=us-ascii",
                                "name": "systemInfo",
                                "nested_complexity": 0,
                                "path": "bloks/webserver/doc/systemInfo.doxy",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5641,
                                "sloc": 0,
                                "type": "LaTeX document, ASCII text"
                            },
                            "name": "systemInfo.doxy",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 77,
                                "decision_complexity": 0,
                                "extension": ".doxy",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 77,
                                "mime": "text/x-tex; charset=us-ascii",
                                "name": "systemUpdate",
                                "nested_complexity": 0,
                                "path": "bloks/webserver/doc/systemUpdate.doxy",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2203,
                                "sloc": 0,
                                "type": "LaTeX document, ASCII text"
                            },
                            "name": "systemUpdate.doxy",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 180,
                                "decision_complexity": 0,
                                "extension": ".doxy",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 180,
                                "mime": "text/x-tex; charset=us-ascii",
                                "name": "vehicleState",
                                "nested_complexity": 0,
                                "path": "bloks/webserver/doc/vehicleState.doxy",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5964,
                                "sloc": 0,
                                "type": "LaTeX document, ASCII text"
                            },
                            "name": "vehicleState.doxy",
                            "value": 1
                        }
                    ],
                    "counter": {
                        "bytes_count": 30779,
                        "risks_count": 0,
                        "sloc_count": 0,
                        "source_files": 7,
                        "value_count": 7
                    },
                    "name": "doc"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 18,
                                "blank_lines": 16,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/common/inc/bloks/common/JsonUtils.h",
                                    "bloks/common/inc/bloks/common/Pairs.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QFile",
                                    "QJsonArray",
                                    "QJsonDocument",
                                    "QJsonObject",
                                    "QMap",
                                    "QVariant"
                                ],
                                "loc": 102,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Config",
                                "nested_complexity": 5,
                                "path": "bloks/webserver/src/Config.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3718,
                                "sloc": 86,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Config.cpp",
                            "value": 18
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 15,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QString",
                                    "QVariant"
                                ],
                                "loc": 48,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Config",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/Config.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1058,
                                "sloc": 33,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Config.h",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 17,
                                "blank_lines": 33,
                                "decision_complexity": 10,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Connection.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 198,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Connection",
                                "nested_complexity": 5,
                                "path": "bloks/webserver/src/Connection.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5019,
                                "sloc": 165,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Connection.cpp",
                            "value": 17
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 13,
                                "blank_lines": 19,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/Handler.h",
                                    "bloks/webserver/src/Headers.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/http_parser.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QByteArray",
                                    "QIODevice",
                                    "QObject",
                                    "QString",
                                    "QPointer"
                                ],
                                "loc": 64,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Connection",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/src/Connection.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1217,
                                "sloc": 45,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Connection.h",
                            "value": 13
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 14,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/EP_Authentication.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/Router.h",
                                    "bloks/webserver/src/Task_Login.h",
                                    "bloks/webserver/src/EP_Authentication.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 45,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_Authentication",
                                "nested_complexity": 5,
                                "path": "bloks/webserver/src/EP_Authentication.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1224,
                                "sloc": 31,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_Authentication.cpp",
                            "value": 11
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 9,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 27,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_Authentication",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/src/EP_Authentication.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 461,
                                "sloc": 18,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_Authentication.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 16,
                                "blank_lines": 16,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/EP_FirmwareUpdater.h",
                                    "bloks/webserver/src/Task_FirmwareComponents.h",
                                    "bloks/webserver/src/Task_FirmwareUpdater.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/WebTask.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/can/include/bloks/can/BloksBusDevice.h",
                                    "bloks/dbus/include/bloks/dbus/Connector.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "bloks/interfaces/SystemSetup.h"
                                ],
                                "loc": 69,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_FirmwareUpdater",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/EP_FirmwareUpdater.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1826,
                                "sloc": 53,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_FirmwareUpdater.cpp",
                            "value": 16
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 57,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "atomic",
                                    "functional",
                                    "memory",
                                    "QCoreApplication"
                                ],
                                "loc": 97,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_FirmwareUpdater",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/EP_FirmwareUpdater.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2378,
                                "sloc": 40,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_FirmwareUpdater.h",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 9,
                                "blank_lines": 12,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/webserver/src/EP_LogInterface.h",
                                    "bloks/webserver/src/Task_LogInterface.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 42,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_LogInterface",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/src/EP_LogInterface.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 996,
                                "sloc": 30,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_LogInterface.cpp",
                            "value": 9
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 15,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 35,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_LogInterface",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/EP_LogInterface.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 749,
                                "sloc": 20,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_LogInterface.h",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 15,
                                "blank_lines": 16,
                                "decision_complexity": 4,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/EP_PowerState.h",
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/common/inc/bloks/common/Pairs.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QFile",
                                    "QMap"
                                ],
                                "loc": 60,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_PowerState",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/EP_PowerState.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1543,
                                "sloc": 44,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_PowerState.cpp",
                            "value": 15
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 15,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 20,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_PowerState",
                                "nested_complexity": 1,
                                "path": "bloks/webserver/src/EP_PowerState.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 441,
                                "sloc": 5,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_PowerState.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 21,
                                "blank_lines": 23,
                                "decision_complexity": 5,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/EP_SystemInfo.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/ServiceApiVersion.h",
                                    "bloks/webserver/src/Task_SystemInfo.h",
                                    "bloks/webserver/src/Task_SystemTime.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QFile",
                                    "QJsonDocument",
                                    "QJsonObject",
                                    "QDateTime",
                                    "QTimeZone"
                                ],
                                "loc": 121,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_SystemInfo",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/EP_SystemInfo.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3433,
                                "sloc": 98,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_SystemInfo.cpp",
                            "value": 21
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 26,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QString"
                                ],
                                "loc": 62,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_SystemInfo",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/src/EP_SystemInfo.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1184,
                                "sloc": 36,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_SystemInfo.h",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 10,
                                "blank_lines": 9,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/EP_SystemUpdater.h",
                                    "bloks/webserver/src/Task_SystemUpdater.h",
                                    "bloks/webserver/src/EP_SystemInfo.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/WebTask.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 35,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_SystemUpdater",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/src/EP_SystemUpdater.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 812,
                                "sloc": 26,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_SystemUpdater.cpp",
                            "value": 10
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 34,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "memory"
                                ],
                                "loc": 60,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_SystemUpdater",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/EP_SystemUpdater.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1377,
                                "sloc": 26,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_SystemUpdater.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 17,
                                "blank_lines": 17,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/PropertyBitfields.h",
                                    "bloks/webserver/src/EP_Vehicle.h",
                                    "bloks/webserver/src/Task_VehicleProperty.h",
                                    "bloks/webserver/src/Task_VehicleSetProperty.h",
                                    "bloks/webserver/src/VehicleAccess.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "cmath"
                                ],
                                "loc": 85,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_Vehicle",
                                "nested_complexity": 5,
                                "path": "bloks/webserver/src/EP_Vehicle.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2172,
                                "sloc": 68,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_Vehicle.cpp",
                            "value": 17
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 15,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "memory"
                                ],
                                "loc": 40,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "EP_Vehicle",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/EP_Vehicle.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 741,
                                "sloc": 25,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "EP_Vehicle.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 12,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "functional"
                                ],
                                "loc": 21,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Handler",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/Handler.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 380,
                                "sloc": 9,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Handler.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 10,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Headers.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 38,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Headers",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/Headers.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 705,
                                "sloc": 28,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Headers.cpp",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 10,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QByteArray",
                                    "QString",
                                    "map"
                                ],
                                "loc": 34,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Headers",
                                "nested_complexity": 5,
                                "path": "bloks/webserver/src/Headers.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 640,
                                "sloc": 24,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Headers.h",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 20,
                                "blank_lines": 33,
                                "decision_complexity": 8,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/HttpServer.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/webserver/src/WebTaskInterface.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QDir",
                                    "QFile",
                                    "QSslSocket",
                                    "QLoggingCategory"
                                ],
                                "loc": 140,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "HttpServer",
                                "nested_complexity": 5,
                                "path": "bloks/webserver/src/HttpServer.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 4163,
                                "sloc": 107,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "HttpServer.cpp",
                            "value": 20
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 19,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QSsl",
                                    "QSslCertificate",
                                    "QSslKey",
                                    "QTcpServer"
                                ],
                                "loc": 53,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "HttpServer",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/HttpServer.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1148,
                                "sloc": 34,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "HttpServer.h",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 2,
                                "blank_lines": 4,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QLoggingCategory"
                                ],
                                "loc": 10,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "Log",
                                "nested_complexity": 0,
                                "path": "bloks/webserver/src/Log.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 235,
                                "sloc": 6,
                                "type": "C source, ASCII text"
                            },
                            "name": "Log.h",
                            "value": 2
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 12,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Request.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QUrlQuery",
                                    "utility"
                                ],
                                "loc": 46,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Request",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/src/Request.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 762,
                                "sloc": 34,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Request.cpp",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 9,
                                "blank_lines": 67,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/Headers.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QByteArray",
                                    "QHash",
                                    "QObject",
                                    "QStringList",
                                    "QUrl"
                                ],
                                "loc": 106,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Request",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/src/Request.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2201,
                                "sloc": 39,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Request.h",
                            "value": 9
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 14,
                                "blank_lines": 32,
                                "decision_complexity": 5,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Response.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QJsonDocument"
                                ],
                                "loc": 133,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Response",
                                "nested_complexity": 6,
                                "path": "bloks/webserver/src/Response.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3402,
                                "sloc": 101,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Response.cpp",
                            "value": 14
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 73,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/Headers.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QByteArray",
                                    "QIODevice",
                                    "QJsonObject"
                                ],
                                "loc": 115,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Response",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/Response.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2550,
                                "sloc": 42,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Response.h",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 26,
                                "blank_lines": 31,
                                "decision_complexity": 12,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Router.h",
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QJsonArray",
                                    "algorithm",
                                    "utility"
                                ],
                                "loc": 150,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Router",
                                "nested_complexity": 6,
                                "path": "bloks/webserver/src/Router.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 4399,
                                "sloc": 119,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Router.cpp",
                            "value": 26
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 50,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/Handler.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QString",
                                    "QStringList",
                                    "vector"
                                ],
                                "loc": 84,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Router",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/Router.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2012,
                                "sloc": 34,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Router.h",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 13,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/ScriptExec.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QProcess"
                                ],
                                "loc": 54,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "ScriptExec",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/src/ScriptExec.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 864,
                                "sloc": 41,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "ScriptExec.cpp",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 35,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QByteArray",
                                    "QString"
                                ],
                                "loc": 58,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "ScriptExec",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/ScriptExec.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1055,
                                "sloc": 23,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "ScriptExec.h",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 1,
                                "blank_lines": 2,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [],
                                "loc": 7,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "ServiceApiVersion",
                                "nested_complexity": 1,
                                "path": "bloks/webserver/src/ServiceApiVersion.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 144,
                                "sloc": 5,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "ServiceApiVersion.h",
                            "value": 1
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 20,
                                "blank_lines": 25,
                                "decision_complexity": 8,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/SigVerify.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "openssl/bio.h",
                                    "openssl/err.h",
                                    "openssl/pem.h",
                                    "openssl/x509.h"
                                ],
                                "loc": 113,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "SigVerify",
                                "nested_complexity": 6,
                                "path": "bloks/webserver/src/SigVerify.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2498,
                                "sloc": 88,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "SigVerify.cpp",
                            "value": 20
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 11,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "QByteArray",
                                    "memory",
                                    "openssl/evp.h"
                                ],
                                "loc": 36,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "SigVerify",
                                "nested_complexity": 5,
                                "path": "bloks/webserver/src/SigVerify.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 582,
                                "sloc": 25,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "SigVerify.h",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 11,
                                "decision_complexity": 2,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Task_FirmwareComponents.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 48,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_FirmwareComponents",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/src/Task_FirmwareComponents.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1489,
                                "sloc": 37,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_FirmwareComponents.cpp",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 10,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/WebTask.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "bloks/interfaces/SystemSetup.h"
                                ],
                                "loc": 29,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_FirmwareComponents",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/Task_FirmwareComponents.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 524,
                                "sloc": 19,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_FirmwareComponents.h",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 19,
                                "blank_lines": 22,
                                "decision_complexity": 9,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Task_FirmwareUpdater.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/MultiFirmwareUpdater.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QDir",
                                    "QTemporaryFile"
                                ],
                                "loc": 108,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_FirmwareUpdater",
                                "nested_complexity": 5,
                                "path": "bloks/webserver/src/Task_FirmwareUpdater.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2726,
                                "sloc": 86,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_FirmwareUpdater.cpp",
                            "value": 19
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 11,
                                "blank_lines": 17,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/WebTask.h",
                                    "bloks/can/include/bloks/can/BloksBusDevice.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/AbstractMultiFirmwareUpdater.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "bloks/interfaces/SystemSetup.h",
                                    "QTemporaryFile",
                                    "atomic",
                                    "memory"
                                ],
                                "loc": 48,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_FirmwareUpdater",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/Task_FirmwareUpdater.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 981,
                                "sloc": 31,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_FirmwareUpdater.h",
                            "value": 11
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 26,
                                "blank_lines": 31,
                                "decision_complexity": 11,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/common/inc/bloks/common/JsonUtils.h",
                                    "bloks/common/inc/bloks/common/LogConfig.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/ArchiveUtilities.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/Task_LogInterface.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QDir",
                                    "QJsonDocument",
                                    "QJsonObject"
                                ],
                                "loc": 149,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_LogInterface",
                                "nested_complexity": 5,
                                "path": "bloks/webserver/src/Task_LogInterface.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3928,
                                "sloc": 118,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_LogInterface.cpp",
                            "value": 26
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 16,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/WebTask.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QString"
                                ],
                                "loc": 54,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_LogInterface",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/Task_LogInterface.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 910,
                                "sloc": 38,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_LogInterface.h",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 15,
                                "blank_lines": 18,
                                "decision_complexity": 3,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Task_Login.h",
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/SigVerify.h",
                                    "bloks/common/inc/bloks/common/JsonUtils.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QJsonDocument",
                                    "cassert"
                                ],
                                "loc": 76,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_Login",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/Task_Login.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1992,
                                "sloc": 58,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_Login.cpp",
                            "value": 15
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 15,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/WebTask.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "algorithm",
                                    "functional",
                                    "random"
                                ],
                                "loc": 45,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_Login",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/Task_Login.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 739,
                                "sloc": 30,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_Login.h",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 14,
                                "blank_lines": 10,
                                "decision_complexity": 1,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Task_SystemInfo.h",
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/common/inc/bloks/common/JsonUtils.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QFile",
                                    "QFileInfo",
                                    "QJsonDocument"
                                ],
                                "loc": 50,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_SystemInfo",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/Task_SystemInfo.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1456,
                                "sloc": 40,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_SystemInfo.cpp",
                            "value": 14
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 9,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/WebTask.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 25,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_SystemInfo",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/Task_SystemInfo.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 366,
                                "sloc": 16,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_SystemInfo.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 19,
                                "blank_lines": 20,
                                "decision_complexity": 7,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Task_SystemTime.h",
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/common/inc/bloks/common/JsonUtils.h",
                                    "bloks/common/inc/bloks/common/UnixTime.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QJsonDocument",
                                    "QUrlQuery"
                                ],
                                "loc": 89,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_SystemTime",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/src/Task_SystemTime.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2462,
                                "sloc": 69,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_SystemTime.cpp",
                            "value": 19
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 10,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/WebTask.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 29,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_SystemTime",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/Task_SystemTime.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 424,
                                "sloc": 19,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_SystemTime.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 50,
                                "blank_lines": 46,
                                "decision_complexity": 33,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Task_SystemUpdater.h",
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/webserver/src/ScriptExec.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/can/include/bloks/can/BloksBusDevice.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QElapsedTimer",
                                    "QLoggingCategory",
                                    "cstring",
                                    "sys/reboot.h",
                                    "unistd.h",
                                    "utility",
                                    "zlib.h"
                                ],
                                "loc": 344,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_SystemUpdater",
                                "nested_complexity": 5,
                                "path": "bloks/webserver/src/Task_SystemUpdater.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 10079,
                                "sloc": 298,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_SystemUpdater.cpp",
                            "value": 50
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 10,
                                "blank_lines": 14,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/WebTask.h",
                                    "bloks/webserver/src/SigVerify.h",
                                    "bloks/webserver/src/EP_SystemInfo.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QCryptographicHash",
                                    "QFile",
                                    "QTimer"
                                ],
                                "loc": 60,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_SystemUpdater",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/Task_SystemUpdater.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1257,
                                "sloc": 46,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_SystemUpdater.h",
                            "value": 10
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 18,
                                "blank_lines": 16,
                                "decision_complexity": 7,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Task_VehicleProperty.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/VehicleAccess.h",
                                    "bloks/common/inc/bloks/common/PropertyBitfields.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QUrlQuery"
                                ],
                                "loc": 91,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_VehicleProperty",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/Task_VehicleProperty.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 2950,
                                "sloc": 75,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_VehicleProperty.cpp",
                            "value": 18
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 4,
                                "blank_lines": 12,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/WebTask.h",
                                    "bloks/common/inc/bloks/common/Property.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 35,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_VehicleProperty",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/Task_VehicleProperty.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 568,
                                "sloc": 23,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_VehicleProperty.h",
                            "value": 4
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 21,
                                "blank_lines": 18,
                                "decision_complexity": 10,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Task_VehicleSetProperty.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/webserver/src/VehicleAccess.h",
                                    "bloks/common/inc/bloks/common/PropertyBitfields.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QUrlQuery"
                                ],
                                "loc": 120,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_VehicleSetProperty",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/Task_VehicleSetProperty.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 4080,
                                "sloc": 102,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_VehicleSetProperty.cpp",
                            "value": 21
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 3,
                                "blank_lines": 11,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/Task_VehicleProperty.h"
                                ],
                                "is_code": true,
                                "libraries": [],
                                "loc": 33,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "Task_VehicleSetProperty",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/Task_VehicleSetProperty.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 554,
                                "sloc": 22,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "Task_VehicleSetProperty.h",
                            "value": 3
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 37,
                                "blank_lines": 35,
                                "decision_complexity": 29,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/VehicleAccess.h",
                                    "bloks/common/inc/bloks/common/PropertyBitfields.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QDate"
                                ],
                                "loc": 221,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "VehicleAccess",
                                "nested_complexity": 5,
                                "path": "bloks/webserver/src/VehicleAccess.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 6023,
                                "sloc": 186,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "VehicleAccess.cpp",
                            "value": 37
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 6,
                                "blank_lines": 11,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/common/inc/bloks/common/PropertyStorage.h",
                                    "bloks/dbus/include/bloks/dbus/DBusPropertyProvider.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "mutex"
                                ],
                                "loc": 40,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "VehicleAccess",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/src/VehicleAccess.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 978,
                                "sloc": 29,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "VehicleAccess.h",
                            "value": 6
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 36,
                                "decision_complexity": 0,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/WebTaskInterface.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QRunnable",
                                    "QThreadPool",
                                    "type_traits"
                                ],
                                "loc": 76,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "WebTask",
                                "nested_complexity": 4,
                                "path": "bloks/webserver/src/WebTask.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1674,
                                "sloc": 40,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "WebTask.h",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 22,
                                "blank_lines": 34,
                                "decision_complexity": 10,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/WebTaskInterface.h",
                                    "bloks/frontend-sdk/src/Log.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QElapsedTimer",
                                    "QEventLoop",
                                    "QThread",
                                    "QTimer"
                                ],
                                "loc": 192,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "WebTaskInterface",
                                "nested_complexity": 6,
                                "path": "bloks/webserver/src/WebTaskInterface.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 5379,
                                "sloc": 158,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "WebTaskInterface.cpp",
                            "value": 22
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 14,
                                "blank_lines": 163,
                                "decision_complexity": 2,
                                "extension": ".h",
                                "imports": [
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QEventLoop",
                                    "QMutex",
                                    "QWaitCondition",
                                    "functional"
                                ],
                                "loc": 249,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "WebTaskInterface",
                                "nested_complexity": 6,
                                "path": "bloks/webserver/src/WebTaskInterface.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 7067,
                                "sloc": 86,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "WebTaskInterface.h",
                            "value": 14
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 244,
                                "blank_lines": 621,
                                "decision_complexity": 229,
                                "extension": ".c",
                                "imports": [
                                    "bloks/webserver/src/http_parser.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "assert.h",
                                    "stddef.h",
                                    "ctype.h",
                                    "stdlib.h",
                                    "string.h",
                                    "limits.h"
                                ],
                                "loc": 2471,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "http_parser",
                                "nested_complexity": 8,
                                "path": "bloks/webserver/src/http_parser.c",
                                "risks": [
                                    "[error] Way too many lines of code, refactoring is required.",
                                    "[error] Way too many decisions, full code coverage is required.",
                                    "[warning] Quite many nested code blocks, most of the code is in the right half of the screen."
                                ],
                                "risks_points": 26,
                                "size": 71274,
                                "sloc": 1850,
                                "type": "C source, ASCII text"
                            },
                            "name": "http_parser.c",
                            "value": 244
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 8,
                                "blank_lines": 153,
                                "decision_complexity": 1,
                                "extension": ".h",
                                "imports": [],
                                "is_code": true,
                                "libraries": [
                                    "sys/types.h",
                                    "BaseTsd.h",
                                    "stddef.h",
                                    "stdint.h"
                                ],
                                "loc": 363,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "http_parser",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/src/http_parser.h",
                                "risks": [],
                                "risks_points": 0,
                                "size": 13889,
                                "sloc": 210,
                                "type": "C source, ASCII text"
                            },
                            "name": "http_parser.h",
                            "value": 8
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 30,
                                "blank_lines": 35,
                                "decision_complexity": 4,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/can/include/bloks/can/BloksBusDevice.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/common/inc/bloks/common/UnixSignals.h",
                                    "bloks/firmware-updater/include/bloks/firmware-updater/MultiFirmwareUpdater.h",
                                    "bloks/bluetoothserver/src/Config.h",
                                    "bloks/webserver/src/Connection.h",
                                    "bloks/webserver/src/HttpServer.h",
                                    "bloks/frontend-sdk/src/Log.h",
                                    "bloks/webserver/src/Router.h",
                                    "bloks/webserver/src/EP_Authentication.h",
                                    "bloks/webserver/src/EP_FirmwareUpdater.h",
                                    "bloks/webserver/src/EP_LogInterface.h",
                                    "bloks/webserver/src/EP_PowerState.h",
                                    "bloks/webserver/src/EP_SystemInfo.h",
                                    "bloks/webserver/src/EP_SystemUpdater.h",
                                    "bloks/webserver/src/EP_Vehicle.h"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QCommandLineParser",
                                    "QCoreApplication",
                                    "QTcpServer",
                                    "QTcpSocket",
                                    "QThreadPool",
                                    "cstring",
                                    "bloks/webserver-version.h"
                                ],
                                "loc": 209,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "main",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/src/main.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 8039,
                                "sloc": 174,
                                "type": "C source, ASCII text"
                            },
                            "name": "main.cpp",
                            "value": 30
                        }
                    ],
                    "counter": {
                        "bytes_count": 209897,
                        "risks_count": 3,
                        "sloc_count": 5468,
                        "source_files": 61,
                        "value_count": 944
                    },
                    "name": "src"
                },
                {
                    "children": [
                        {
                            "meta": {
                                "aggregate_complexity": 12,
                                "blank_lines": 143,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Connection.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/Router.h",
                                    "bloks/webserver/tests/TestConnection.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QBuffer",
                                    "QJsonDocument",
                                    "QTest",
                                    "QTimer"
                                ],
                                "loc": 501,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestConnection",
                                "nested_complexity": 3,
                                "path": "bloks/webserver/tests/TestConnection.cpp",
                                "risks": [
                                    "[info] Arguably many lines of code, this may be ok for now."
                                ],
                                "risks_points": 2,
                                "size": 16131,
                                "sloc": 358,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestConnection.cpp",
                            "value": 12
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 7,
                                "blank_lines": 26,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Headers.h",
                                    "bloks/webserver/tests/TestHeaders.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QByteArray",
                                    "QString",
                                    "QTest"
                                ],
                                "loc": 103,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestHeaders",
                                "nested_complexity": 2,
                                "path": "bloks/webserver/tests/TestHeaders.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 3042,
                                "sloc": 77,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestHeaders.cpp",
                            "value": 7
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 5,
                                "blank_lines": 18,
                                "decision_complexity": 0,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/ScriptExec.h",
                                    "bloks/webserver/tests/TestScriptExec.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QObject",
                                    "QtTest"
                                ],
                                "loc": 60,
                                "mime": "text/x-c; charset=us-ascii",
                                "name": "TestScriptExec",
                                "nested_complexity": 1,
                                "path": "bloks/webserver/tests/TestScriptExec.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 1665,
                                "sloc": 42,
                                "type": "C source, ASCII text"
                            },
                            "name": "TestScriptExec.cpp",
                            "value": 5
                        },
                        {
                            "meta": {
                                "aggregate_complexity": 27,
                                "blank_lines": 54,
                                "decision_complexity": 11,
                                "extension": ".cpp",
                                "imports": [
                                    "bloks/webserver/src/Headers.h",
                                    "bloks/webserver/src/Request.h",
                                    "bloks/webserver/src/Response.h",
                                    "bloks/webserver/src/WebTask.h",
                                    "bloks/webserver/tests/TestWebTask.cpp"
                                ],
                                "is_code": true,
                                "libraries": [
                                    "QBuffer",
                                    "QJsonArray",
                                    "QJsonDocument",
                                    "QJsonObject",
                                    "QTest",
                                    "QTimer"
                                ],
                                "loc": 287,
                                "mime": "text/x-c++; charset=us-ascii",
                                "name": "TestWebTask",
                                "nested_complexity": 5,
                                "path": "bloks/webserver/tests/TestWebTask.cpp",
                                "risks": [],
                                "risks_points": 0,
                                "size": 8218,
                                "sloc": 233,
                                "type": "C++ source, ASCII text"
                            },
                            "name": "TestWebTask.cpp",
                            "value": 27
                        }
                    ],
                    "counter": {
                        "bytes_count": 29056,
                        "risks_count": 1,
                        "sloc_count": 710,
                        "source_files": 4,
                        "value_count": 51
                    },
                    "name": "tests"
                }
            ],
            "counter": {
                "bytes_count": 270044,
                "risks_count": 4,
                "sloc_count": 6192,
                "source_files": 74,
                "value_count": 1005
            },
            "name": "webserver"
        }
    ],
    "counter": {
        "bytes_count": 1344837,
        "risks_count": 24,
        "sloc_count": 32460,
        "source_files": 427,
        "value_count": 4884
    },
    "name": "bloks"
}